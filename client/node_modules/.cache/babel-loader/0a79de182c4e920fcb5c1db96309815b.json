{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, LRN } from '@tensorflow/tfjs-core';\nimport { LRNProgram } from '../lrn_gpu';\nimport { LRNPackedProgram } from '../lrn_packed_gpu';\nexport const lrn = args => {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    depthRadius,\n    bias,\n    alpha,\n    beta\n  } = attrs;\n  const program = env().getBool('WEBGL_PACK_NORMALIZATION') ? new LRNPackedProgram(x.shape, depthRadius, bias, alpha, beta) : new LRNProgram(x.shape, depthRadius, bias, alpha, beta);\n  return backend.runWebGLProgram(program, [x], x.dtype);\n}; // tslint:disable-next-line: variable-name\n\nexport const LRNConfig = {\n  kernelName: LRN,\n  backendName: 'webgl',\n  kernelFunc: lrn\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,GAAR,EAAuCC,GAAvC,QAAkF,uBAAlF;AAGA,SAAQC,UAAR,QAAyB,YAAzB;AACA,SAAQC,gBAAR,QAA+B,mBAA/B;AAEA,OAAO,MAAMC,GAAG,GACXC,IAAD,IACiB;AACX,QAAM;AAACC,UAAD;AAASC,WAAT;AAAkBC;AAAlB,MAA2BH,IAAjC;AACA,QAAM;AAACI;AAAD,MAAMH,MAAZ;AACA,QAAM;AAACI,eAAD;AAAcC,QAAd;AAAoBC,SAApB;AAA2BC;AAA3B,MAAmCL,KAAzC;AAEA,QAAMM,OAAO,GAAGd,GAAG,GAAGe,OAAN,CAAc,0BAAd,IACZ,IAAIZ,gBAAJ,CAAqBM,CAAC,CAACO,KAAvB,EAA8BN,WAA9B,EAA2CC,IAA3C,EAAiDC,KAAjD,EAAwDC,IAAxD,CADY,GAEZ,IAAIX,UAAJ,CAAeO,CAAC,CAACO,KAAjB,EAAwBN,WAAxB,EAAqCC,IAArC,EAA2CC,KAA3C,EAAkDC,IAAlD,CAFJ;AAGA,SAAON,OAAO,CAACU,eAAR,CAAwBH,OAAxB,EAAiC,CAACL,CAAD,CAAjC,EAAsCA,CAAC,CAACS,KAAxC,CAAP;AACD,CAXF,C,CAaP;;AACA,OAAO,MAAMC,SAAS,GAAiB;AACrCC,YAAU,EAAEnB,GADyB;AAErCoB,aAAW,EAAE,OAFwB;AAGrCC,YAAU,EAAElB;AAHyB,CAAhC","names":["env","LRN","LRNProgram","LRNPackedProgram","lrn","args","inputs","backend","attrs","x","depthRadius","bias","alpha","beta","program","getBool","shape","runWebGLProgram","dtype","LRNConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/LRN.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env, KernelConfig, KernelFunc, LRN, LRNAttrs, LRNInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {LRNProgram} from '../lrn_gpu';\nimport {LRNPackedProgram} from '../lrn_packed_gpu';\n\nexport const lrn =\n    (args: {inputs: LRNInputs, backend: MathBackendWebGL, attrs: LRNAttrs}):\n        TensorInfo => {\n          const {inputs, backend, attrs} = args;\n          const {x} = inputs;\n          const {depthRadius, bias, alpha, beta} = attrs;\n\n          const program = env().getBool('WEBGL_PACK_NORMALIZATION') ?\n              new LRNPackedProgram(x.shape, depthRadius, bias, alpha, beta) :\n              new LRNProgram(x.shape, depthRadius, bias, alpha, beta);\n          return backend.runWebGLProgram(program, [x], x.dtype);\n        };\n\n// tslint:disable-next-line: variable-name\nexport const LRNConfig: KernelConfig = {\n  kernelName: LRN,\n  backendName: 'webgl',\n  kernelFunc: lrn as {} as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module"}