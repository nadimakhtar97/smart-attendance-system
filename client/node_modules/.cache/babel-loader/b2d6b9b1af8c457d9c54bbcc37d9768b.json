{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SparseToDense } from '@tensorflow/tfjs-core';\nimport { ScatterProgram } from '../scatter_gpu';\nimport { reshape } from './Reshape';\nexport function sparseToDense(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    sparseIndices,\n    sparseValues,\n    defaultValue\n  } = inputs;\n  const {\n    outputShape\n  } = attrs;\n  const {\n    sliceRank,\n    numUpdates,\n    strides,\n    outputSize\n  } = backend_util.calculateShapes(sparseValues, sparseIndices, outputShape);\n  const sumDupeIndices = false;\n  const program = new ScatterProgram(numUpdates, sliceRank, sparseIndices.shape.length, sparseValues.shape.length, strides, [outputSize, 1], sumDupeIndices);\n  const res = backend.runWebGLProgram(program, [sparseValues, sparseIndices, defaultValue], sparseValues.dtype);\n  const reshaped = reshape({\n    inputs: {\n      x: res\n    },\n    backend,\n    attrs: {\n      shape: outputShape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(res);\n  return reshaped;\n}\nexport const sparseToDenseConfig = {\n  kernelName: SparseToDense,\n  backendName: 'webgl',\n  kernelFunc: sparseToDense\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAR,EAAgDC,aAAhD,QAAyH,uBAAzH;AAGA,SAAQC,cAAR,QAA6B,gBAA7B;AACA,SAAQC,OAAR,QAAsB,WAAtB;AAEA,OAAM,SAAUC,aAAV,CAAwBC,IAAxB,EAIL;AACC,QAAM;AAACC,UAAD;AAASC,WAAT;AAAkBC;AAAlB,MAA2BH,IAAjC;AACA,QAAM;AAACI,iBAAD;AAAgBC,gBAAhB;AAA8BC;AAA9B,MAA8CL,MAApD;AACA,QAAM;AAACM;AAAD,MAAgBJ,KAAtB;AAEA,QAAM;AAACK,aAAD;AAAYC,cAAZ;AAAwBC,WAAxB;AAAiCC;AAAjC,MACFhB,YAAY,CAACiB,eAAb,CAA6BP,YAA7B,EAA2CD,aAA3C,EAA0DG,WAA1D,CADJ;AAGA,QAAMM,cAAc,GAAG,KAAvB;AACA,QAAMC,OAAO,GAAG,IAAIjB,cAAJ,CACZY,UADY,EACAD,SADA,EACWJ,aAAa,CAACW,KAAd,CAAoBC,MAD/B,EAEZX,YAAY,CAACU,KAAb,CAAmBC,MAFP,EAEeN,OAFf,EAEwB,CAACC,UAAD,EAAa,CAAb,CAFxB,EAEyCE,cAFzC,CAAhB;AAIA,QAAMI,GAAG,GAAGf,OAAO,CAACgB,eAAR,CACRJ,OADQ,EACC,CAACT,YAAD,EAAeD,aAAf,EAA8BE,YAA9B,CADD,EAC8CD,YAAY,CAACc,KAD3D,CAAZ;AAGA,QAAMC,QAAQ,GACVtB,OAAO,CAAC;AAACG,UAAM,EAAE;AAACoB,OAAC,EAAEJ;AAAJ,KAAT;AAAmBf,WAAnB;AAA4BC,SAAK,EAAE;AAACY,WAAK,EAAER;AAAR;AAAnC,GAAD,CADX;AAGAL,SAAO,CAACoB,6BAAR,CAAsCL,GAAtC;AACA,SAAOG,QAAP;AACD;AAED,OAAO,MAAMG,mBAAmB,GAAiB;AAC/CC,YAAU,EAAE5B,aADmC;AAE/C6B,aAAW,EAAE,OAFkC;AAG/CC,YAAU,EAAE3B;AAHmC,CAA1C","names":["backend_util","SparseToDense","ScatterProgram","reshape","sparseToDense","args","inputs","backend","attrs","sparseIndices","sparseValues","defaultValue","outputShape","sliceRank","numUpdates","strides","outputSize","calculateShapes","sumDupeIndices","program","shape","length","res","runWebGLProgram","dtype","reshaped","x","disposeIntermediateTensorInfo","sparseToDenseConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/SparseToDense.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, SparseToDense, SparseToDenseAttrs, SparseToDenseInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {ScatterProgram} from '../scatter_gpu';\nimport {reshape} from './Reshape';\n\nexport function sparseToDense(args: {\n  inputs: SparseToDenseInputs,\n  backend: MathBackendWebGL,\n  attrs: SparseToDenseAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {sparseIndices, sparseValues, defaultValue} = inputs;\n  const {outputShape} = attrs;\n\n  const {sliceRank, numUpdates, strides, outputSize} =\n      backend_util.calculateShapes(sparseValues, sparseIndices, outputShape);\n\n  const sumDupeIndices = false;\n  const program = new ScatterProgram(\n      numUpdates, sliceRank, sparseIndices.shape.length,\n      sparseValues.shape.length, strides, [outputSize, 1], sumDupeIndices);\n\n  const res = backend.runWebGLProgram(\n      program, [sparseValues, sparseIndices, defaultValue], sparseValues.dtype);\n\n  const reshaped =\n      reshape({inputs: {x: res}, backend, attrs: {shape: outputShape}});\n\n  backend.disposeIntermediateTensorInfo(res);\n  return reshaped;\n}\n\nexport const sparseToDenseConfig: KernelConfig = {\n  kernelName: SparseToDense,\n  backendName: 'webgl',\n  kernelFunc: sparseToDense as {} as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module"}