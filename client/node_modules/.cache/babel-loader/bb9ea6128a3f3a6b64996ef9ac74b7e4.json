{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { unique } from '../../ops/unique';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.unique = function (axis) {\n  this.throwIfDisposed();\n  return unique(this, axis);\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,MAAR,QAAqB,kBAArB;AACA,SAAQC,oBAAR,QAA2C,cAA3C;;AASAA,oBAAoB,GAAGC,SAAvB,CAAiCF,MAAjC,GAA0C,UAC7BG,IAD6B,EAChB;AACxB,OAAKC,eAAL;AACA,SAAOJ,MAAM,CAAC,IAAD,EAAOG,IAAP,CAAb;AACD,CAJD","names":["unique","getGlobalTensorClass","prototype","axis","throwIfDisposed"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-core/src/public/chained_ops/unique.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {unique} from '../../ops/unique';\nimport {getGlobalTensorClass, Tensor} from '../../tensor';\nimport {Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    unique<T extends Tensor>(this: T, axis?: number): {values: T, indices: T};\n  }\n}\n\ngetGlobalTensorClass().prototype.unique = function<T extends Tensor>(\n    this: T, axis?: number): {values: T, indices: T} {\n  this.throwIfDisposed();\n  return unique(this, axis) as {values: T, indices: T};\n};\n"]},"metadata":{},"sourceType":"module"}