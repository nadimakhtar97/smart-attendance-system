{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Asinh } from '../kernel_names';\nimport { add } from '../ops/add';\nimport { cast } from '../ops/cast';\nimport { div } from '../ops/div';\nimport { scalar } from '../ops/scalar';\nimport { sqrt } from '../ops/sqrt';\nimport { square } from '../ops/square';\nexport const asinhGradConfig = {\n  kernelName: Asinh,\n  inputsToSave: ['x'],\n  gradFunc: (dy, saved) => {\n    const [x] = saved;\n    return {\n      x: () => {\n        const a = sqrt(add(scalar(1), square(cast(x, 'float32'))));\n        return div(dy, a);\n      }\n    };\n  }\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,KAAR,QAAoB,iBAApB;AAEA,SAAQC,GAAR,QAAkB,YAAlB;AACA,SAAQC,IAAR,QAAmB,aAAnB;AACA,SAAQC,GAAR,QAAkB,YAAlB;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,SAAQC,IAAR,QAAmB,aAAnB;AACA,SAAQC,MAAR,QAAqB,eAArB;AAGA,OAAO,MAAMC,eAAe,GAAe;AACzCC,YAAU,EAAER,KAD6B;AAEzCS,cAAY,EAAE,CAAC,GAAD,CAF2B;AAGzCC,UAAQ,EAAE,CAACC,EAAD,EAAaC,KAAb,KAAgC;AACxC,UAAM,CAACC,CAAD,IAAMD,KAAZ;AAEA,WAAO;AACLC,OAAC,EAAE,MAAK;AACN,cAAMC,CAAC,GAAGT,IAAI,CAACJ,GAAG,CAACG,MAAM,CAAC,CAAD,CAAP,EAAYE,MAAM,CAACJ,IAAI,CAACW,CAAD,EAAI,SAAJ,CAAL,CAAlB,CAAJ,CAAd;AACA,eAAOV,GAAG,CAACQ,EAAD,EAAKG,CAAL,CAAV;AACD;AAJI,KAAP;AAMD;AAZwC,CAApC","names":["Asinh","add","cast","div","scalar","sqrt","square","asinhGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","x","a"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-core/src/gradients/Asinh_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Asinh} from '../kernel_names';\nimport {GradConfig} from '../kernel_registry';\nimport {add} from '../ops/add';\nimport {cast} from '../ops/cast';\nimport {div} from '../ops/div';\nimport {scalar} from '../ops/scalar';\nimport {sqrt} from '../ops/sqrt';\nimport {square} from '../ops/square';\nimport {Tensor} from '../tensor';\n\nexport const asinhGradConfig: GradConfig = {\n  kernelName: Asinh,\n  inputsToSave: ['x'],\n  gradFunc: (dy: Tensor, saved: Tensor[]) => {\n    const [x] = saved;\n\n    return {\n      x: () => {\n        const a = sqrt(add(scalar(1), square(cast(x, 'float32'))));\n        return div(dy, a);\n      }\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}