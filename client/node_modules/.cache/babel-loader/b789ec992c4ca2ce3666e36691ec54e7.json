{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class AddNProgram {\n  constructor(outputShape, shapes) {\n    this.outputShape = [];\n    this.outputShape = outputShape;\n    this.variableNames = shapes.map((_, i) => `T${i}`);\n    const snippets = []; // Get target elements from every input tensor.\n\n    this.variableNames.forEach(variable => {\n      snippets.push(`float v${variable} = get${variable}AtOutCoords();`);\n    }); // Calculate the sum of all elements.\n\n    const operation = this.variableNames.map(variable => {\n      return `v${variable}`;\n    }).join(' + ');\n    this.userCode = `\n      void main() {\n        ${snippets.join('\\n        ')}\n\n        float result = ${operation};\n        setOutput(result);\n      }\n    `;\n  }\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAmBA,OAAM,MAAOA,WAAP,CAAkB;AAKtBC,cAAYC,WAAZ,EAAmCC,MAAnC,EAAqD;AAHrD,uBAAwB,EAAxB;AAIE,SAAKD,WAAL,GAAmBA,WAAnB;AACA,SAAKE,aAAL,GAAqBD,MAAM,CAACE,GAAP,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIA,CAAC,EAA1B,CAArB;AAEA,UAAMC,QAAQ,GAAa,EAA3B,CAJmD,CAKnD;;AACA,SAAKJ,aAAL,CAAmBK,OAAnB,CAA2BC,QAAQ,IAAG;AACpCF,cAAQ,CAACG,IAAT,CAAc,UAAUD,QAAQ,SAASA,QAAQ,gBAAjD;AACD,KAFD,EANmD,CAUnD;;AACA,UAAME,SAAS,GAAG,KAAKR,aAAL,CACKC,GADL,CACSK,QAAQ,IAAG;AACd,aAAO,IAAIA,QAAQ,EAAnB;AACD,KAHL,EAIKG,IAJL,CAIU,KAJV,CAAlB;AAMA,SAAKC,QAAL,GAAgB;;UAEVN,QAAQ,CAACK,IAAT,CAAc,YAAd,CAA2B;;yBAEZD,SAAS;;;KAJ9B;AAQD;;AA9BqB","names":["AddNProgram","constructor","outputShape","shapes","variableNames","map","_","i","snippets","forEach","variable","push","operation","join","userCode"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/addn_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class AddNProgram implements GPGPUProgram {\n  variableNames: string[];\n  outputShape: number[] = [];\n  userCode: string;\n\n  constructor(outputShape: number[], shapes: number[][]) {\n    this.outputShape = outputShape;\n    this.variableNames = shapes.map((_, i) => `T${i}`);\n\n    const snippets: string[] = [];\n    // Get target elements from every input tensor.\n    this.variableNames.forEach(variable => {\n      snippets.push(`float v${variable} = get${variable}AtOutCoords();`);\n    });\n\n    // Calculate the sum of all elements.\n    const operation = this.variableNames\n                          .map(variable => {\n                            return `v${variable}`;\n                          })\n                          .join(' + ');\n\n    this.userCode = `\n      void main() {\n        ${snippets.join('\\n        ')}\n\n        float result = ${operation};\n        setOutput(result);\n      }\n    `;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}