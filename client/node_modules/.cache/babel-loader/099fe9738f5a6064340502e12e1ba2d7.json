{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport '../flags';\nimport { env } from '../environment';\nimport { BrowserIndexedDB, BrowserIndexedDBManager } from '../io/indexed_db';\nimport { BrowserLocalStorage, BrowserLocalStorageManager } from '../io/local_storage';\nimport { ModelStoreManagerRegistry } from '../io/model_management';\nexport class PlatformBrowser {\n  fetch(path, init) {\n    return fetch(path, init);\n  }\n\n  now() {\n    return performance.now();\n  }\n\n  encode(text, encoding) {\n    if (encoding !== 'utf-8' && encoding !== 'utf8') {\n      throw new Error(`Browser's encoder only supports utf-8, but got ${encoding}`);\n    }\n\n    if (this.textEncoder == null) {\n      this.textEncoder = new TextEncoder();\n    }\n\n    return this.textEncoder.encode(text);\n  }\n\n  decode(bytes, encoding) {\n    return new TextDecoder(encoding).decode(bytes);\n  }\n\n}\n\nif (env().get('IS_BROWSER')) {\n  env().setPlatform('browser', new PlatformBrowser()); // Register LocalStorage IOHandler\n\n  try {\n    ModelStoreManagerRegistry.registerManager(BrowserLocalStorage.URL_SCHEME, new BrowserLocalStorageManager());\n  } catch (err) {} // Register IndexedDB IOHandler\n\n\n  try {\n    ModelStoreManagerRegistry.registerManager(BrowserIndexedDB.URL_SCHEME, new BrowserIndexedDBManager());\n  } catch (err) {}\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,OAAO,UAAP;AAEA,SAAQA,GAAR,QAAkB,gBAAlB;AACA,SAAQC,gBAAR,EAA0BC,uBAA1B,QAAwD,kBAAxD;AACA,SAAQC,mBAAR,EAA6BC,0BAA7B,QAA8D,qBAA9D;AACA,SAAQC,yBAAR,QAAwC,wBAAxC;AAIA,OAAM,MAAOC,eAAP,CAAsB;AAK1BC,OAAK,CAACC,IAAD,EAAeC,IAAf,EAAiC;AACpC,WAAOF,KAAK,CAACC,IAAD,EAAOC,IAAP,CAAZ;AACD;;AAEDC,KAAG;AACD,WAAOC,WAAW,CAACD,GAAZ,EAAP;AACD;;AAEDE,QAAM,CAACC,IAAD,EAAeC,QAAf,EAA+B;AACnC,QAAIA,QAAQ,KAAK,OAAb,IAAwBA,QAAQ,KAAK,MAAzC,EAAiD;AAC/C,YAAM,IAAIC,KAAJ,CACF,kDAAkDD,QAAQ,EADxD,CAAN;AAED;;AACD,QAAI,KAAKE,WAAL,IAAoB,IAAxB,EAA8B;AAC5B,WAAKA,WAAL,GAAmB,IAAIC,WAAJ,EAAnB;AACD;;AACD,WAAO,KAAKD,WAAL,CAAiBJ,MAAjB,CAAwBC,IAAxB,CAAP;AACD;;AACDK,QAAM,CAACC,KAAD,EAAoBL,QAApB,EAAoC;AACxC,WAAO,IAAIM,WAAJ,CAAgBN,QAAhB,EAA0BI,MAA1B,CAAiCC,KAAjC,CAAP;AACD;;AAzByB;;AA4B5B,IAAInB,GAAG,GAAGqB,GAAN,CAAU,YAAV,CAAJ,EAA6B;AAC3BrB,KAAG,GAAGsB,WAAN,CAAkB,SAAlB,EAA6B,IAAIhB,eAAJ,EAA7B,EAD2B,CAG3B;;AACA,MAAI;AACFD,6BAAyB,CAACkB,eAA1B,CACIpB,mBAAmB,CAACqB,UADxB,EACoC,IAAIpB,0BAAJ,EADpC;AAED,GAHD,CAGE,OAAOqB,GAAP,EAAY,CACb,CAR0B,CAU3B;;;AACA,MAAI;AACFpB,6BAAyB,CAACkB,eAA1B,CACItB,gBAAgB,CAACuB,UADrB,EACiC,IAAItB,uBAAJ,EADjC;AAED,GAHD,CAGE,OAAOuB,GAAP,EAAY,CACb;AACF","names":["env","BrowserIndexedDB","BrowserIndexedDBManager","BrowserLocalStorage","BrowserLocalStorageManager","ModelStoreManagerRegistry","PlatformBrowser","fetch","path","init","now","performance","encode","text","encoding","Error","textEncoder","TextEncoder","decode","bytes","TextDecoder","get","setPlatform","registerManager","URL_SCHEME","err"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-core/src/platforms/platform_browser.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport '../flags';\n\nimport {env} from '../environment';\nimport {BrowserIndexedDB, BrowserIndexedDBManager} from '../io/indexed_db';\nimport {BrowserLocalStorage, BrowserLocalStorageManager} from '../io/local_storage';\nimport {ModelStoreManagerRegistry} from '../io/model_management';\n\nimport {Platform} from './platform';\n\nexport class PlatformBrowser implements Platform {\n  // According to the spec, the built-in encoder can do only UTF-8 encoding.\n  // https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder/TextEncoder\n  private textEncoder: TextEncoder;\n\n  fetch(path: string, init?: RequestInit): Promise<Response> {\n    return fetch(path, init);\n  }\n\n  now(): number {\n    return performance.now();\n  }\n\n  encode(text: string, encoding: string): Uint8Array {\n    if (encoding !== 'utf-8' && encoding !== 'utf8') {\n      throw new Error(\n          `Browser's encoder only supports utf-8, but got ${encoding}`);\n    }\n    if (this.textEncoder == null) {\n      this.textEncoder = new TextEncoder();\n    }\n    return this.textEncoder.encode(text);\n  }\n  decode(bytes: Uint8Array, encoding: string): string {\n    return new TextDecoder(encoding).decode(bytes);\n  }\n}\n\nif (env().get('IS_BROWSER')) {\n  env().setPlatform('browser', new PlatformBrowser());\n\n  // Register LocalStorage IOHandler\n  try {\n    ModelStoreManagerRegistry.registerManager(\n        BrowserLocalStorage.URL_SCHEME, new BrowserLocalStorageManager());\n  } catch (err) {\n  }\n\n  // Register IndexedDB IOHandler\n  try {\n    ModelStoreManagerRegistry.registerManager(\n        BrowserIndexedDB.URL_SCHEME, new BrowserIndexedDBManager());\n  } catch (err) {\n  }\n}\n"]},"metadata":{},"sourceType":"module"}