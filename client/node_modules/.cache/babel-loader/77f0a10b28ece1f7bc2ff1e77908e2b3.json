{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport { backend } from '@tensorflow/tfjs-core';\n\nlet _epsilon;\n/**\n * Returns the value of the fuzz factor used in numeric expressions.\n */\n\n\nexport function epsilon() {\n  if (_epsilon == null) {\n    _epsilon = backend().epsilon();\n  }\n\n  return _epsilon;\n}\n/**\n * Sets the value of the fuzz factor used in numeric expressions.\n * @param e New value of epsilon.\n */\n\nexport function setEpsilon(e) {\n  _epsilon = e;\n}\n/**\n * Returns the default image data format convention.\n */\n\nexport function imageDataFormat() {\n  return 'channelsLast';\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;AAUA,SAAQA,OAAR,QAAsB,uBAAtB;;AAGA,IAAIC,QAAJ;AAEA;;;;;AAGA,OAAM,SAAUC,OAAV,GAAiB;AACrB,MAAID,QAAQ,IAAI,IAAhB,EAAsB;AACpBA,YAAQ,GAAGD,OAAO,GAAGE,OAAV,EAAX;AACD;;AACD,SAAOD,QAAP;AACD;AAED;;;;;AAIA,OAAM,SAAUE,UAAV,CAAqBC,CAArB,EAA8B;AAClCH,UAAQ,GAAGG,CAAX;AACD;AAED;;;;AAGA,OAAM,SAAUC,eAAV,GAAyB;AAC7B,SAAO,cAAP;AACD","names":["backend","_epsilon","epsilon","setEpsilon","e","imageDataFormat"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-layers/src/backend/common.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport {backend} from '@tensorflow/tfjs-core';\nimport {DataFormat} from '../keras_format/common';\n\nlet _epsilon: number;\n\n/**\n * Returns the value of the fuzz factor used in numeric expressions.\n */\nexport function epsilon() {\n  if (_epsilon == null) {\n    _epsilon = backend().epsilon();\n  }\n  return _epsilon;\n}\n\n/**\n * Sets the value of the fuzz factor used in numeric expressions.\n * @param e New value of epsilon.\n */\nexport function setEpsilon(e: number) {\n  _epsilon = e;\n}\n\n/**\n * Returns the default image data format convention.\n */\nexport function imageDataFormat(): DataFormat {\n  return 'channelsLast';\n}\n"]},"metadata":{},"sourceType":"module"}