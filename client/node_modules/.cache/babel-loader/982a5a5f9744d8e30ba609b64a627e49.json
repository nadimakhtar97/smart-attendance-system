{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OneHot, util } from '@tensorflow/tfjs-core';\nimport { OneHotProgram } from '../onehot_gpu';\nimport { reshape } from './Reshape';\nexport const oneHot = args => {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    indices\n  } = inputs;\n  const {\n    depth,\n    onValue,\n    offValue\n  } = attrs;\n  const indicesSize = util.sizeFromShape(indices.shape);\n  const program = new OneHotProgram(indicesSize, depth, onValue, offValue);\n  const reshaped = reshape({\n    inputs: {\n      x: indices\n    },\n    backend,\n    attrs: {\n      shape: [indicesSize]\n    }\n  });\n  const result = backend.runWebGLProgram(program, [reshaped], indices.dtype);\n  backend.disposeIntermediateTensorInfo(reshaped);\n  const outShape = [...indices.shape, depth];\n  const out = reshape({\n    inputs: {\n      x: result\n    },\n    backend,\n    attrs: {\n      shape: outShape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(result);\n  return out;\n};\nexport const oneHotConfig = {\n  kernelName: OneHot,\n  backendName: 'webgl',\n  kernelFunc: oneHot\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAkCA,MAAlC,EAAiFC,IAAjF,QAA4F,uBAA5F;AAGA,SAAQC,aAAR,QAA4B,eAA5B;AACA,SAAQC,OAAR,QAAsB,WAAtB;AAEA,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAIL;AACf,QAAM;AAACC,UAAD;AAASC,WAAT;AAAkBC;AAAlB,MAA2BH,IAAjC;AACA,QAAM;AAACI;AAAD,MAAYH,MAAlB;AACA,QAAM;AAACI,SAAD;AAAQC,WAAR;AAAiBC;AAAjB,MAA6BJ,KAAnC;AAEA,QAAMK,WAAW,GAAGZ,IAAI,CAACa,aAAL,CAAmBL,OAAO,CAACM,KAA3B,CAApB;AACA,QAAMC,OAAO,GAAG,IAAId,aAAJ,CAAkBW,WAAlB,EAA+BH,KAA/B,EAAsCC,OAAtC,EAA+CC,QAA/C,CAAhB;AACA,QAAMK,QAAQ,GACVd,OAAO,CAAC;AAACG,UAAM,EAAE;AAACY,OAAC,EAAET;AAAJ,KAAT;AAAuBF,WAAvB;AAAgCC,SAAK,EAAE;AAACO,WAAK,EAAE,CAACF,WAAD;AAAR;AAAvC,GAAD,CADX;AAEA,QAAMM,MAAM,GAAGZ,OAAO,CAACa,eAAR,CAAwBJ,OAAxB,EAAiC,CAACC,QAAD,CAAjC,EAA6CR,OAAO,CAACY,KAArD,CAAf;AACAd,SAAO,CAACe,6BAAR,CAAsCL,QAAtC;AAEA,QAAMM,QAAQ,GAAG,CAAC,GAAGd,OAAO,CAACM,KAAZ,EAAmBL,KAAnB,CAAjB;AACA,QAAMc,GAAG,GAAGrB,OAAO,CAAC;AAACG,UAAM,EAAE;AAACY,OAAC,EAAEC;AAAJ,KAAT;AAAsBZ,WAAtB;AAA+BC,SAAK,EAAE;AAACO,WAAK,EAAEQ;AAAR;AAAtC,GAAD,CAAnB;AACAhB,SAAO,CAACe,6BAAR,CAAsCH,MAAtC;AACA,SAAOK,GAAP;AACD,CApBM;AAsBP,OAAO,MAAMC,YAAY,GAAiB;AACxCC,YAAU,EAAE1B,MAD4B;AAExC2B,aAAW,EAAE,OAF2B;AAGxCC,YAAU,EAAExB;AAH4B,CAAnC","names":["OneHot","util","OneHotProgram","reshape","oneHot","args","inputs","backend","attrs","indices","depth","onValue","offValue","indicesSize","sizeFromShape","shape","program","reshaped","x","result","runWebGLProgram","dtype","disposeIntermediateTensorInfo","outShape","out","oneHotConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/OneHot.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OneHot, OneHotAttrs, OneHotInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {OneHotProgram} from '../onehot_gpu';\nimport {reshape} from './Reshape';\n\nexport const oneHot = (args: {\n  inputs: OneHotInputs,\n  backend: MathBackendWebGL,\n  attrs: OneHotAttrs\n}): TensorInfo => {\n  const {inputs, backend, attrs} = args;\n  const {indices} = inputs;\n  const {depth, onValue, offValue} = attrs;\n\n  const indicesSize = util.sizeFromShape(indices.shape);\n  const program = new OneHotProgram(indicesSize, depth, onValue, offValue);\n  const reshaped =\n      reshape({inputs: {x: indices}, backend, attrs: {shape: [indicesSize]}});\n  const result = backend.runWebGLProgram(program, [reshaped], indices.dtype);\n  backend.disposeIntermediateTensorInfo(reshaped);\n\n  const outShape = [...indices.shape, depth];\n  const out = reshape({inputs: {x: result}, backend, attrs: {shape: outShape}});\n  backend.disposeIntermediateTensorInfo(result);\n  return out;\n};\n\nexport const oneHotConfig: KernelConfig = {\n  kernelName: OneHot,\n  backendName: 'webgl',\n  kernelFunc: oneHot as {} as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module"}