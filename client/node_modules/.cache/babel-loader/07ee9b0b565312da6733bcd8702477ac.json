{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Concat } from '../kernel_names';\nimport { split } from '../ops/split';\nimport { parseAxisParam } from '../util';\nexport const concatGradConfig = {\n  kernelName: Concat,\n  saveAllInputs: true,\n  gradFunc: (dy, saved, attrs) => {\n    const shapes = saved.map(t => t.shape);\n    const {\n      axis\n    } = attrs;\n    const $axis = parseAxisParam(axis, saved[0].shape)[0];\n    const sizeSplits = shapes.map(s => s[$axis]);\n    const derTensors = split(dy, sizeSplits, $axis);\n    return derTensors.map(t => () => t);\n  }\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAAQA,MAAR,QAAkC,iBAAlC;AAEA,SAAQC,KAAR,QAAoB,cAApB;AAEA,SAAQC,cAAR,QAA6B,SAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAe;AAC1CC,YAAU,EAAEJ,MAD8B;AAE1CK,eAAa,EAAE,IAF2B;AAG1CC,UAAQ,EAAE,CAACC,EAAD,EAAaC,KAAb,EAA8BC,KAA9B,KAAqD;AAC7D,UAAMC,MAAM,GAAGF,KAAK,CAACG,GAAN,CAAUC,CAAC,IAAIA,CAAC,CAACC,KAAjB,CAAf;AACA,UAAM;AAACC;AAAD,QAASL,KAAf;AACA,UAAMM,KAAK,GAAGb,cAAc,CAACY,IAAD,EAAON,KAAK,CAAC,CAAD,CAAL,CAASK,KAAhB,CAAd,CAAqC,CAArC,CAAd;AACA,UAAMG,UAAU,GAAGN,MAAM,CAACC,GAAP,CAAWM,CAAC,IAAIA,CAAC,CAACF,KAAD,CAAjB,CAAnB;AACA,UAAMG,UAAU,GAAGjB,KAAK,CAACM,EAAD,EAAKS,UAAL,EAAiBD,KAAjB,CAAxB;AACA,WAAOG,UAAU,CAACP,GAAX,CAAeC,CAAC,IAAI,MAAMA,CAA1B,CAAP;AACD;AAVyC,CAArC","names":["Concat","split","parseAxisParam","concatGradConfig","kernelName","saveAllInputs","gradFunc","dy","saved","attrs","shapes","map","t","shape","axis","$axis","sizeSplits","s","derTensors"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-core/src/gradients/Concat_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Concat, ConcatAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {split} from '../ops/split';\nimport {Tensor} from '../tensor';\nimport {parseAxisParam} from '../util';\n\nexport const concatGradConfig: GradConfig = {\n  kernelName: Concat,\n  saveAllInputs: true,\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const shapes = saved.map(t => t.shape);\n    const {axis} = attrs as {} as ConcatAttrs;\n    const $axis = parseAxisParam(axis, saved[0].shape)[0];\n    const sizeSplits = shapes.map(s => s[$axis]);\n    const derTensors = split(dy, sizeSplits, $axis);\n    return derTensors.map(t => () => t) as {};\n  }\n};\n"]},"metadata":{},"sourceType":"module"}