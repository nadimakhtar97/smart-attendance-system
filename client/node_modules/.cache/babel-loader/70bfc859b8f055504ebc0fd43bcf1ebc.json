{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Bincount } from '@tensorflow/tfjs-core';\nimport { bincountImpl } from './Bincount_impl';\nexport function bincount(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x,\n    weights\n  } = inputs;\n  const {\n    size\n  } = attrs;\n  const xVals = backend.data.get(x.dataId).values;\n  const weightsVals = backend.data.get(weights.dataId).values;\n  const outVals = bincountImpl(xVals, weightsVals, weights.dtype, weights.shape, size);\n  return backend.makeTensorInfo([size], weights.dtype, outVals);\n}\nexport const bincountConfig = {\n  kernelName: Bincount,\n  backendName: 'cpu',\n  kernelFunc: bincount\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,QAAR,QAAwG,uBAAxG;AAGA,SAAQC,YAAR,QAA2B,iBAA3B;AAEA,OAAM,SAAUC,QAAV,CAAmBC,IAAnB,EAIL;AACC,QAAM;AAACC,UAAD;AAASC,WAAT;AAAkBC;AAAlB,MAA2BH,IAAjC;AACA,QAAM;AAACI,KAAD;AAAIC;AAAJ,MAAeJ,MAArB;AACA,QAAM;AAACK;AAAD,MAASH,KAAf;AAEA,QAAMI,KAAK,GAAGL,OAAO,CAACM,IAAR,CAAaC,GAAb,CAAiBL,CAAC,CAACM,MAAnB,EAA2BC,MAAzC;AACA,QAAMC,WAAW,GAAGV,OAAO,CAACM,IAAR,CAAaC,GAAb,CAAiBJ,OAAO,CAACK,MAAzB,EAAiCC,MAArD;AAEA,QAAME,OAAO,GACTf,YAAY,CAACS,KAAD,EAAQK,WAAR,EAAqBP,OAAO,CAACS,KAA7B,EAAoCT,OAAO,CAACU,KAA5C,EAAmDT,IAAnD,CADhB;AAGA,SAAOJ,OAAO,CAACc,cAAR,CAAuB,CAACV,IAAD,CAAvB,EAA+BD,OAAO,CAACS,KAAvC,EAA8CD,OAA9C,CAAP;AACD;AAED,OAAO,MAAMI,cAAc,GAAiB;AAC1CC,YAAU,EAAErB,QAD8B;AAE1CsB,aAAW,EAAE,KAF6B;AAG1CC,YAAU,EAAErB;AAH8B,CAArC","names":["Bincount","bincountImpl","bincount","args","inputs","backend","attrs","x","weights","size","xVals","data","get","dataId","values","weightsVals","outVals","dtype","shape","makeTensorInfo","bincountConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-cpu/src/kernels/Bincount.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Bincount, BincountAttrs, BincountInputs, KernelConfig, KernelFunc, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {bincountImpl} from './Bincount_impl';\n\nexport function bincount(args: {\n  inputs: BincountInputs,\n  backend: MathBackendCPU,\n  attrs: BincountAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, weights} = inputs;\n  const {size} = attrs;\n\n  const xVals = backend.data.get(x.dataId).values as TypedArray;\n  const weightsVals = backend.data.get(weights.dataId).values as TypedArray;\n\n  const outVals =\n      bincountImpl(xVals, weightsVals, weights.dtype, weights.shape, size);\n\n  return backend.makeTensorInfo([size], weights.dtype, outVals);\n}\n\nexport const bincountConfig: KernelConfig = {\n  kernelName: Bincount,\n  backendName: 'cpu',\n  kernelFunc: bincount as {} as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module"}