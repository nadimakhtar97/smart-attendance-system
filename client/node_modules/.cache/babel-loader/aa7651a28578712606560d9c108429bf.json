{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { stack } from '../../ops/stack';\nimport { getGlobalTensorClass, Tensor } from '../../tensor';\n\ngetGlobalTensorClass().prototype.stack = function (x, axis) {\n  this.throwIfDisposed();\n  const tensorsToBeStacked = x instanceof Tensor ? [this, x] : [this, ...x];\n  return stack(tensorsToBeStacked, axis);\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAAQA,KAAR,QAAoB,iBAApB;AACA,SAAQC,oBAAR,EAA8BC,MAA9B,QAA2C,cAA3C;;AASAD,oBAAoB,GAAGE,SAAvB,CAAiCH,KAAjC,GAAyC,UACrCI,CADqC,EACjBC,IADiB,EACJ;AACnC,OAAKC,eAAL;AACA,QAAMC,kBAAkB,GAAGH,CAAC,YAAYF,MAAb,GAAsB,CAAC,IAAD,EAAOE,CAAP,CAAtB,GAAkC,CAAC,IAAD,EAAO,GAAGA,CAAV,CAA7D;AACA,SAAOJ,KAAK,CAACO,kBAAD,EAAqBF,IAArB,CAAZ;AACD,CALD","names":["stack","getGlobalTensorClass","Tensor","prototype","x","axis","throwIfDisposed","tensorsToBeStacked"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-core/src/public/chained_ops/stack.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {stack} from '../../ops/stack';\nimport {getGlobalTensorClass, Tensor} from '../../tensor';\nimport {Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    stack<T extends Tensor>(x: Tensor|Tensor[], axis?: number): T;\n  }\n}\n\ngetGlobalTensorClass().prototype.stack = function<T extends Tensor>(\n    x: Tensor|Tensor[], axis?: number): T {\n  this.throwIfDisposed();\n  const tensorsToBeStacked = x instanceof Tensor ? [this, x] : [this, ...x];\n  return stack(tensorsToBeStacked, axis) as T;\n};\n"]},"metadata":{},"sourceType":"module"}