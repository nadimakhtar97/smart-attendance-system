{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { any } from '../../ops/any';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.any = function (axis, keepDims) {\n  this.throwIfDisposed();\n  return any(this, axis, keepDims);\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAAQA,GAAR,QAAkB,eAAlB;AACA,SAAQC,oBAAR,QAA2C,cAA3C;;AAUAA,oBAAoB,GAAGC,SAAvB,CAAiCF,GAAjC,GAAuC,UAC1BG,IAD0B,EACFC,QADE,EACgB;AACrD,OAAKC,eAAL;AACA,SAAOL,GAAG,CAAC,IAAD,EAAOG,IAAP,EAAaC,QAAb,CAAV;AACD,CAJD","names":["any","getGlobalTensorClass","prototype","axis","keepDims","throwIfDisposed"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-core/src/public/chained_ops/any.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {any} from '../../ops/any';\nimport {getGlobalTensorClass, Tensor} from '../../tensor';\nimport {Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    any<T extends Tensor>(this: T, axis?: number|number[], keepDims?: boolean):\n        T;\n  }\n}\n\ngetGlobalTensorClass().prototype.any = function<T extends Tensor>(\n    this: T, axis?: number|number[], keepDims?: boolean): T {\n  this.throwIfDisposed();\n  return any(this, axis, keepDims);\n};\n"]},"metadata":{},"sourceType":"module"}