{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, BroadcastArgs } from '@tensorflow/tfjs-core';\nexport function broadcastArgs(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    s0,\n    s1\n  } = inputs;\n  const s0Vals = backend.readSync(s0.dataId);\n  const s1Vals = backend.readSync(s1.dataId);\n  const broadcastShape = backend_util.assertAndGetBroadcastShape(Array.from(s0Vals), Array.from(s1Vals));\n  return backend.makeTensorInfo([broadcastShape.length], 'int32', Int32Array.from(broadcastShape));\n}\nexport const broadcastArgsConfig = {\n  kernelName: BroadcastArgs,\n  backendName: 'webgl',\n  kernelFunc: broadcastArgs\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAR,EAAsBC,aAAtB,QAAqG,uBAArG;AAGA,OAAM,SAAUC,aAAV,CAAwBC,IAAxB,EAGL;AACC,QAAM;AAACC,UAAD;AAASC;AAAT,MAAoBF,IAA1B;AACA,QAAM;AAACG,MAAD;AAAKC;AAAL,MAAWH,MAAjB;AAEA,QAAMI,MAAM,GAAGH,OAAO,CAACI,QAAR,CAAiBH,EAAE,CAACI,MAApB,CAAf;AACA,QAAMC,MAAM,GAAGN,OAAO,CAACI,QAAR,CAAiBF,EAAE,CAACG,MAApB,CAAf;AAEA,QAAME,cAAc,GAAGZ,YAAY,CAACa,0BAAb,CACnBC,KAAK,CAACC,IAAN,CAAWP,MAAX,CADmB,EACCM,KAAK,CAACC,IAAN,CAAWJ,MAAX,CADD,CAAvB;AAGA,SAAON,OAAO,CAACW,cAAR,CACH,CAACJ,cAAc,CAACK,MAAhB,CADG,EACsB,OADtB,EAC+BC,UAAU,CAACH,IAAX,CAAgBH,cAAhB,CAD/B,CAAP;AAED;AAED,OAAO,MAAMO,mBAAmB,GAAiB;AAC/CC,YAAU,EAAEnB,aADmC;AAE/CoB,aAAW,EAAE,OAFkC;AAG/CC,YAAU,EAAEpB;AAHmC,CAA1C","names":["backend_util","BroadcastArgs","broadcastArgs","args","inputs","backend","s0","s1","s0Vals","readSync","dataId","s1Vals","broadcastShape","assertAndGetBroadcastShape","Array","from","makeTensorInfo","length","Int32Array","broadcastArgsConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/BroadcastArgs.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BroadcastArgs, BroadcastArgsInputs, KernelConfig, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\nimport {MathBackendWebGL} from '../backend_webgl';\n\nexport function broadcastArgs(args: {\n  inputs: BroadcastArgsInputs,\n  backend: MathBackendWebGL,\n}): TensorInfo {\n  const {inputs, backend} = args;\n  const {s0, s1} = inputs;\n\n  const s0Vals = backend.readSync(s0.dataId) as TypedArray;\n  const s1Vals = backend.readSync(s1.dataId) as TypedArray;\n\n  const broadcastShape = backend_util.assertAndGetBroadcastShape(\n      Array.from(s0Vals), Array.from(s1Vals));\n\n  return backend.makeTensorInfo(\n      [broadcastShape.length], 'int32', Int32Array.from(broadcastShape));\n}\n\nexport const broadcastArgsConfig: KernelConfig = {\n  kernelName: BroadcastArgs,\n  backendName: 'webgl',\n  kernelFunc: broadcastArgs\n};\n"]},"metadata":{},"sourceType":"module"}