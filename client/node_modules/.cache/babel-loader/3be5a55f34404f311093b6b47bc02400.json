{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Minimum } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { greater } from '../ops/greater';\nimport { lessEqual } from '../ops/less_equal';\nimport { mul } from '../ops/mul';\nexport const minimumGradConfig = {\n  kernelName: Minimum,\n  inputsToSave: ['a', 'b'],\n  gradFunc: (dy, saved) => {\n    const [a, b] = saved;\n\n    const derA = () => mul(dy, cast(lessEqual(a, b), 'float32'));\n\n    const derB = () => mul(dy, cast(greater(a, b), 'float32'));\n\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,OAAR,QAAsB,iBAAtB;AAEA,SAAQC,IAAR,QAAmB,aAAnB;AACA,SAAQC,OAAR,QAAsB,gBAAtB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAAQC,GAAR,QAAkB,YAAlB;AAGA,OAAO,MAAMC,iBAAiB,GAAe;AAC3CC,YAAU,EAAEN,OAD+B;AAE3CO,cAAY,EAAE,CAAC,GAAD,EAAM,GAAN,CAF6B;AAG3CC,UAAQ,EAAE,CAACC,EAAD,EAAaC,KAAb,KAAgC;AACxC,UAAM,CAACC,CAAD,EAAIC,CAAJ,IAASF,KAAf;;AACA,UAAMG,IAAI,GAAG,MAAMT,GAAG,CAACK,EAAD,EAAKR,IAAI,CAACE,SAAS,CAACQ,CAAD,EAAIC,CAAJ,CAAV,EAAkB,SAAlB,CAAT,CAAtB;;AACA,UAAME,IAAI,GAAG,MAAMV,GAAG,CAACK,EAAD,EAAKR,IAAI,CAACC,OAAO,CAACS,CAAD,EAAIC,CAAJ,CAAR,EAAgB,SAAhB,CAAT,CAAtB;;AACA,WAAO;AAACD,OAAC,EAAEE,IAAJ;AAAUD,OAAC,EAAEE;AAAb,KAAP;AACD;AAR0C,CAAtC","names":["Minimum","cast","greater","lessEqual","mul","minimumGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","a","b","derA","derB"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-core/src/gradients/Minimum_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Minimum} from '../kernel_names';\nimport {GradConfig} from '../kernel_registry';\nimport {cast} from '../ops/cast';\nimport {greater} from '../ops/greater';\nimport {lessEqual} from '../ops/less_equal';\nimport {mul} from '../ops/mul';\nimport {Tensor} from '../tensor';\n\nexport const minimumGradConfig: GradConfig = {\n  kernelName: Minimum,\n  inputsToSave: ['a', 'b'],\n  gradFunc: (dy: Tensor, saved: Tensor[]) => {\n    const [a, b] = saved;\n    const derA = () => mul(dy, cast(lessEqual(a, b), 'float32'));\n    const derB = () => mul(dy, cast(greater(a, b), 'float32'));\n    return {a: derA, b: derB};\n  }\n};\n"]},"metadata":{},"sourceType":"module"}