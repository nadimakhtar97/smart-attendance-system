{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, MirrorPad } from '@tensorflow/tfjs-core';\nimport { MirrorPadProgram } from '../mirror_pad_gpu';\nimport { MirrorPadPackedProgram } from '../mirror_pad_packed_gpu';\nexport const mirrorPadKernelFunc = _ref => {\n  let {\n    inputs,\n    backend,\n    attrs\n  } = _ref;\n  const {\n    x\n  } = inputs;\n  const {\n    paddings,\n    mode\n  } = attrs;\n  const program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ? new MirrorPadPackedProgram(x.shape, paddings, mode) : new MirrorPadProgram(x.shape, paddings, mode);\n  const output = backend.runWebGLProgram(program, [x], x.dtype);\n  return output;\n};\nexport const mirrorPadConfig = {\n  kernelName: MirrorPad,\n  backendName: 'webgl',\n  kernelFunc: mirrorPadKernelFunc\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,GAAR,EAAuCC,SAAvC,QAAoG,uBAApG;AAGA,SAAQC,gBAAR,QAA+B,mBAA/B;AACA,SAAQC,sBAAR,QAAqC,0BAArC;AAEA,OAAO,MAAMC,mBAAmB,GAIb,QAA6B;AAAA,MAA5B;AAACC,UAAD;AAASC,WAAT;AAAkBC;AAAlB,GAA4B;AAC9C,QAAM;AAACC;AAAD,MAAMH,MAAZ;AACA,QAAM;AAACI,YAAD;AAAWC;AAAX,MAAmBH,KAAzB;AAEA,QAAMI,OAAO,GAAGX,GAAG,GAAGY,OAAN,CAAc,6BAAd,IACZ,IAAIT,sBAAJ,CAA2BK,CAAC,CAACK,KAA7B,EAAoCJ,QAApC,EAA8CC,IAA9C,CADY,GAEZ,IAAIR,gBAAJ,CAAqBM,CAAC,CAACK,KAAvB,EAA8BJ,QAA9B,EAAwCC,IAAxC,CAFJ;AAIA,QAAMI,MAAM,GAAGR,OAAO,CAACS,eAAR,CAAwBJ,OAAxB,EAAiC,CAACH,CAAD,CAAjC,EAAsCA,CAAC,CAACQ,KAAxC,CAAf;AAEA,SAAOF,MAAP;AACD,CAfM;AAiBP,OAAO,MAAMG,eAAe,GAAiB;AAC3CC,YAAU,EAAEjB,SAD+B;AAE3CkB,aAAW,EAAE,OAF8B;AAG3CC,YAAU,EAAEhB;AAH+B,CAAtC","names":["env","MirrorPad","MirrorPadProgram","MirrorPadPackedProgram","mirrorPadKernelFunc","inputs","backend","attrs","x","paddings","mode","program","getBool","shape","output","runWebGLProgram","dtype","mirrorPadConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/MirrorPad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env, KernelConfig, KernelFunc, MirrorPad, MirrorPadAttrs, MirrorPadInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {MirrorPadProgram} from '../mirror_pad_gpu';\nimport {MirrorPadPackedProgram} from '../mirror_pad_packed_gpu';\n\nexport const mirrorPadKernelFunc: (params: {\n  inputs: MirrorPadInputs,\n  backend: MathBackendWebGL,\n  attrs: MirrorPadAttrs\n}) => TensorInfo = ({inputs, backend, attrs}) => {\n  const {x} = inputs;\n  const {paddings, mode} = attrs;\n\n  const program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n      new MirrorPadPackedProgram(x.shape, paddings, mode) :\n      new MirrorPadProgram(x.shape, paddings, mode);\n\n  const output = backend.runWebGLProgram(program, [x], x.dtype);\n\n  return output;\n};\n\nexport const mirrorPadConfig: KernelConfig = {\n  kernelName: MirrorPad,\n  backendName: 'webgl',\n  kernelFunc: mirrorPadKernelFunc as {} as KernelFunc,\n};\n"]},"metadata":{},"sourceType":"module"}