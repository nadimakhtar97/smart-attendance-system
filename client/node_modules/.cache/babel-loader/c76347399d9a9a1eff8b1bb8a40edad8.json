{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { pad } from '../../ops/pad';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.pad = function (paddings, constantValue) {\n  this.throwIfDisposed();\n  return pad(this, paddings, constantValue);\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,GAAR,QAAkB,eAAlB;AACA,SAAQC,oBAAR,QAA2C,cAA3C;;AAUAA,oBAAoB,GAAGC,SAAvB,CAAiCF,GAAjC,GAAuC,UAC1BG,QAD0B,EACSC,aADT,EAC8B;AACnE,OAAKC,eAAL;AACA,SAAOL,GAAG,CAAC,IAAD,EAAOG,QAAP,EAAiBC,aAAjB,CAAV;AACD,CAJD","names":["pad","getGlobalTensorClass","prototype","paddings","constantValue","throwIfDisposed"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-core/src/public/chained_ops/pad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {pad} from '../../ops/pad';\nimport {getGlobalTensorClass, Tensor} from '../../tensor';\nimport {Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    pad<T extends Tensor>(\n        paddings: Array<[number, number]>, constantValue?: number): T;\n  }\n}\n\ngetGlobalTensorClass().prototype.pad = function<T extends Tensor>(\n    this: T, paddings: Array<[number, number]>, constantValue: number): T {\n  this.throwIfDisposed();\n  return pad(this, paddings, constantValue);\n};\n"]},"metadata":{},"sourceType":"module"}