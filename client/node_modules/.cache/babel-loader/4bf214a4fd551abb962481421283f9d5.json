{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2DBackpropInput } from '@tensorflow/tfjs-core';\nimport { Conv2DDerInputProgram } from '../conv_backprop_gpu';\nexport function conv2DBackpropInput(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    dy,\n    filter\n  } = inputs;\n  const {\n    inputShape,\n    strides,\n    pad,\n    dataFormat,\n    dimRoundingMode\n  } = attrs;\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(inputShape, filter.shape, strides, 1\n  /* dilations */\n  , pad, dimRoundingMode, false, $dataFormat);\n  const program = new Conv2DDerInputProgram(convInfo);\n  return backend.runWebGLProgram(program, [dy, filter], 'float32');\n}\nexport const conv2DBackpropInputConfig = {\n  kernelName: Conv2DBackpropInput,\n  backendName: 'webgl',\n  kernelFunc: conv2DBackpropInput\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAR,EAAsBC,mBAAtB,QAA+H,uBAA/H;AAGA,SAAQC,qBAAR,QAAoC,sBAApC;AAEA,OAAM,SAAUC,mBAAV,CAA8BC,IAA9B,EAIL;AACC,QAAM;AAACC,UAAD;AAASC,WAAT;AAAkBC;AAAlB,MAA2BH,IAAjC;AACA,QAAM;AAACI,MAAD;AAAKC;AAAL,MAAeJ,MAArB;AACA,QAAM;AAACK,cAAD;AAAaC,WAAb;AAAsBC,OAAtB;AAA2BC,cAA3B;AAAuCC;AAAvC,MAA0DP,KAAhE;AAEA,QAAMQ,WAAW,GAAGf,YAAY,CAACgB,uBAAb,CAAqCH,UAArC,CAApB;AACA,QAAMI,QAAQ,GAAGjB,YAAY,CAACkB,iBAAb,CACbR,UADa,EACDD,MAAM,CAACU,KADN,EACiDR,OADjD,EAEb;AAAE;AAFW,IAEMC,GAFN,EAEWE,eAFX,EAE4B,KAF5B,EAEmCC,WAFnC,CAAjB;AAIA,QAAMK,OAAO,GAAG,IAAIlB,qBAAJ,CAA0Be,QAA1B,CAAhB;AACA,SAAOX,OAAO,CAACe,eAAR,CAAwBD,OAAxB,EAAiC,CAACZ,EAAD,EAAKC,MAAL,CAAjC,EAA+C,SAA/C,CAAP;AACD;AAED,OAAO,MAAMa,yBAAyB,GAAiB;AACrDC,YAAU,EAAEtB,mBADyC;AAErDuB,aAAW,EAAE,OAFwC;AAGrDC,YAAU,EAAEtB;AAHyC,CAAhD","names":["backend_util","Conv2DBackpropInput","Conv2DDerInputProgram","conv2DBackpropInput","args","inputs","backend","attrs","dy","filter","inputShape","strides","pad","dataFormat","dimRoundingMode","$dataFormat","convertConv2DDataFormat","convInfo","computeConv2DInfo","shape","program","runWebGLProgram","conv2DBackpropInputConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/Conv2DBackpropInput.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2DBackpropInput, Conv2DBackpropInputAttrs, Conv2DBackpropInputInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {Conv2DDerInputProgram} from '../conv_backprop_gpu';\n\nexport function conv2DBackpropInput(args: {\n  inputs: Conv2DBackpropInputInputs,\n  attrs: Conv2DBackpropInputAttrs,\n  backend: MathBackendWebGL\n}) {\n  const {inputs, backend, attrs} = args;\n  const {dy, filter} = inputs;\n  const {inputShape, strides, pad, dataFormat, dimRoundingMode} = attrs;\n\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      inputShape, filter.shape as [number, number, number, number], strides,\n      1 /* dilations */, pad, dimRoundingMode, false, $dataFormat);\n\n  const program = new Conv2DDerInputProgram(convInfo);\n  return backend.runWebGLProgram(program, [dy, filter], 'float32');\n}\n\nexport const conv2DBackpropInputConfig: KernelConfig = {\n  kernelName: Conv2DBackpropInput,\n  backendName: 'webgl',\n  kernelFunc: conv2DBackpropInput as {} as KernelFunc,\n};\n"]},"metadata":{},"sourceType":"module"}