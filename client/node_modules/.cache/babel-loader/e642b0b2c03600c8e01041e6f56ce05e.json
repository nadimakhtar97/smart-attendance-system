{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Modularized ops.\nexport { abs } from './abs';\nexport { acos } from './acos';\nexport { acosh } from './acosh';\nexport { add } from './add';\nexport { addN } from './add_n';\nexport { all } from './all';\nexport { any } from './any';\nexport { argMax } from './arg_max';\nexport { argMin } from './arg_min';\nexport { asin } from './asin';\nexport { asinh } from './asinh';\nexport { atan } from './atan';\nexport { atan2 } from './atan2';\nexport { atanh } from './atanh';\nexport { avgPool } from './avg_pool';\nexport { avgPool3d } from './avg_pool_3d';\nexport { basicLSTMCell } from './basic_lstm_cell';\nexport { batchToSpaceND } from './batch_to_space_nd';\nexport { batchNorm } from './batchnorm';\nexport { batchNorm2d } from './batchnorm2d';\nexport { batchNorm3d } from './batchnorm3d';\nexport { batchNorm4d } from './batchnorm4d';\nexport { bincount } from './bincount';\nexport { broadcastArgs } from './broadcast_args';\nexport { broadcastTo } from './broadcast_to';\nexport { buffer } from './buffer';\nexport { cast } from './cast';\nexport { ceil } from './ceil';\nexport { clipByValue } from './clip_by_value';\nexport { clone } from './clone';\nexport { complex } from './complex';\nexport { concat } from './concat';\nexport { concat1d } from './concat_1d';\nexport { concat2d } from './concat_2d';\nexport { concat3d } from './concat_3d';\nexport { concat4d } from './concat_4d';\nexport { conv1d } from './conv1d';\nexport { conv2d } from './conv2d';\nexport { conv2dTranspose } from './conv2d_transpose';\nexport { conv3d } from './conv3d';\nexport { conv3dTranspose } from './conv3d_transpose';\nexport { cos } from './cos';\nexport { cosh } from './cosh';\nexport { cumsum } from './cumsum';\nexport { denseBincount } from './dense_bincount';\nexport { depthToSpace } from './depth_to_space';\nexport { depthwiseConv2d } from './depthwise_conv2d';\nexport { diag } from './diag';\nexport { dilation2d } from './dilation2d';\nexport { div } from './div';\nexport { divNoNan } from './div_no_nan';\nexport { dot } from './dot';\nexport { einsum } from './einsum';\nexport { elu } from './elu';\nexport { equal } from './equal';\nexport { erf } from './erf';\nexport { exp } from './exp';\nexport { expandDims } from './expand_dims';\nexport { expm1 } from './expm1';\nexport { eye } from './eye';\nexport { fill } from './fill';\nexport { floor } from './floor';\nexport { floorDiv } from './floorDiv';\nexport { gather } from './gather';\nexport { greater } from './greater';\nexport { greaterEqual } from './greater_equal';\nexport { imag } from './imag';\nexport { isFinite } from './is_finite';\nexport { isInf } from './is_inf';\nexport { isNaN } from './is_nan';\nexport { leakyRelu } from './leaky_relu';\nexport { less } from './less';\nexport { lessEqual } from './less_equal';\nexport { linspace } from './linspace';\nexport { localResponseNormalization } from './local_response_normalization';\nexport { log } from './log';\nexport { log1p } from './log1p';\nexport { logSigmoid } from './log_sigmoid';\nexport { logSoftmax } from './log_softmax';\nexport { logSumExp } from './log_sum_exp';\nexport { logicalAnd } from './logical_and';\nexport { logicalNot } from './logical_not';\nexport { logicalOr } from './logical_or';\nexport { logicalXor } from './logical_xor';\nexport { matMul } from './mat_mul';\nexport { max } from './max';\nexport { maxPool } from './max_pool';\nexport { maxPool3d } from './max_pool_3d';\nexport { maxPoolWithArgmax } from './max_pool_with_argmax';\nexport { maximum } from './maximum';\nexport { mean } from './mean';\nexport { meshgrid } from './meshgrid';\nexport { min } from './min';\nexport { minimum } from './minimum';\nexport { mirrorPad } from './mirror_pad';\nexport { mod } from './mod';\nexport { moments } from './moments';\nexport { mul } from './mul';\nexport { multiRNNCell } from './multi_rnn_cell';\nexport { multinomial } from './multinomial';\nexport { neg } from './neg';\nexport { notEqual } from './not_equal';\nexport { oneHot } from './one_hot';\nexport { ones } from './ones';\nexport { onesLike } from './ones_like';\nexport { outerProduct } from './outer_product';\nexport { pad } from './pad';\nexport { pad1d } from './pad1d';\nexport { pad2d } from './pad2d';\nexport { pad3d } from './pad3d';\nexport { pad4d } from './pad4d';\nexport { pool } from './pool';\nexport { pow } from './pow';\nexport { prelu } from './prelu';\nexport { print } from './print';\nexport { prod } from './prod';\nexport { rand } from './rand';\nexport { randomGamma } from './random_gamma';\nexport { randomNormal } from './random_normal';\nexport { randomUniform } from './random_uniform';\nexport { range } from './range';\nexport { real } from './real';\nexport { reciprocal } from './reciprocal';\nexport { relu } from './relu';\nexport { relu6 } from './relu6';\nexport { reshape } from './reshape';\nexport { reverse } from './reverse';\nexport { reverse1d } from './reverse_1d';\nexport { reverse2d } from './reverse_2d';\nexport { reverse3d } from './reverse_3d';\nexport { reverse4d } from './reverse_4d';\nexport { round } from './round';\nexport { rsqrt } from './rsqrt';\nexport { scalar } from './scalar';\nexport { selu } from './selu';\nexport { separableConv2d } from './separable_conv2d';\nexport { setdiff1dAsync } from './setdiff1d_async';\nexport { sigmoid } from './sigmoid';\nexport { sign } from './sign';\nexport { sin } from './sin';\nexport { sinh } from './sinh';\nexport { slice } from './slice';\nexport { slice1d } from './slice1d';\nexport { slice2d } from './slice2d';\nexport { slice3d } from './slice3d';\nexport { slice4d } from './slice4d';\nexport { softmax } from './softmax';\nexport { softplus } from './softplus';\nexport { spaceToBatchND } from './space_to_batch_nd';\nexport { fft } from './spectral/fft';\nexport { ifft } from './spectral/ifft';\nexport { irfft } from './spectral/irfft';\nexport { rfft } from './spectral/rfft';\nexport { split } from './split';\nexport { sqrt } from './sqrt';\nexport { square } from './square';\nexport { squaredDifference } from './squared_difference';\nexport { squeeze } from './squeeze';\nexport { stack } from './stack';\nexport { step } from './step';\nexport { stridedSlice } from './strided_slice';\nexport { sub } from './sub';\nexport { sum } from './sum';\nexport { tan } from './tan';\nexport { tanh } from './tanh';\nexport { tensor } from './tensor';\nexport { tensor1d } from './tensor1d';\nexport { tensor2d } from './tensor2d';\nexport { tensor3d } from './tensor3d';\nexport { tensor4d } from './tensor4d';\nexport { tensor5d } from './tensor5d';\nexport { tensor6d } from './tensor6d';\nexport { tile } from './tile';\nexport { topk } from './topk';\nexport { truncatedNormal } from './truncated_normal';\nexport { unique } from './unique';\nexport { unsortedSegmentSum } from './unsorted_segment_sum';\nexport { unstack } from './unstack';\nexport { variable } from './variable';\nexport { where } from './where';\nexport { whereAsync } from './where_async';\nexport { zeros } from './zeros';\nexport { zerosLike } from './zeros_like';\nexport * from './boolean_mask';\nexport * from './transpose';\nexport * from './norm';\nexport * from './moving_average';\nexport * from './scatter_nd';\nexport * from './sparse_to_dense';\nexport * from './gather_nd';\nexport * from './dropout';\nexport * from './signal_ops_util';\nexport * from './in_top_k';\nexport { op, OP_SCOPE_SUFFIX } from './operation';\nimport { rfft } from './spectral/rfft';\nimport { fft } from './spectral/fft';\nimport { ifft } from './spectral/ifft';\nimport { irfft } from './spectral/irfft';\nconst spectral = {\n  fft,\n  ifft,\n  rfft,\n  irfft\n};\nimport * as fused from './fused_ops';\nimport { hammingWindow } from './signal/hamming_window';\nimport { hannWindow } from './signal/hann_window';\nimport { frame } from './signal/frame';\nimport { stft } from './signal/stft';\nconst signal = {\n  hammingWindow,\n  hannWindow,\n  frame,\n  stft\n}; // Image Ops namespace\n\nimport { cropAndResize } from './image/crop_and_resize';\nimport { flipLeftRight } from './image/flip_left_right';\nimport { grayscaleToRGB } from './image/grayscale_to_rgb';\nimport { rotateWithOffset } from './image/rotate_with_offset';\nimport { nonMaxSuppression } from './image/non_max_suppression';\nimport { nonMaxSuppressionAsync } from './image/non_max_suppression_async';\nimport { nonMaxSuppressionWithScore } from './image/non_max_suppression_with_score';\nimport { nonMaxSuppressionWithScoreAsync } from './image/non_max_suppression_with_score_async';\nimport { nonMaxSuppressionPadded } from './image/non_max_suppression_padded';\nimport { nonMaxSuppressionPaddedAsync } from './image/non_max_suppression_padded_async';\nimport { resizeBilinear } from './image/resize_bilinear';\nimport { resizeNearestNeighbor } from './image/resize_nearest_neighbor';\nimport { threshold } from './image/threshold';\nimport { transform } from './image/transform';\nconst image = {\n  flipLeftRight,\n  grayscaleToRGB,\n  resizeNearestNeighbor,\n  resizeBilinear,\n  rotateWithOffset,\n  cropAndResize,\n  nonMaxSuppression,\n  nonMaxSuppressionAsync,\n  nonMaxSuppressionWithScore,\n  nonMaxSuppressionWithScoreAsync,\n  nonMaxSuppressionPadded,\n  nonMaxSuppressionPaddedAsync,\n  threshold,\n  transform\n}; // linalg namespace\n\nimport { bandPart } from './linalg/band_part';\nimport { gramSchmidt } from './linalg/gram_schmidt';\nimport { qr } from './linalg/qr';\nconst linalg = {\n  bandPart,\n  gramSchmidt,\n  qr\n}; // losses namespace;\n\nimport { absoluteDifference } from './losses/absolute_difference';\nimport { computeWeightedLoss } from './losses/compute_weighted_loss';\nimport { cosineDistance } from './losses/cosine_distance';\nimport { hingeLoss } from './losses/hinge_loss';\nimport { huberLoss } from './losses/huber_loss';\nimport { logLoss } from './losses/log_loss';\nimport { meanSquaredError } from './losses/mean_squared_error';\nimport { sigmoidCrossEntropy } from './losses/sigmoid_cross_entropy';\nimport { softmaxCrossEntropy } from './losses/softmax_cross_entropy';\nconst losses = {\n  absoluteDifference,\n  computeWeightedLoss,\n  cosineDistance,\n  hingeLoss,\n  huberLoss,\n  logLoss,\n  meanSquaredError,\n  sigmoidCrossEntropy,\n  softmaxCrossEntropy\n};\nimport { sparseFillEmptyRows } from './sparse/sparse_fill_empty_rows';\nimport { sparseReshape } from './sparse/sparse_reshape';\nimport { sparseSegmentMean } from './sparse/sparse_segment_mean';\nimport { sparseSegmentSum } from './sparse/sparse_segment_sum';\nconst sparse = {\n  sparseFillEmptyRows,\n  sparseReshape,\n  sparseSegmentMean,\n  sparseSegmentSum\n};\nimport { stringNGrams } from './string/string_n_grams';\nimport { stringSplit } from './string/string_split';\nimport { stringToHashBucketFast } from './string/string_to_hash_bucket_fast'; // tslint:disable-next-line:variable-name\n\nconst string = {\n  stringNGrams,\n  stringSplit,\n  stringToHashBucketFast\n}; // Second level exports.\n\nexport { image, linalg, losses, spectral, fused, signal, sparse, string };","map":{"version":3,"mappings":"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","names":["abs","acos","acosh","add","addN","all","any","argMax","argMin","asin","asinh","atan","atan2","atanh","avgPool","avgPool3d","basicLSTMCell","batchToSpaceND","batchNorm","batchNorm2d","batchNorm3d","batchNorm4d","bincount","broadcastArgs","broadcastTo","buffer","cast","ceil","clipByValue","clone","complex","concat","concat1d","concat2d","concat3d","concat4d","conv1d","conv2d","conv2dTranspose","conv3d","conv3dTranspose","cos","cosh","cumsum","denseBincount","depthToSpace","depthwiseConv2d","diag","dilation2d","div","divNoNan","dot","einsum","elu","equal","erf","exp","expandDims","expm1","eye","fill","floor","floorDiv","gather","greater","greaterEqual","imag","isFinite","isInf","isNaN","leakyRelu","less","lessEqual","linspace","localResponseNormalization","log","log1p","logSigmoid","logSoftmax","logSumExp","logicalAnd","logicalNot","logicalOr","logicalXor","matMul","max","maxPool","maxPool3d","maxPoolWithArgmax","maximum","mean","meshgrid","min","minimum","mirrorPad","mod","moments","mul","multiRNNCell","multinomial","neg","notEqual","oneHot","ones","onesLike","outerProduct","pad","pad1d","pad2d","pad3d","pad4d","pool","pow","prelu","print","prod","rand","randomGamma","randomNormal","randomUniform","range","real","reciprocal","relu","relu6","reshape","reverse","reverse1d","reverse2d","reverse3d","reverse4d","round","rsqrt","scalar","selu","separableConv2d","setdiff1dAsync","sigmoid","sign","sin","sinh","slice","slice1d","slice2d","slice3d","slice4d","softmax","softplus","spaceToBatchND","fft","ifft","irfft","rfft","split","sqrt","square","squaredDifference","squeeze","stack","step","stridedSlice","sub","sum","tan","tanh","tensor","tensor1d","tensor2d","tensor3d","tensor4d","tensor5d","tensor6d","tile","topk","truncatedNormal","unique","unsortedSegmentSum","unstack","variable","where","whereAsync","zeros","zerosLike","op","OP_SCOPE_SUFFIX","spectral","fused","hammingWindow","hannWindow","frame","stft","signal","cropAndResize","flipLeftRight","grayscaleToRGB","rotateWithOffset","nonMaxSuppression","nonMaxSuppressionAsync","nonMaxSuppressionWithScore","nonMaxSuppressionWithScoreAsync","nonMaxSuppressionPadded","nonMaxSuppressionPaddedAsync","resizeBilinear","resizeNearestNeighbor","threshold","transform","image","bandPart","gramSchmidt","qr","linalg","absoluteDifference","computeWeightedLoss","cosineDistance","hingeLoss","huberLoss","logLoss","meanSquaredError","sigmoidCrossEntropy","softmaxCrossEntropy","losses","sparseFillEmptyRows","sparseReshape","sparseSegmentMean","sparseSegmentSum","sparse","stringNGrams","stringSplit","stringToHashBucketFast","string"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-core/src/ops/ops.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Modularized ops.\nexport {abs} from './abs';\nexport {acos} from './acos';\nexport {acosh} from './acosh';\nexport {add} from './add';\nexport {addN} from './add_n';\nexport {all} from './all';\nexport {any} from './any';\nexport {argMax} from './arg_max';\nexport {argMin} from './arg_min';\nexport {asin} from './asin';\nexport {asinh} from './asinh';\nexport {atan} from './atan';\nexport {atan2} from './atan2';\nexport {atanh} from './atanh';\nexport {avgPool} from './avg_pool';\nexport {avgPool3d} from './avg_pool_3d';\nexport {basicLSTMCell} from './basic_lstm_cell';\nexport {batchToSpaceND} from './batch_to_space_nd';\nexport {batchNorm} from './batchnorm';\nexport {batchNorm2d} from './batchnorm2d';\nexport {batchNorm3d} from './batchnorm3d';\nexport {batchNorm4d} from './batchnorm4d';\nexport {bincount} from './bincount';\nexport {broadcastArgs} from './broadcast_args';\nexport {broadcastTo} from './broadcast_to';\nexport {buffer} from './buffer';\nexport {cast} from './cast';\nexport {ceil} from './ceil';\nexport {clipByValue} from './clip_by_value';\nexport {clone} from './clone';\nexport {complex} from './complex';\nexport {concat} from './concat';\nexport {concat1d} from './concat_1d';\nexport {concat2d} from './concat_2d';\nexport {concat3d} from './concat_3d';\nexport {concat4d} from './concat_4d';\nexport {conv1d} from './conv1d';\nexport {conv2d} from './conv2d';\nexport {conv2dTranspose} from './conv2d_transpose';\nexport {conv3d} from './conv3d';\nexport {conv3dTranspose} from './conv3d_transpose';\nexport {cos} from './cos';\nexport {cosh} from './cosh';\nexport {cumsum} from './cumsum';\nexport {denseBincount} from './dense_bincount';\nexport {depthToSpace} from './depth_to_space';\nexport {depthwiseConv2d} from './depthwise_conv2d';\nexport {diag} from './diag';\nexport {dilation2d} from './dilation2d';\nexport {div} from './div';\nexport {divNoNan} from './div_no_nan';\nexport {dot} from './dot';\nexport {einsum} from './einsum';\nexport {elu} from './elu';\nexport {equal} from './equal';\nexport {erf} from './erf';\nexport {exp} from './exp';\nexport {expandDims} from './expand_dims';\nexport {expm1} from './expm1';\nexport {eye} from './eye';\nexport {fill} from './fill';\nexport {floor} from './floor';\nexport {floorDiv} from './floorDiv';\nexport {gather} from './gather';\nexport {greater} from './greater';\nexport {greaterEqual} from './greater_equal';\nexport {imag} from './imag';\nexport {isFinite} from './is_finite';\nexport {isInf} from './is_inf';\nexport {isNaN} from './is_nan';\nexport {leakyRelu} from './leaky_relu';\nexport {less} from './less';\nexport {lessEqual} from './less_equal';\nexport {linspace} from './linspace';\nexport {localResponseNormalization} from './local_response_normalization';\nexport {log} from './log';\nexport {log1p} from './log1p';\nexport {logSigmoid} from './log_sigmoid';\nexport {logSoftmax} from './log_softmax';\nexport {logSumExp} from './log_sum_exp';\nexport {logicalAnd} from './logical_and';\nexport {logicalNot} from './logical_not';\nexport {logicalOr} from './logical_or';\nexport {logicalXor} from './logical_xor';\nexport {matMul} from './mat_mul';\nexport {max} from './max';\nexport {maxPool} from './max_pool';\nexport {maxPool3d} from './max_pool_3d';\nexport {maxPoolWithArgmax} from './max_pool_with_argmax';\nexport {maximum} from './maximum';\nexport {mean} from './mean';\nexport {meshgrid} from './meshgrid';\nexport {min} from './min';\nexport {minimum} from './minimum';\nexport {mirrorPad} from './mirror_pad';\nexport {mod} from './mod';\nexport {moments} from './moments';\nexport {mul} from './mul';\nexport {LSTMCellFunc, multiRNNCell} from './multi_rnn_cell';\nexport {multinomial} from './multinomial';\nexport {neg} from './neg';\nexport {notEqual} from './not_equal';\nexport {oneHot} from './one_hot';\nexport {ones} from './ones';\nexport {onesLike} from './ones_like';\nexport {outerProduct} from './outer_product';\nexport {pad} from './pad';\nexport {pad1d} from './pad1d';\nexport {pad2d} from './pad2d';\nexport {pad3d} from './pad3d';\nexport {pad4d} from './pad4d';\nexport {pool} from './pool';\nexport {pow} from './pow';\nexport {prelu} from './prelu';\nexport {print} from './print';\nexport {prod} from './prod';\nexport {rand} from './rand';\nexport {randomGamma} from './random_gamma';\nexport {randomNormal} from './random_normal';\nexport {randomUniform} from './random_uniform';\nexport {range} from './range';\nexport {real} from './real';\nexport {reciprocal} from './reciprocal';\nexport {relu} from './relu';\nexport {relu6} from './relu6';\nexport {reshape} from './reshape';\nexport {reverse} from './reverse';\nexport {reverse1d} from './reverse_1d';\nexport {reverse2d} from './reverse_2d';\nexport {reverse3d} from './reverse_3d';\nexport {reverse4d} from './reverse_4d';\nexport {round} from './round';\nexport {rsqrt} from './rsqrt';\nexport {scalar} from './scalar';\nexport {selu} from './selu';\nexport {separableConv2d} from './separable_conv2d';\nexport {setdiff1dAsync} from './setdiff1d_async';\nexport {sigmoid} from './sigmoid';\nexport {sign} from './sign';\nexport {sin} from './sin';\nexport {sinh} from './sinh';\nexport {slice} from './slice';\nexport {slice1d} from './slice1d';\nexport {slice2d} from './slice2d';\nexport {slice3d} from './slice3d';\nexport {slice4d} from './slice4d';\nexport {softmax} from './softmax';\nexport {softplus} from './softplus';\nexport {spaceToBatchND} from './space_to_batch_nd';\nexport {fft} from './spectral/fft';\nexport {ifft} from './spectral/ifft';\nexport {irfft} from './spectral/irfft';\nexport {rfft} from './spectral/rfft';\nexport {split} from './split';\nexport {sqrt} from './sqrt';\nexport {square} from './square';\nexport {squaredDifference} from './squared_difference';\nexport {squeeze} from './squeeze';\nexport {stack} from './stack';\nexport {step} from './step';\nexport {stridedSlice} from './strided_slice';\nexport {sub} from './sub';\nexport {sum} from './sum';\nexport {tan} from './tan';\nexport {tanh} from './tanh';\nexport {tensor} from './tensor';\nexport {tensor1d} from './tensor1d';\nexport {tensor2d} from './tensor2d';\nexport {tensor3d} from './tensor3d';\nexport {tensor4d} from './tensor4d';\nexport {tensor5d} from './tensor5d';\nexport {tensor6d} from './tensor6d';\nexport {tile} from './tile';\nexport {topk} from './topk';\nexport {truncatedNormal} from './truncated_normal';\nexport {unique} from './unique';\nexport {unsortedSegmentSum} from './unsorted_segment_sum';\nexport {unstack} from './unstack';\nexport {variable} from './variable';\nexport {where} from './where';\nexport {whereAsync} from './where_async';\nexport {zeros} from './zeros';\nexport {zerosLike} from './zeros_like';\n\nexport * from './boolean_mask';\nexport * from './transpose';\nexport * from './norm';\nexport * from './moving_average';\nexport * from './scatter_nd';\nexport * from './sparse_to_dense';\nexport * from './gather_nd';\nexport * from './dropout';\nexport * from './signal_ops_util';\nexport * from './in_top_k';\n\nexport {op, OP_SCOPE_SUFFIX} from './operation';\n\nimport {rfft} from './spectral/rfft';\nimport {fft} from './spectral/fft';\nimport {ifft} from './spectral/ifft';\nimport {irfft} from './spectral/irfft';\nconst spectral = {\n  fft,\n  ifft,\n  rfft,\n  irfft\n};\n\nimport * as fused from './fused_ops';\n\nimport {hammingWindow} from './signal/hamming_window';\nimport {hannWindow} from './signal/hann_window';\nimport {frame} from './signal/frame';\nimport {stft} from './signal/stft';\nconst signal = {\n  hammingWindow,\n  hannWindow,\n  frame,\n  stft,\n};\n\n// Image Ops namespace\nimport {cropAndResize} from './image/crop_and_resize';\nimport {flipLeftRight} from './image/flip_left_right';\nimport {grayscaleToRGB} from './image/grayscale_to_rgb';\nimport {rotateWithOffset} from './image/rotate_with_offset';\nimport {nonMaxSuppression} from './image/non_max_suppression';\nimport {nonMaxSuppressionAsync} from './image/non_max_suppression_async';\nimport {nonMaxSuppressionWithScore} from './image/non_max_suppression_with_score';\nimport {nonMaxSuppressionWithScoreAsync} from './image/non_max_suppression_with_score_async';\nimport {nonMaxSuppressionPadded} from './image/non_max_suppression_padded';\nimport {nonMaxSuppressionPaddedAsync} from './image/non_max_suppression_padded_async';\nimport {resizeBilinear} from './image/resize_bilinear';\nimport {resizeNearestNeighbor} from './image/resize_nearest_neighbor';\nimport {threshold} from './image/threshold';\nimport {transform} from './image/transform';\nconst image = {\n  flipLeftRight,\n  grayscaleToRGB,\n  resizeNearestNeighbor,\n  resizeBilinear,\n  rotateWithOffset,\n  cropAndResize,\n  nonMaxSuppression,\n  nonMaxSuppressionAsync,\n  nonMaxSuppressionWithScore,\n  nonMaxSuppressionWithScoreAsync,\n  nonMaxSuppressionPadded,\n  nonMaxSuppressionPaddedAsync,\n  threshold,\n  transform\n};\n\n// linalg namespace\nimport {bandPart} from './linalg/band_part';\nimport {gramSchmidt} from './linalg/gram_schmidt';\nimport {qr} from './linalg/qr';\nconst linalg = {\n  bandPart,\n  gramSchmidt,\n  qr\n};\n\n// losses namespace;\nimport {absoluteDifference} from './losses/absolute_difference';\nimport {computeWeightedLoss} from './losses/compute_weighted_loss';\nimport {cosineDistance} from './losses/cosine_distance';\nimport {hingeLoss} from './losses/hinge_loss';\nimport {huberLoss} from './losses/huber_loss';\nimport {logLoss} from './losses/log_loss';\nimport {meanSquaredError} from './losses/mean_squared_error';\nimport {sigmoidCrossEntropy} from './losses/sigmoid_cross_entropy';\nimport {softmaxCrossEntropy} from './losses/softmax_cross_entropy';\nconst losses = {\n  absoluteDifference,\n  computeWeightedLoss,\n  cosineDistance,\n  hingeLoss,\n  huberLoss,\n  logLoss,\n  meanSquaredError,\n  sigmoidCrossEntropy,\n  softmaxCrossEntropy\n};\n\nimport {sparseFillEmptyRows} from './sparse/sparse_fill_empty_rows';\nimport {sparseReshape} from './sparse/sparse_reshape';\nimport {sparseSegmentMean} from './sparse/sparse_segment_mean';\nimport {sparseSegmentSum} from './sparse/sparse_segment_sum';\nconst sparse = {\n  sparseFillEmptyRows,\n  sparseReshape,\n  sparseSegmentMean,\n  sparseSegmentSum\n};\n\nimport {stringNGrams} from './string/string_n_grams';\nimport {stringSplit} from './string/string_split';\nimport {stringToHashBucketFast} from './string/string_to_hash_bucket_fast';\n// tslint:disable-next-line:variable-name\nconst string = {\n  stringNGrams,\n  stringSplit,\n  stringToHashBucketFast\n};\n\n// Second level exports.\nexport {image, linalg, losses, spectral, fused, signal, sparse, string};\n"]},"metadata":{},"sourceType":"module"}