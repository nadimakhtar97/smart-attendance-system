{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Fill, util } from '@tensorflow/tfjs-core';\nimport { FillProgram } from '../fill_gpu';\nexport function fill(args) {\n  const {\n    backend,\n    attrs\n  } = args;\n  const {\n    shape,\n    value\n  } = attrs;\n  let {\n    dtype\n  } = attrs;\n  dtype = dtype || util.inferDtype(value);\n\n  if (dtype === 'string') {\n    // String type should be handled in CPU memory.\n    const values = util.getArrayFromDType(dtype, util.sizeFromShape(shape));\n    values.fill(value);\n    return backend.makeTensorInfo(shape, dtype, values);\n  } else {\n    const program = new FillProgram(shape, value);\n    const customValues = [[value]];\n    return backend.runWebGLProgram(program, [], dtype, customValues);\n  }\n}\nexport const fillConfig = {\n  kernelName: Fill,\n  backendName: 'webgl',\n  kernelFunc: fill\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,IAAR,EAA+DC,IAA/D,QAA0E,uBAA1E;AAGA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,OAAM,SAAUC,IAAV,CAAeC,IAAf,EAAkE;AAEtE,QAAM;AAACC,WAAD;AAAUC;AAAV,MAAmBF,IAAzB;AACA,QAAM;AAACG,SAAD;AAAQC;AAAR,MAAiBF,KAAvB;AACA,MAAI;AAACG;AAAD,MAAUH,KAAd;AAEAG,OAAK,GAAGA,KAAK,IAAIR,IAAI,CAACS,UAAL,CAAgBF,KAAhB,CAAjB;;AAEA,MAAIC,KAAK,KAAK,QAAd,EAAwB;AACtB;AACA,UAAME,MAAM,GAAGV,IAAI,CAACW,iBAAL,CAAuBH,KAAvB,EAA8BR,IAAI,CAACY,aAAL,CAAmBN,KAAnB,CAA9B,CAAf;AACAI,UAAM,CAACR,IAAP,CAAYK,KAAZ;AACA,WAAOH,OAAO,CAACS,cAAR,CAAuBP,KAAvB,EAA8BE,KAA9B,EAAqCE,MAArC,CAAP;AACD,GALD,MAKO;AACL,UAAMI,OAAO,GAAG,IAAIb,WAAJ,CAAgBK,KAAhB,EAAuBC,KAAvB,CAAhB;AACA,UAAMQ,YAAY,GAAG,CAAC,CAACR,KAAD,CAAD,CAArB;AACA,WAAOH,OAAO,CAACY,eAAR,CAAwBF,OAAxB,EAAiC,EAAjC,EAAqCN,KAArC,EAA4CO,YAA5C,CAAP;AACD;AACF;AAED,OAAO,MAAME,UAAU,GAAiB;AACtCC,YAAU,EAAEnB,IAD0B;AAEtCoB,aAAW,EAAE,OAFyB;AAGtCC,YAAU,EAAElB;AAH0B,CAAjC","names":["Fill","util","FillProgram","fill","args","backend","attrs","shape","value","dtype","inferDtype","values","getArrayFromDType","sizeFromShape","makeTensorInfo","program","customValues","runWebGLProgram","fillConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/Fill.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Fill, FillAttrs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {FillProgram} from '../fill_gpu';\n\nexport function fill(args: {backend: MathBackendWebGL, attrs: FillAttrs}):\n    TensorInfo {\n  const {backend, attrs} = args;\n  const {shape, value} = attrs;\n  let {dtype} = attrs;\n\n  dtype = dtype || util.inferDtype(value);\n\n  if (dtype === 'string') {\n    // String type should be handled in CPU memory.\n    const values = util.getArrayFromDType(dtype, util.sizeFromShape(shape));\n    values.fill(value as string);\n    return backend.makeTensorInfo(shape, dtype, values);\n  } else {\n    const program = new FillProgram(shape, value as number);\n    const customValues = [[value as number]];\n    return backend.runWebGLProgram(program, [], dtype, customValues);\n  }\n}\n\nexport const fillConfig: KernelConfig = {\n  kernelName: Fill,\n  backendName: 'webgl',\n  kernelFunc: fill as {} as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module"}