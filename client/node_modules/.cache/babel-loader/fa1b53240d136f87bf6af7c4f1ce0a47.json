{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPool3DGrad } from '@tensorflow/tfjs-core';\nimport { MaxPool3DBackpropProgram } from '../max_pool_backprop_gpu';\nimport { Pool3DProgram } from '../pool_gpu';\nexport function maxPool3DGrad(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    dy,\n    input\n  } = inputs;\n  const x = input;\n  const {\n    filterSize,\n    strides,\n    pad,\n    dimRoundingMode\n  } = attrs;\n  const dilations = [1, 1, 1];\n  const convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n  const maxPool3dPositionsProgram = new Pool3DProgram(convInfo, 'max', true\n  /* get positions */\n  );\n  const maxPool3dPositions = backend.runWebGLProgram(maxPool3dPositionsProgram, [x], x.dtype);\n  const maxPoolBackpropProgram = new MaxPool3DBackpropProgram(convInfo);\n  const result = backend.runWebGLProgram(maxPoolBackpropProgram, [dy, maxPool3dPositions], x.dtype);\n  backend.disposeIntermediateTensorInfo(maxPool3dPositions);\n  return result;\n}\nexport const maxPool3DGradConfig = {\n  kernelName: MaxPool3DGrad,\n  backendName: 'webgl',\n  kernelFunc: maxPool3DGrad\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAAQA,YAAR,EAAgDC,aAAhD,QAAyH,uBAAzH;AAGA,SAAQC,wBAAR,QAAuC,0BAAvC;AACA,SAAQC,aAAR,QAA4B,aAA5B;AAEA,OAAM,SAAUC,aAAV,CAAwBC,IAAxB,EAIL;AACC,QAAM;AAACC,UAAD;AAASC,WAAT;AAAkBC;AAAlB,MAA2BH,IAAjC;AACA,QAAM;AAACI,MAAD;AAAKC;AAAL,MAAcJ,MAApB;AACA,QAAMK,CAAC,GAAGD,KAAV;AACA,QAAM;AAACE,cAAD;AAAaC,WAAb;AAAsBC,OAAtB;AAA2BC;AAA3B,MAA8CP,KAApD;AACA,QAAMQ,SAAS,GAA6B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA5C;AAEA,QAAMC,QAAQ,GAAGjB,YAAY,CAACkB,iBAAb,CACbP,CAAC,CAACQ,KADW,EACwCP,UADxC,EACoDC,OADpD,EAEbG,SAFa,EAEFF,GAFE,EAEGC,eAFH,CAAjB;AAIA,QAAMK,yBAAyB,GAC3B,IAAIjB,aAAJ,CAAkBc,QAAlB,EAA4B,KAA5B,EAAmC;AAAK;AAAxC,GADJ;AAEA,QAAMI,kBAAkB,GACpBd,OAAO,CAACe,eAAR,CAAwBF,yBAAxB,EAAmD,CAACT,CAAD,CAAnD,EAAwDA,CAAC,CAACY,KAA1D,CADJ;AAEA,QAAMC,sBAAsB,GAAG,IAAItB,wBAAJ,CAA6Be,QAA7B,CAA/B;AACA,QAAMQ,MAAM,GAAGlB,OAAO,CAACe,eAAR,CACXE,sBADW,EACa,CAACf,EAAD,EAAKY,kBAAL,CADb,EACuCV,CAAC,CAACY,KADzC,CAAf;AAEAhB,SAAO,CAACmB,6BAAR,CAAsCL,kBAAtC;AACA,SAAOI,MAAP;AACD;AAED,OAAO,MAAME,mBAAmB,GAAiB;AAC/CC,YAAU,EAAE3B,aADmC;AAE/C4B,aAAW,EAAE,OAFkC;AAG/CC,YAAU,EAAE1B;AAHmC,CAA1C","names":["backend_util","MaxPool3DGrad","MaxPool3DBackpropProgram","Pool3DProgram","maxPool3DGrad","args","inputs","backend","attrs","dy","input","x","filterSize","strides","pad","dimRoundingMode","dilations","convInfo","computePool3DInfo","shape","maxPool3dPositionsProgram","maxPool3dPositions","runWebGLProgram","dtype","maxPoolBackpropProgram","result","disposeIntermediateTensorInfo","maxPool3DGradConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/MaxPool3DGrad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {backend_util, KernelConfig, KernelFunc, MaxPool3DGrad, MaxPool3DGradAttrs, MaxPool3DGradInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {MaxPool3DBackpropProgram} from '../max_pool_backprop_gpu';\nimport {Pool3DProgram} from '../pool_gpu';\n\nexport function maxPool3DGrad(args: {\n  inputs: MaxPool3DGradInputs,\n  backend: MathBackendWebGL,\n  attrs: MaxPool3DGradAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {dy, input} = inputs;\n  const x = input;\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const dilations: [number, number, number] = [1, 1, 1];\n\n  const convInfo = backend_util.computePool3DInfo(\n      x.shape as [number, number, number, number, number], filterSize, strides,\n      dilations, pad, dimRoundingMode);\n\n  const maxPool3dPositionsProgram =\n      new Pool3DProgram(convInfo, 'max', true /* get positions */);\n  const maxPool3dPositions =\n      backend.runWebGLProgram(maxPool3dPositionsProgram, [x], x.dtype);\n  const maxPoolBackpropProgram = new MaxPool3DBackpropProgram(convInfo);\n  const result = backend.runWebGLProgram(\n      maxPoolBackpropProgram, [dy, maxPool3dPositions], x.dtype);\n  backend.disposeIntermediateTensorInfo(maxPool3dPositions);\n  return result;\n}\n\nexport const maxPool3DGradConfig: KernelConfig = {\n  kernelName: MaxPool3DGrad,\n  backendName: 'webgl',\n  kernelFunc: maxPool3DGrad as {} as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module"}