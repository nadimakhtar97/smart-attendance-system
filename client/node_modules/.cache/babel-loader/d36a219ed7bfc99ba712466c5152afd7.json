{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { broadcastTo } from '../../ops/broadcast_to';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.broadcastTo = function (shape) {\n  this.throwIfDisposed();\n  return broadcastTo(this, shape);\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,WAAR,QAA0B,wBAA1B;AACA,SAAQC,oBAAR,QAA2C,cAA3C;;AASAA,oBAAoB,GAAGC,SAAvB,CAAiCF,WAAjC,GAA+C,UAC3CG,KAD2C,EACzB;AACpB,OAAKC,eAAL;AACA,SAAOJ,WAAW,CAAC,IAAD,EAAOG,KAAP,CAAlB;AACD,CAJD","names":["broadcastTo","getGlobalTensorClass","prototype","shape","throwIfDisposed"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-core/src/public/chained_ops/broadcast_to.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {broadcastTo} from '../../ops/broadcast_to';\nimport {getGlobalTensorClass, Tensor} from '../../tensor';\nimport {Rank, ShapeMap} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    broadcastTo<R extends Rank>(shape: ShapeMap[R]): Tensor<R>;\n  }\n}\n\ngetGlobalTensorClass().prototype.broadcastTo = function<R extends Rank>(\n    shape: ShapeMap[R]): Tensor<R> {\n  this.throwIfDisposed();\n  return broadcastTo(this, shape);\n};\n"]},"metadata":{},"sourceType":"module"}