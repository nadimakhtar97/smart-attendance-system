{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Exp } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET_UNARY, unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { expImplCPU } from '../kernel_utils/shared';\nexport const EXP = CHECK_NAN_SNIPPET_UNARY + `\n  return exp(x);\n`;\nconst EXP_PACKED = `\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n`;\nexport const exp = unaryKernelFunc({\n  opSnippet: EXP,\n  packedOpSnippet: EXP_PACKED,\n  cpuKernelImpl: expImplCPU,\n  dtype: 'float32'\n});\nexport const expConfig = {\n  kernelName: Exp,\n  backendName: 'webgl',\n  kernelFunc: exp\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,GAAR,QAA4C,uBAA5C;AAEA,SAAQC,uBAAR,EAAiCC,eAAjC,QAAuD,oCAAvD;AACA,SAAQC,UAAR,QAAyB,wBAAzB;AAEA,OAAO,MAAMC,GAAG,GAAGH,uBAAuB,GAAG;;CAAtC;AAIP,MAAMI,UAAU,GAAG;;;;;;;;;CAAnB;AAWA,OAAO,MAAMC,GAAG,GAAGJ,eAAe,CAAC;AACjCK,WAAS,EAAEH,GADsB;AAEjCI,iBAAe,EAAEH,UAFgB;AAGjCI,eAAa,EAAEN,UAHkB;AAIjCO,OAAK,EAAE;AAJ0B,CAAD,CAA3B;AAOP,OAAO,MAAMC,SAAS,GAAiB;AACrCC,YAAU,EAAEZ,GADyB;AAErCa,aAAW,EAAE,OAFwB;AAGrCC,YAAU,EAAER;AAHyB,CAAhC","names":["Exp","CHECK_NAN_SNIPPET_UNARY","unaryKernelFunc","expImplCPU","EXP","EXP_PACKED","exp","opSnippet","packedOpSnippet","cpuKernelImpl","dtype","expConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/Exp.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Exp, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {CHECK_NAN_SNIPPET_UNARY, unaryKernelFunc} from '../kernel_utils/kernel_funcs_utils';\nimport {expImplCPU} from '../kernel_utils/shared';\n\nexport const EXP = CHECK_NAN_SNIPPET_UNARY + `\n  return exp(x);\n`;\n\nconst EXP_PACKED = `\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n`;\n\nexport const exp = unaryKernelFunc({\n  opSnippet: EXP,\n  packedOpSnippet: EXP_PACKED,\n  cpuKernelImpl: expImplCPU,\n  dtype: 'float32',\n});\n\nexport const expConfig: KernelConfig = {\n  kernelName: Exp,\n  backendName: 'webgl',\n  kernelFunc: exp as {} as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module"}