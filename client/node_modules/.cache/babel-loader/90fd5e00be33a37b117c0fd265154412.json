{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, GatherNd, util } from '@tensorflow/tfjs-core';\nimport { gatherNdImpl } from './GatherNd_Impl';\nexport function gatherNd(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    params,\n    indices\n  } = inputs;\n  const paramsSize = util.sizeFromShape(params.shape);\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n  const [resultShape, numSlices, sliceSize, strides] = backend_util.prepareAndValidate(params, indices);\n\n  if (numSlices === 0) {\n    return backend.makeTensorInfo(resultShape, params.dtype, []);\n  }\n\n  const indicesData = backend.data.get(indices.dataId).values;\n  const paramsBuf = backend.bufferSync(params);\n  const outBuf = gatherNdImpl(indicesData, paramsBuf, params.dtype, numSlices, sliceRank, sliceSize, strides, params.shape, paramsSize);\n  return backend.makeTensorInfo(resultShape, params.dtype, outBuf.values);\n}\nexport const gatherNdConfig = {\n  kernelName: GatherNd,\n  backendName: 'cpu',\n  kernelFunc: gatherNd\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAR,EAAsBC,QAAtB,EAAkGC,IAAlG,QAA6G,uBAA7G;AAIA,SAAQC,YAAR,QAA2B,iBAA3B;AAEA,OAAM,SAAUC,QAAV,CACFC,IADE,EACqD;AACzD,QAAM;AAACC,UAAD;AAASC;AAAT,MAAoBF,IAA1B;AACA,QAAM;AAACG,UAAD;AAASC;AAAT,MAAoBH,MAA1B;AAEA,QAAMI,UAAU,GAAGR,IAAI,CAACS,aAAL,CAAmBH,MAAM,CAACI,KAA1B,CAAnB;AAEA,QAAMC,YAAY,GAAGJ,OAAO,CAACG,KAA7B;AACA,QAAME,SAAS,GAAGD,YAAY,CAACA,YAAY,CAACE,MAAb,GAAsB,CAAvB,CAA9B;AAEA,QAAM,CAACC,WAAD,EAAcC,SAAd,EAAyBC,SAAzB,EAAoCC,OAApC,IACFnB,YAAY,CAACoB,kBAAb,CAAgCZ,MAAhC,EAAwCC,OAAxC,CADJ;;AAEA,MAAIQ,SAAS,KAAK,CAAlB,EAAqB;AACnB,WAAOV,OAAO,CAACc,cAAR,CAAuBL,WAAvB,EAAoCR,MAAM,CAACc,KAA3C,EAAkD,EAAlD,CAAP;AACD;;AAED,QAAMC,WAAW,GAAGhB,OAAO,CAACiB,IAAR,CAAaC,GAAb,CAAiBhB,OAAO,CAACiB,MAAzB,EAAiCC,MAArD;AACA,QAAMC,SAAS,GAAGrB,OAAO,CAACsB,UAAR,CAAmBrB,MAAnB,CAAlB;AACA,QAAMsB,MAAM,GAAG3B,YAAY,CACvBoB,WADuB,EACVK,SADU,EACCpB,MAAM,CAACc,KADR,EACeL,SADf,EAC0BH,SAD1B,EACqCI,SADrC,EAEvBC,OAFuB,EAEdX,MAAM,CAACI,KAFO,EAEAF,UAFA,CAA3B;AAIA,SAAOH,OAAO,CAACc,cAAR,CAAuBL,WAAvB,EAAoCR,MAAM,CAACc,KAA3C,EAAkDQ,MAAM,CAACH,MAAzD,CAAP;AACD;AAED,OAAO,MAAMI,cAAc,GAAiB;AAC1CC,YAAU,EAAE/B,QAD8B;AAE1CgC,aAAW,EAAE,KAF6B;AAG1CC,YAAU,EAAE9B;AAH8B,CAArC","names":["backend_util","GatherNd","util","gatherNdImpl","gatherNd","args","inputs","backend","params","indices","paramsSize","sizeFromShape","shape","indicesShape","sliceRank","length","resultShape","numSlices","sliceSize","strides","prepareAndValidate","makeTensorInfo","dtype","indicesData","data","get","dataId","values","paramsBuf","bufferSync","outBuf","gatherNdConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-cpu/src/kernels/GatherNd.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, GatherNd, GatherNdInputs, KernelConfig, KernelFunc, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nimport {gatherNdImpl} from './GatherNd_Impl';\n\nexport function gatherNd(\n    args: {inputs: GatherNdInputs, backend: MathBackendCPU}): TensorInfo {\n  const {inputs, backend} = args;\n  const {params, indices} = inputs;\n\n  const paramsSize = util.sizeFromShape(params.shape);\n\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n\n  const [resultShape, numSlices, sliceSize, strides] =\n      backend_util.prepareAndValidate(params, indices);\n  if (numSlices === 0) {\n    return backend.makeTensorInfo(resultShape, params.dtype, []);\n  }\n\n  const indicesData = backend.data.get(indices.dataId).values as TypedArray;\n  const paramsBuf = backend.bufferSync(params);\n  const outBuf = gatherNdImpl(\n      indicesData, paramsBuf, params.dtype, numSlices, sliceRank, sliceSize,\n      strides, params.shape, paramsSize);\n\n  return backend.makeTensorInfo(resultShape, params.dtype, outBuf.values);\n}\n\nexport const gatherNdConfig: KernelConfig = {\n  kernelName: GatherNd,\n  backendName: 'cpu',\n  kernelFunc: gatherNd as {} as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module"}