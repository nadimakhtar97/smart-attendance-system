{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { SplitV, util } from '@tensorflow/tfjs-core';\nimport { slice } from './Slice';\nexport function splitV(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    numOrSizeSplits,\n    axis\n  } = attrs;\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\n  const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n  const begin = new Array(x.shape.length).fill(0);\n  const size = x.shape.slice();\n  return splitSizes.map(s => {\n    const sliceSize = [...size];\n    sliceSize[$axis] = s;\n    const sliceT = slice({\n      inputs: {\n        x\n      },\n      backend,\n      attrs: {\n        begin,\n        size: sliceSize\n      }\n    });\n    begin[$axis] += s;\n    return sliceT;\n  });\n}\nexport const splitVConfig = {\n  kernelName: SplitV,\n  backendName: 'cpu',\n  kernelFunc: splitV\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAR,QAAsD,uBAAtD;AACA,SAAkCC,MAAlC,EAAsDC,IAAtD,QAAiE,uBAAjE;AAGA,SAAQC,KAAR,QAAoB,SAApB;AAEA,OAAM,SAAUC,MAAV,CACFC,IADE,EACuE;AAE3E,QAAM;AAACC,UAAD;AAASC,WAAT;AAAkBC;AAAlB,MAA2BH,IAAjC;AACA,QAAM;AAACI;AAAD,MAAMH,MAAZ;AACA,QAAM;AAACI,mBAAD;AAAkBC;AAAlB,MAA0BH,KAAhC;AAEA,QAAMI,KAAK,GAAGV,IAAI,CAACW,cAAL,CAAoBF,IAApB,EAA0BF,CAAC,CAACK,KAA5B,EAAmC,CAAnC,CAAd;AACA,QAAMC,UAAU,GAAGf,YAAY,CAACgB,gBAAb,CAA8BP,CAA9B,EAAiCC,eAAjC,EAAkDE,KAAlD,CAAnB;AAEA,QAAMK,KAAK,GAAG,IAAIC,KAAJ,CAAUT,CAAC,CAACK,KAAF,CAAQK,MAAlB,EAA0BC,IAA1B,CAA+B,CAA/B,CAAd;AACA,QAAMC,IAAI,GAAGZ,CAAC,CAACK,KAAF,CAAQX,KAAR,EAAb;AACA,SAAOY,UAAU,CAACO,GAAX,CAAeC,CAAC,IAAG;AACxB,UAAMC,SAAS,GAAG,CAAC,GAAGH,IAAJ,CAAlB;AACAG,aAAS,CAACZ,KAAD,CAAT,GAAmBW,CAAnB;AACA,UAAME,MAAM,GACRtB,KAAK,CAAC;AAACG,YAAM,EAAE;AAACG;AAAD,OAAT;AAAcF,aAAd;AAAuBC,WAAK,EAAE;AAACS,aAAD;AAAQI,YAAI,EAAEG;AAAd;AAA9B,KAAD,CADT;AAEAP,SAAK,CAACL,KAAD,CAAL,IAAgBW,CAAhB;AACA,WAAOE,MAAP;AACD,GAPM,CAAP;AAQD;AAED,OAAO,MAAMC,YAAY,GAAiB;AACxCC,YAAU,EAAE1B,MAD4B;AAExC2B,aAAW,EAAE,KAF2B;AAGxCC,YAAU,EAAEzB;AAH4B,CAAnC","names":["backend_util","SplitV","util","slice","splitV","args","inputs","backend","attrs","x","numOrSizeSplits","axis","$axis","parseAxisParam","shape","splitSizes","prepareSplitSize","begin","Array","length","fill","size","map","s","sliceSize","sliceT","splitVConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-cpu/src/kernels/SplitV.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, SplitVAttrs, SplitVInputs} from '@tensorflow/tfjs-core';\nimport {KernelConfig, KernelFunc, SplitV, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {slice} from './Slice';\n\nexport function splitV(\n    args: {inputs: SplitVInputs, backend: MathBackendCPU, attrs: SplitVAttrs}):\n    TensorInfo[] {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {numOrSizeSplits, axis} = attrs;\n\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\n  const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n\n  const begin = new Array(x.shape.length).fill(0);\n  const size = x.shape.slice();\n  return splitSizes.map(s => {\n    const sliceSize = [...size];\n    sliceSize[$axis] = s;\n    const sliceT =\n        slice({inputs: {x}, backend, attrs: {begin, size: sliceSize}});\n    begin[$axis] += s;\n    return sliceT;\n  });\n}\n\nexport const splitVConfig: KernelConfig = {\n  kernelName: SplitV,\n  backendName: 'cpu',\n  kernelFunc: splitV as {} as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module"}