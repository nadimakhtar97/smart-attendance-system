{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { RotateWithOffset } from '@tensorflow/tfjs-core';\nimport { RotateProgram } from '../rotate_gpu';\nexport const rotateWithOffsetConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'webgl',\n  kernelFunc: _ref => {\n    let {\n      inputs,\n      attrs,\n      backend\n    } = _ref;\n    const {\n      image\n    } = inputs;\n    const {\n      radians,\n      fillValue,\n      center\n    } = attrs;\n    const webglBackend = backend;\n    const program = new RotateProgram(image.shape, fillValue);\n    const [centerX, centerY] = backend_util.getImageCenter(center, image.shape[1], image.shape[2]);\n    const customValues = [[centerX, centerY, Math.sin(radians), Math.cos(radians)]];\n    const output = webglBackend.runWebGLProgram(program, [image], image.dtype, customValues);\n    return output;\n  }\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAR,QAAmD,uBAAnD;AACA,SAAQC,gBAAR,QAA8E,uBAA9E;AAGA,SAAQC,aAAR,QAA4B,eAA5B;AAEA,OAAO,MAAMC,sBAAsB,GAAiB;AAClDC,YAAU,EAAEH,gBADsC;AAElDI,aAAW,EAAE,OAFqC;AAGlDC,YAAU,EAAE,QAA6B;AAAA,QAA5B;AAACC,YAAD;AAASC,WAAT;AAAgBC;AAAhB,KAA4B;AACvC,UAAM;AAACC;AAAD,QAAUH,MAAhB;AACA,UAAM;AAACI,aAAD;AAAUC,eAAV;AAAqBC;AAArB,QAA+BL,KAArC;AACA,UAAMM,YAAY,GAAGL,OAArB;AAEA,UAAMM,OAAO,GAAG,IAAIb,aAAJ,CAAmBQ,KAAkB,CAACM,KAAtC,EAA6CJ,SAA7C,CAAhB;AACA,UAAM,CAACK,OAAD,EAAUC,OAAV,IACFlB,YAAY,CAACmB,cAAb,CAA4BN,MAA5B,EAAoCH,KAAK,CAACM,KAAN,CAAY,CAAZ,CAApC,EAAoDN,KAAK,CAACM,KAAN,CAAY,CAAZ,CAApD,CADJ;AAEA,UAAMI,YAAY,GACd,CAAC,CAACH,OAAD,EAAUC,OAAV,EAAmBG,IAAI,CAACC,GAAL,CAASX,OAAT,CAAnB,EAAsCU,IAAI,CAACE,GAAL,CAASZ,OAAT,CAAtC,CAAD,CADJ;AAEA,UAAMa,MAAM,GAAGV,YAAY,CAACW,eAAb,CACXV,OADW,EACF,CAACL,KAAD,CADE,EACOA,KAAK,CAACgB,KADb,EACoBN,YADpB,CAAf;AAEA,WAAOI,MAAP;AACD;AAhBiD,CAA7C","names":["backend_util","RotateWithOffset","RotateProgram","rotateWithOffsetConfig","kernelName","backendName","kernelFunc","inputs","attrs","backend","image","radians","fillValue","center","webglBackend","program","shape","centerX","centerY","getImageCenter","customValues","Math","sin","cos","output","runWebGLProgram","dtype"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/RotateWithOffset.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, Tensor4D} from '@tensorflow/tfjs-core';\nimport {RotateWithOffset, RotateWithOffsetAttrs, RotateWithOffsetInputs} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {RotateProgram} from '../rotate_gpu';\n\nexport const rotateWithOffsetConfig: KernelConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'webgl',\n  kernelFunc: ({inputs, attrs, backend}) => {\n    const {image} = inputs as RotateWithOffsetInputs;\n    const {radians, fillValue, center} = attrs as {} as RotateWithOffsetAttrs;\n    const webglBackend = backend as MathBackendWebGL;\n\n    const program = new RotateProgram((image as Tensor4D).shape, fillValue);\n    const [centerX, centerY] =\n        backend_util.getImageCenter(center, image.shape[1], image.shape[2]);\n    const customValues =\n        [[centerX, centerY, Math.sin(radians), Math.cos(radians)]];\n    const output = webglBackend.runWebGLProgram(\n        program, [image], image.dtype, customValues);\n    return output;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}