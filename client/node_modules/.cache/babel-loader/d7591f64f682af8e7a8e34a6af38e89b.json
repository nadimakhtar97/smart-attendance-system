{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Step } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET, UnaryOpProgram } from '../unaryop_gpu';\nexport function step(_ref) {\n  let {\n    inputs,\n    attrs,\n    backend\n  } = _ref;\n  const {\n    x\n  } = inputs;\n  const opSnippet = CHECK_NAN_SNIPPET + `\n    return x > 0.0 ? 1.0 : float(${attrs.alpha});\n  `;\n  const program = new UnaryOpProgram(x.shape, opSnippet);\n  return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport const stepConfig = {\n  kernelName: Step,\n  backendName: 'webgl',\n  kernelFunc: step\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAkCA,IAAlC,QAAiF,uBAAjF;AAGA,SAAQC,iBAAR,EAA2BC,cAA3B,QAAgD,gBAAhD;AAEA,OAAM,SAAUC,IAAV,OAEoE;AAAA,MADtE;AAACC,UAAD;AAASC,SAAT;AAAgBC;AAAhB,GACsE;AAExE,QAAM;AAACC;AAAD,MAAMH,MAAZ;AACA,QAAMI,SAAS,GAAGP,iBAAiB,GAAG;mCACLI,KAAK,CAACI,KAAK;GAD5C;AAIA,QAAMC,OAAO,GAAG,IAAIR,cAAJ,CAAmBK,CAAC,CAACI,KAArB,EAA4BH,SAA5B,CAAhB;AAEA,SAAOF,OAAO,CAACM,eAAR,CAAwBF,OAAxB,EAAiC,CAACH,CAAD,CAAjC,EAAsCA,CAAC,CAACM,KAAxC,CAAP;AACD;AAED,OAAO,MAAMC,UAAU,GAAiB;AACtCC,YAAU,EAAEf,IAD0B;AAEtCgB,aAAW,EAAE,OAFyB;AAGtCC,YAAU,EAAEd;AAH0B,CAAjC","names":["Step","CHECK_NAN_SNIPPET","UnaryOpProgram","step","inputs","attrs","backend","x","opSnippet","alpha","program","shape","runWebGLProgram","dtype","stepConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/Step.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Step, StepAttrs, TensorInfo, UnaryInputs} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {CHECK_NAN_SNIPPET, UnaryOpProgram} from '../unaryop_gpu';\n\nexport function step(\n    {inputs, attrs, backend}:\n        {inputs: UnaryInputs, attrs: StepAttrs, backend: MathBackendWebGL}):\n    TensorInfo {\n  const {x} = inputs;\n  const opSnippet = CHECK_NAN_SNIPPET + `\n    return x > 0.0 ? 1.0 : float(${attrs.alpha});\n  `;\n\n  const program = new UnaryOpProgram(x.shape, opSnippet);\n\n  return backend.runWebGLProgram(program, [x], x.dtype);\n}\n\nexport const stepConfig: KernelConfig = {\n  kernelName: Step,\n  backendName: 'webgl',\n  kernelFunc: step as {} as KernelFunc,\n};\n"]},"metadata":{},"sourceType":"module"}