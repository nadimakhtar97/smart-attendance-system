{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, kernel_impls, NonMaxSuppressionV4 } from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV4Impl = kernel_impls.nonMaxSuppressionV4Impl;\nexport function nonMaxSuppressionV4(args) {\n  backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' + 'Call tf.nonMaxSuppressionAsync() instead');\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    boxes,\n    scores\n  } = inputs;\n  const {\n    maxOutputSize,\n    iouThreshold,\n    scoreThreshold,\n    padToMaxOutputSize\n  } = attrs;\n  const boxesVals = backend.readSync(boxes.dataId);\n  const scoresVals = backend.readSync(scores.dataId);\n  const {\n    selectedIndices,\n    validOutputs\n  } = nonMaxSuppressionV4Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize);\n  return [backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)), backend.makeTensorInfo([], 'int32', new Int32Array([validOutputs]))];\n}\nexport const nonMaxSuppressionV4Config = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'webgl',\n  kernelFunc: nonMaxSuppressionV4\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAR,EAAsBC,YAAtB,EAA8DC,mBAA9D,QAAqK,uBAArK;AACA,MAAMC,uBAAuB,GAAGF,YAAY,CAACE,uBAA7C;AAIA,OAAM,SAAUC,mBAAV,CAA8BC,IAA9B,EAIL;AACCL,cAAY,CAACM,IAAb,CACI,0DACA,0CAFJ;AAIA,QAAM;AAACC,UAAD;AAASC,WAAT;AAAkBC;AAAlB,MAA2BJ,IAAjC;AACA,QAAM;AAACK,SAAD;AAAQC;AAAR,MAAkBJ,MAAxB;AACA,QAAM;AAACK,iBAAD;AAAgBC,gBAAhB;AAA8BC,kBAA9B;AAA8CC;AAA9C,MACFN,KADJ;AAGA,QAAMO,SAAS,GAAGR,OAAO,CAACS,QAAR,CAAiBP,KAAK,CAACQ,MAAvB,CAAlB;AACA,QAAMC,UAAU,GAAGX,OAAO,CAACS,QAAR,CAAiBN,MAAM,CAACO,MAAxB,CAAnB;AAEA,QAAM;AAACE,mBAAD;AAAkBC;AAAlB,MAAkClB,uBAAuB,CAC3Da,SAD2D,EAChDG,UADgD,EACpCP,aADoC,EACrBC,YADqB,EACPC,cADO,EAE3DC,kBAF2D,CAA/D;AAIA,SAAO,CACLP,OAAO,CAACc,cAAR,CACI,CAACF,eAAe,CAACG,MAAjB,CADJ,EAC8B,OAD9B,EACuC,IAAIC,UAAJ,CAAeJ,eAAf,CADvC,CADK,EAGLZ,OAAO,CAACc,cAAR,CAAuB,EAAvB,EAA2B,OAA3B,EAAoC,IAAIE,UAAJ,CAAe,CAACH,YAAD,CAAf,CAApC,CAHK,CAAP;AAKD;AAED,OAAO,MAAMI,yBAAyB,GAAiB;AACrDC,YAAU,EAAExB,mBADyC;AAErDyB,aAAW,EAAE,OAFwC;AAGrDC,YAAU,EAAExB;AAHyC,CAAhD","names":["backend_util","kernel_impls","NonMaxSuppressionV4","nonMaxSuppressionV4Impl","nonMaxSuppressionV4","args","warn","inputs","backend","attrs","boxes","scores","maxOutputSize","iouThreshold","scoreThreshold","padToMaxOutputSize","boxesVals","readSync","dataId","scoresVals","selectedIndices","validOutputs","makeTensorInfo","length","Int32Array","nonMaxSuppressionV4Config","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/NonMaxSuppressionV4.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, kernel_impls, KernelConfig, KernelFunc, NonMaxSuppressionV4, NonMaxSuppressionV4Attrs, NonMaxSuppressionV4Inputs, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV4Impl = kernel_impls.nonMaxSuppressionV4Impl;\n\nimport {MathBackendWebGL} from '../backend_webgl';\n\nexport function nonMaxSuppressionV4(args: {\n  inputs: NonMaxSuppressionV4Inputs,\n  backend: MathBackendWebGL,\n  attrs: NonMaxSuppressionV4Attrs\n}): [TensorInfo, TensorInfo] {\n  backend_util.warn(\n      'tf.nonMaxSuppression() in webgl locks the UI thread. ' +\n      'Call tf.nonMaxSuppressionAsync() instead');\n\n  const {inputs, backend, attrs} = args;\n  const {boxes, scores} = inputs;\n  const {maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize} =\n      attrs;\n\n  const boxesVals = backend.readSync(boxes.dataId) as TypedArray;\n  const scoresVals = backend.readSync(scores.dataId) as TypedArray;\n\n  const {selectedIndices, validOutputs} = nonMaxSuppressionV4Impl(\n      boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold,\n      padToMaxOutputSize);\n\n  return [\n    backend.makeTensorInfo(\n        [selectedIndices.length], 'int32', new Int32Array(selectedIndices)),\n    backend.makeTensorInfo([], 'int32', new Int32Array([validOutputs]))\n  ];\n}\n\nexport const nonMaxSuppressionV4Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'webgl',\n  kernelFunc: nonMaxSuppressionV4 as {} as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module"}