{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Max } from '../kernel_names';\nimport * as util from '../util';\nimport { gradForMinAndMax } from './min_max_grad_util';\nexport const maxGradConfig = {\n  kernelName: Max,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: (dy, saved, attrs) => {\n    const maxAttrs = attrs;\n    const {\n      reductionIndices\n    } = maxAttrs;\n    const x = saved[0];\n    const y = saved[1];\n    const origAxes = util.parseAxisParam(reductionIndices, x.shape);\n    const maxGrad = gradForMinAndMax(dy, y, x, origAxes);\n    return {\n      x: () => {\n        return maxGrad['x']();\n      }\n    };\n  }\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,GAAR,QAA4B,iBAA5B;AAGA,OAAO,KAAKC,IAAZ,MAAsB,SAAtB;AAEA,SAAQC,gBAAR,QAA+B,qBAA/B;AAEA,OAAO,MAAMC,aAAa,GAAe;AACvCC,YAAU,EAAEJ,GAD2B;AAEvCK,cAAY,EAAE,CAAC,GAAD,CAFyB;AAGvCC,eAAa,EAAE,CAAC,IAAD,CAHwB;AAIvCC,UAAQ,EAAE,CAACC,EAAD,EAAaC,KAAb,EAA8BC,KAA9B,KAAqD;AAC7D,UAAMC,QAAQ,GAAaD,KAA3B;AACA,UAAM;AAACE;AAAD,QAAqBD,QAA3B;AACA,UAAME,CAAC,GAAGJ,KAAK,CAAC,CAAD,CAAf;AACA,UAAMK,CAAC,GAAGL,KAAK,CAAC,CAAD,CAAf;AACA,UAAMM,QAAQ,GAAGd,IAAI,CAACe,cAAL,CAAoBJ,gBAApB,EAAsCC,CAAC,CAACI,KAAxC,CAAjB;AACA,UAAMC,OAAO,GAAGhB,gBAAgB,CAACM,EAAD,EAAKM,CAAL,EAAQD,CAAR,EAAWE,QAAX,CAAhC;AACA,WAAO;AACLF,OAAC,EAAE,MAAK;AACN,eAAOK,OAAO,CAAC,GAAD,CAAP,EAAP;AACD;AAHI,KAAP;AAKD;AAhBsC,CAAlC","names":["Max","util","gradForMinAndMax","maxGradConfig","kernelName","inputsToSave","outputsToSave","gradFunc","dy","saved","attrs","maxAttrs","reductionIndices","x","y","origAxes","parseAxisParam","shape","maxGrad"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-core/src/gradients/Max_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Max, MaxAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport * as util from '../util';\n\nimport {gradForMinAndMax} from './min_max_grad_util';\n\nexport const maxGradConfig: GradConfig = {\n  kernelName: Max,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const maxAttrs: MaxAttrs = attrs as {} as MaxAttrs;\n    const {reductionIndices} = maxAttrs;\n    const x = saved[0];\n    const y = saved[1];\n    const origAxes = util.parseAxisParam(reductionIndices, x.shape);\n    const maxGrad = gradForMinAndMax(dy, y, x, origAxes);\n    return {\n      x: () => {\n        return maxGrad['x']();\n      }\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}