{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nexport class ConcatProgram {\n  // Concats 2d tensors along axis=1. See comments in MathBackendWebGL.concat().\n  constructor(shapes) {\n    this.outputShape = [];\n    this.outputShape = backend_util.computeOutShape(shapes, 1\n    /* axis */\n    );\n    this.variableNames = shapes.map((_, i) => `T${i}`);\n    const offsets = new Array(shapes.length - 1);\n    offsets[0] = shapes[0][1];\n\n    for (let i = 1; i < offsets.length; i++) {\n      offsets[i] = offsets[i - 1] + shapes[i][1];\n    }\n\n    const snippets = [`if (yC < ${offsets[0]}) setOutput(getT0(yR, yC));`];\n\n    for (let i = 1; i < offsets.length; i++) {\n      const shift = offsets[i - 1];\n      snippets.push(`else if (yC < ${offsets[i]}) ` + `setOutput(getT${i}(yR, yC-${shift}));`);\n    }\n\n    const lastIndex = offsets.length;\n    const lastShift = offsets[offsets.length - 1];\n    snippets.push(`else setOutput(getT${lastIndex}(yR, yC-${lastShift}));`);\n    this.userCode = `\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${snippets.join('\\n        ')}\n      }\n    `;\n  }\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAR,QAA2B,uBAA3B;AAGA,OAAM,MAAOC,aAAP,CAAoB;AAKxB;AACAC,cAAYC,MAAZ,EAA2C;AAJ3C,uBAAwB,EAAxB;AAKE,SAAKC,WAAL,GAAmBJ,YAAY,CAACK,eAAb,CAA6BF,MAA7B,EAAqC;AAAE;AAAvC,KAAnB;AACA,SAAKG,aAAL,GAAqBH,MAAM,CAACI,GAAP,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIA,CAAC,EAA1B,CAArB;AAEA,UAAMC,OAAO,GAAa,IAAIC,KAAJ,CAAUR,MAAM,CAACS,MAAP,GAAgB,CAA1B,CAA1B;AACAF,WAAO,CAAC,CAAD,CAAP,GAAaP,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAb;;AACA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,OAAO,CAACE,MAA5B,EAAoCH,CAAC,EAArC,EAAyC;AACvCC,aAAO,CAACD,CAAD,CAAP,GAAaC,OAAO,CAACD,CAAC,GAAG,CAAL,CAAP,GAAiBN,MAAM,CAACM,CAAD,CAAN,CAAU,CAAV,CAA9B;AACD;;AAED,UAAMI,QAAQ,GAAG,CAAC,YAAYH,OAAO,CAAC,CAAD,CAAG,6BAAvB,CAAjB;;AACA,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,OAAO,CAACE,MAA5B,EAAoCH,CAAC,EAArC,EAAyC;AACvC,YAAMK,KAAK,GAAGJ,OAAO,CAACD,CAAC,GAAG,CAAL,CAArB;AACAI,cAAQ,CAACE,IAAT,CACI,iBAAiBL,OAAO,CAACD,CAAD,CAAG,IAA3B,GACA,iBAAiBA,CAAC,WAAWK,KAAK,KAFtC;AAGD;;AACD,UAAME,SAAS,GAAGN,OAAO,CAACE,MAA1B;AACA,UAAMK,SAAS,GAAGP,OAAO,CAACA,OAAO,CAACE,MAAR,GAAiB,CAAlB,CAAzB;AACAC,YAAQ,CAACE,IAAT,CAAc,sBAAsBC,SAAS,WAAWC,SAAS,KAAjE;AAEA,SAAKC,QAAL,GAAgB;;;;;;UAMVL,QAAQ,CAACM,IAAT,CAAc,YAAd,CAA2B;;KANjC;AASD;;AApCuB","names":["backend_util","ConcatProgram","constructor","shapes","outputShape","computeOutShape","variableNames","map","_","i","offsets","Array","length","snippets","shift","push","lastIndex","lastShift","userCode","join"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/concat_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util} from '@tensorflow/tfjs-core';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class ConcatProgram implements GPGPUProgram {\n  variableNames: string[];\n  outputShape: number[] = [];\n  userCode: string;\n\n  // Concats 2d tensors along axis=1. See comments in MathBackendWebGL.concat().\n  constructor(shapes: Array<[number, number]>) {\n    this.outputShape = backend_util.computeOutShape(shapes, 1 /* axis */);\n    this.variableNames = shapes.map((_, i) => `T${i}`);\n\n    const offsets: number[] = new Array(shapes.length - 1);\n    offsets[0] = shapes[0][1];\n    for (let i = 1; i < offsets.length; i++) {\n      offsets[i] = offsets[i - 1] + shapes[i][1];\n    }\n\n    const snippets = [`if (yC < ${offsets[0]}) setOutput(getT0(yR, yC));`];\n    for (let i = 1; i < offsets.length; i++) {\n      const shift = offsets[i - 1];\n      snippets.push(\n          `else if (yC < ${offsets[i]}) ` +\n          `setOutput(getT${i}(yR, yC-${shift}));`);\n    }\n    const lastIndex = offsets.length;\n    const lastShift = offsets[offsets.length - 1];\n    snippets.push(`else setOutput(getT${lastIndex}(yR, yC-${lastShift}));`);\n\n    this.userCode = `\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${snippets.join('\\n        ')}\n      }\n    `;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}