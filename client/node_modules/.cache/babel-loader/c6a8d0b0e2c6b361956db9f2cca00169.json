{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport * as regularizers from './regularizers'; // tslint:disable-next-line:max-line-length\n\nimport { L1L2 } from './regularizers';\n/**\n * Regularizer for L1 and L2 regularization.\n *\n * Adds a term to the loss to penalize large weights:\n * loss += sum(l1 * abs(x)) + sum(l2 * x^2)\n *\n * @doc {heading: 'Regularizers', namespace: 'regularizers'}\n */\n\nexport function l1l2(config) {\n  return new L1L2(config);\n}\n/**\n * Regularizer for L1 regularization.\n *\n * Adds a term to the loss to penalize large weights:\n * loss += sum(l1 * abs(x))\n * @param args l1 config.\n *\n * @doc {heading: 'Regularizers', namespace: 'regularizers'}\n */\n\nexport function l1(config) {\n  return regularizers.l1(config);\n}\n/**\n * Regularizer for L2 regularization.\n *\n * Adds a term to the loss to penalize large weights:\n * loss += sum(l2 * x^2)\n * @param args l2 config.\n *\n * @doc {heading: 'Regularizers', namespace: 'regularizers'}\n */\n\nexport function l2(config) {\n  return regularizers.l2(config);\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;AASA,OAAO,KAAKA,YAAZ,MAA8B,gBAA9B,C,CACA;;AACA,SAAgBC,IAAhB,QAA0D,gBAA1D;AAEA;;;;;;;;;AAQA,OAAM,SAAUC,IAAV,CAAeC,MAAf,EAAgC;AACpC,SAAO,IAAIF,IAAJ,CAASE,MAAT,CAAP;AACD;AAED;;;;;;;;;;AASA,OAAM,SAAUC,EAAV,CAAaD,MAAb,EAA4B;AAChC,SAAOH,YAAY,CAACI,EAAb,CAAgBD,MAAhB,CAAP;AACD;AAED;;;;;;;;;;AASA,OAAM,SAAUE,EAAV,CAAaF,MAAb,EAA4B;AAChC,SAAOH,YAAY,CAACK,EAAb,CAAgBF,MAAhB,CAAP;AACD","names":["regularizers","L1L2","l1l2","config","l1","l2"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-layers/src/exports_regularizers.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport * as regularizers from './regularizers';\n// tslint:disable-next-line:max-line-length\nimport {L1Args, L1L2, L1L2Args, L2Args, Regularizer} from './regularizers';\n\n/**\n * Regularizer for L1 and L2 regularization.\n *\n * Adds a term to the loss to penalize large weights:\n * loss += sum(l1 * abs(x)) + sum(l2 * x^2)\n *\n * @doc {heading: 'Regularizers', namespace: 'regularizers'}\n */\nexport function l1l2(config?: L1L2Args): Regularizer {\n  return new L1L2(config);\n}\n\n/**\n * Regularizer for L1 regularization.\n *\n * Adds a term to the loss to penalize large weights:\n * loss += sum(l1 * abs(x))\n * @param args l1 config.\n *\n * @doc {heading: 'Regularizers', namespace: 'regularizers'}\n */\nexport function l1(config?: L1Args): Regularizer {\n  return regularizers.l1(config);\n}\n\n/**\n * Regularizer for L2 regularization.\n *\n * Adds a term to the loss to penalize large weights:\n * loss += sum(l2 * x^2)\n * @param args l2 config.\n *\n * @doc {heading: 'Regularizers', namespace: 'regularizers'}\n */\nexport function l2(config?: L2Args): Regularizer {\n  return regularizers.l2(config);\n}\n"]},"metadata":{},"sourceType":"module"}