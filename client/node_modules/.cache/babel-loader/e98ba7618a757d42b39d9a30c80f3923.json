{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class SlicePackedProgram {\n  constructor(destSize) {\n    this.variableNames = ['source'];\n    this.packedInputs = true;\n    this.packedOutput = true;\n    this.outputShape = destSize;\n    this.rank = destSize.length;\n    this.customUniforms = [{\n      name: 'start',\n      arrayIndex: this.rank,\n      type: 'int'\n    }];\n    const dtype = getCoordsDataType(this.rank);\n    const coords = getChannels('coords', this.rank);\n    const sourceLoc = getChannels('sourceLoc', this.rank);\n    const innerDims = this.rank === 1 ? 'sourceLoc' : `vec2(${sourceLoc.slice(-2).join()})`;\n    const getChannel = `getChannel(getSource(${sourceLoc.join()}), ${innerDims})`;\n    const upperRow = `\n      result.x = ${getChannel};\n      if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n        ++${sourceLoc[this.rank - 1]};\n        result.y = ${getChannel};\n        --${sourceLoc[this.rank - 1]};\n      }\n    `;\n    const lowerRow = this.rank === 1 ? '' : `\n      --${coords[this.rank - 1]};\n      if (++${coords[this.rank - 2]} < ${destSize[this.rank - 2]}) {\n        ++${sourceLoc[this.rank - 2]};\n        result.z = ${getChannel};\n        if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n          ++${sourceLoc[this.rank - 1]};\n          result.w = ${getChannel};\n        }\n      }\n    `;\n    const sourceLocSetup = this.rank <= 4 ? `sourceLoc = coords +\n            ${dtype}(${destSize.map((_, i) => `start[${i}]`).join()});` : destSize.map((_, i) => `${sourceLoc[i]} = ${coords[i]} + start[${i}];`).join('\\n');\n    this.userCode = `\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        ${dtype} sourceLoc;\n        ${sourceLocSetup}\n        vec4 result = vec4(0.);\n        ${upperRow}\n        ${lowerRow}\n        setOutput(result);\n      }\n    `;\n  }\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAkBA,SAAQA,WAAR,QAA0B,gBAA1B;AACA,SAAQC,iBAAR,QAA6C,mBAA7C;AAEA,OAAM,MAAOC,kBAAP,CAAyB;AAS7BC,cAAYC,QAAZ,EAA8B;AAR9B,yBAAgB,CAAC,QAAD,CAAhB;AACA,wBAAe,IAAf;AACA,wBAAe,IAAf;AAOE,SAAKC,WAAL,GAAmBD,QAAnB;AACA,SAAKE,IAAL,GAAYF,QAAQ,CAACG,MAArB;AACA,SAAKC,cAAL,GAAsB,CAAC;AAACC,UAAI,EAAE,OAAP;AAAgBC,gBAAU,EAAE,KAAKJ,IAAjC;AAAuCK,UAAI,EAAE;AAA7C,KAAD,CAAtB;AACA,UAAMC,KAAK,GAAGX,iBAAiB,CAAC,KAAKK,IAAN,CAA/B;AACA,UAAMO,MAAM,GAAGb,WAAW,CAAC,QAAD,EAAW,KAAKM,IAAhB,CAA1B;AACA,UAAMQ,SAAS,GAAGd,WAAW,CAAC,WAAD,EAAc,KAAKM,IAAnB,CAA7B;AAEA,UAAMS,SAAS,GACX,KAAKT,IAAL,KAAc,CAAd,GAAkB,WAAlB,GAAgC,QAAQQ,SAAS,CAACE,KAAV,CAAgB,CAAC,CAAjB,EAAoBC,IAApB,EAA0B,GADtE;AAEA,UAAMC,UAAU,GACZ,wBAAwBJ,SAAS,CAACG,IAAV,EAAgB,MAAMF,SAAS,GAD3D;AAEA,UAAMI,QAAQ,GAAG;mBACFD,UAAU;cACfL,MAAM,CAAC,KAAKP,IAAL,GAAY,CAAb,CAAe,MAAMF,QAAQ,CAAC,KAAKE,IAAL,GAAY,CAAb,CAAe;YACpDQ,SAAS,CAAC,KAAKR,IAAL,GAAY,CAAb,CAAe;qBACfY,UAAU;YACnBJ,SAAS,CAAC,KAAKR,IAAL,GAAY,CAAb,CAAe;;KALhC;AAQA,UAAMc,QAAQ,GAAG,KAAKd,IAAL,KAAc,CAAd,GAAkB,EAAlB,GAAuB;UAClCO,MAAM,CAAC,KAAKP,IAAL,GAAY,CAAb,CAAe;cACjBO,MAAM,CAAC,KAAKP,IAAL,GAAY,CAAb,CAAe,MAAMF,QAAQ,CAAC,KAAKE,IAAL,GAAY,CAAb,CAAe;YACpDQ,SAAS,CAAC,KAAKR,IAAL,GAAY,CAAb,CAAe;qBACfY,UAAU;gBACfL,MAAM,CAAC,KAAKP,IAAL,GAAY,CAAb,CAAe,MAAMF,QAAQ,CAAC,KAAKE,IAAL,GAAY,CAAb,CAAe;cACpDQ,SAAS,CAAC,KAAKR,IAAL,GAAY,CAAb,CAAe;uBACfY,UAAU;;;KAP7B;AAYA,UAAMG,cAAc,GAAG,KAAKf,IAAL,IAAa,CAAb,GACnB;cACMM,KAAK,IAAIR,QAAQ,CAACkB,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU,SAASA,CAAC,GAAjC,EAAsCP,IAAtC,EAA4C,IAFxC,GAGnBb,QAAQ,CAACkB,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU,GAAGV,SAAS,CAACU,CAAD,CAAG,MAAMX,MAAM,CAACW,CAAD,CAAG,YAAYA,CAAC,IAAlE,EACKP,IADL,CACU,IADV,CAHJ;AAKA,SAAKQ,QAAL,GAAgB;;UAEVb,KAAK;UACLA,KAAK;UACLS,cAAc;;UAEdF,QAAQ;UACRC,QAAQ;;;KAPd;AAWD;;AAzD4B","names":["getChannels","getCoordsDataType","SlicePackedProgram","constructor","destSize","outputShape","rank","length","customUniforms","name","arrayIndex","type","dtype","coords","sourceLoc","innerDims","slice","join","getChannel","upperRow","lowerRow","sourceLocSetup","map","_","i","userCode"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/slice_packed_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getChannels} from './packing_util';\nimport {getCoordsDataType, UniformType} from './shader_compiler';\n\nexport class SlicePackedProgram implements GPGPUProgram {\n  variableNames = ['source'];\n  packedInputs = true;\n  packedOutput = true;\n  outputShape: number[];\n  userCode: string;\n  rank: number;\n  customUniforms: Array<{name: string; arrayIndex: number; type: UniformType;}>;\n\n  constructor(destSize: number[]) {\n    this.outputShape = destSize;\n    this.rank = destSize.length;\n    this.customUniforms = [{name: 'start', arrayIndex: this.rank, type: 'int'}];\n    const dtype = getCoordsDataType(this.rank);\n    const coords = getChannels('coords', this.rank);\n    const sourceLoc = getChannels('sourceLoc', this.rank);\n\n    const innerDims =\n        this.rank === 1 ? 'sourceLoc' : `vec2(${sourceLoc.slice(-2).join()})`;\n    const getChannel =\n        `getChannel(getSource(${sourceLoc.join()}), ${innerDims})`;\n    const upperRow = `\n      result.x = ${getChannel};\n      if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n        ++${sourceLoc[this.rank - 1]};\n        result.y = ${getChannel};\n        --${sourceLoc[this.rank - 1]};\n      }\n    `;\n    const lowerRow = this.rank === 1 ? '' : `\n      --${coords[this.rank - 1]};\n      if (++${coords[this.rank - 2]} < ${destSize[this.rank - 2]}) {\n        ++${sourceLoc[this.rank - 2]};\n        result.z = ${getChannel};\n        if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n          ++${sourceLoc[this.rank - 1]};\n          result.w = ${getChannel};\n        }\n      }\n    `;\n\n    const sourceLocSetup = this.rank <= 4 ?\n        `sourceLoc = coords +\n            ${dtype}(${destSize.map((_, i) => `start[${i}]`).join()});` :\n        destSize.map((_, i) => `${sourceLoc[i]} = ${coords[i]} + start[${i}];`)\n            .join('\\n');\n    this.userCode = `\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        ${dtype} sourceLoc;\n        ${sourceLocSetup}\n        vec4 result = vec4(0.);\n        ${upperRow}\n        ${lowerRow}\n        setOutput(result);\n      }\n    `;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}