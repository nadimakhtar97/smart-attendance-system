{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from '@tensorflow/tfjs-core';\nexport function stridedSliceImpl(outShape, xBuf, strides, begin) {\n  const outBuf = buffer(outShape, xBuf.dtype);\n\n  for (let i = 0; i < outBuf.size; i++) {\n    const loc = outBuf.indexToLoc(i);\n    const newLoc = new Array(loc.length);\n\n    for (let j = 0; j < newLoc.length; j++) {\n      newLoc[j] = loc[j] * strides[j] + begin[j];\n    }\n\n    outBuf.set(xBuf.get(...newLoc), ...loc);\n  }\n\n  return outBuf;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,MAAR,QAAyC,uBAAzC;AAEA,OAAM,SAAUC,gBAAV,CACFC,QADE,EACkBC,IADlB,EACyCC,OADzC,EAEFC,KAFE,EAEa;AACjB,QAAMC,MAAM,GAAGN,MAAM,CAACE,QAAD,EAAWC,IAAI,CAACI,KAAhB,CAArB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,IAA3B,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,UAAME,GAAG,GAAGJ,MAAM,CAACK,UAAP,CAAkBH,CAAlB,CAAZ;AAEA,UAAMI,MAAM,GAAa,IAAIC,KAAJ,CAAUH,GAAG,CAACI,MAAd,CAAzB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACE,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;AACtCH,YAAM,CAACG,CAAD,CAAN,GAAYL,GAAG,CAACK,CAAD,CAAH,GAASX,OAAO,CAACW,CAAD,CAAhB,GAAsBV,KAAK,CAACU,CAAD,CAAvC;AACD;;AACDT,UAAM,CAACU,GAAP,CAAWb,IAAI,CAACc,GAAL,CAAS,GAAGL,MAAZ,CAAX,EAAgC,GAAGF,GAAnC;AACD;;AAED,SAAOJ,MAAP;AACD","names":["buffer","stridedSliceImpl","outShape","xBuf","strides","begin","outBuf","dtype","i","size","loc","indexToLoc","newLoc","Array","length","j","set","get"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-cpu/src/kernels/StridedSlice_impl.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {buffer, Rank, TensorBuffer} from '@tensorflow/tfjs-core';\n\nexport function stridedSliceImpl<R extends Rank>(\n    outShape: number[], xBuf: TensorBuffer<R>, strides: number[],\n    begin: number[]): TensorBuffer<R> {\n  const outBuf = buffer(outShape, xBuf.dtype);\n\n  for (let i = 0; i < outBuf.size; i++) {\n    const loc = outBuf.indexToLoc(i);\n\n    const newLoc: number[] = new Array(loc.length);\n    for (let j = 0; j < newLoc.length; j++) {\n      newLoc[j] = loc[j] * strides[j] + begin[j];\n    }\n    outBuf.set(xBuf.get(...newLoc), ...loc);\n  }\n\n  return outBuf as TensorBuffer<R>;\n}\n"]},"metadata":{},"sourceType":"module"}