{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ReshapePackedProgram } from '../reshape_packed_gpu';\nimport { getBatchDim, getRowsCols } from '../webgl_util';\nexport function packedReshape(input, afterShape, backend) {\n  const input3DShape = [getBatchDim(input.shape), ...getRowsCols(input.shape)];\n  const input3D = {\n    dtype: input.dtype,\n    shape: input3DShape,\n    dataId: input.dataId\n  };\n  const afterShapeAs3D = [getBatchDim(afterShape), ...getRowsCols(afterShape)];\n  const program = new ReshapePackedProgram(afterShapeAs3D, input3DShape);\n  const preventEagerUnpackingOfOutput = true;\n  const customValues = [input3DShape];\n  const output = backend.runWebGLProgram(program, [input3D], input.dtype, customValues, preventEagerUnpackingOfOutput);\n  return {\n    dataId: output.dataId,\n    shape: afterShape,\n    dtype: output.dtype\n  };\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAoBA,SAAQA,oBAAR,QAAmC,uBAAnC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,eAAvC;AAEA,OAAM,SAAUC,aAAV,CACFC,KADE,EACiBC,UADjB,EAEFC,OAFE,EAEuB;AAC3B,QAAMC,YAAY,GACd,CAACN,WAAW,CAACG,KAAK,CAACI,KAAP,CAAZ,EACC,GAAGN,WAAW,CAACE,KAAK,CAACI,KAAP,CADf,CADJ;AAGA,QAAMC,OAAO,GAAe;AAC1BC,SAAK,EAAEN,KAAK,CAACM,KADa;AAE1BF,SAAK,EAAED,YAFmB;AAG1BI,UAAM,EAAEP,KAAK,CAACO;AAHY,GAA5B;AAKA,QAAMC,cAAc,GAChB,CAACX,WAAW,CAACI,UAAD,CAAZ,EACC,GAAGH,WAAW,CAACG,UAAD,CADf,CADJ;AAIA,QAAMQ,OAAO,GAAG,IAAIb,oBAAJ,CAAyBY,cAAzB,EAAyCL,YAAzC,CAAhB;AACA,QAAMO,6BAA6B,GAAG,IAAtC;AACA,QAAMC,YAAY,GAAG,CAACR,YAAD,CAArB;AACA,QAAMS,MAAM,GAAGV,OAAO,CAACW,eAAR,CACXJ,OADW,EACF,CAACJ,OAAD,CADE,EACSL,KAAK,CAACM,KADf,EACsBK,YADtB,EAEXD,6BAFW,CAAf;AAGA,SAAO;AAACH,UAAM,EAAEK,MAAM,CAACL,MAAhB;AAAwBH,SAAK,EAAEH,UAA/B;AAA2CK,SAAK,EAAEM,MAAM,CAACN;AAAzD,GAAP;AACD","names":["ReshapePackedProgram","getBatchDim","getRowsCols","packedReshape","input","afterShape","backend","input3DShape","shape","input3D","dtype","dataId","afterShapeAs3D","program","preventEagerUnpackingOfOutput","customValues","output","runWebGLProgram"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernel_utils/reshape.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {ReshapePackedProgram} from '../reshape_packed_gpu';\nimport {getBatchDim, getRowsCols} from '../webgl_util';\n\nexport function packedReshape(\n    input: TensorInfo, afterShape: number[],\n    backend: MathBackendWebGL): TensorInfo {\n  const input3DShape =\n      [getBatchDim(input.shape),\n       ...getRowsCols(input.shape)] as [number, number, number];\n  const input3D: TensorInfo = {\n    dtype: input.dtype,\n    shape: input3DShape,\n    dataId: input.dataId\n  };\n  const afterShapeAs3D =\n      [getBatchDim(afterShape),\n       ...getRowsCols(afterShape)] as [number, number, number];\n\n  const program = new ReshapePackedProgram(afterShapeAs3D, input3DShape);\n  const preventEagerUnpackingOfOutput = true;\n  const customValues = [input3DShape];\n  const output = backend.runWebGLProgram(\n      program, [input3D], input.dtype, customValues,\n      preventEagerUnpackingOfOutput);\n  return {dataId: output.dataId, shape: afterShape, dtype: output.dtype};\n}\n"]},"metadata":{},"sourceType":"module"}