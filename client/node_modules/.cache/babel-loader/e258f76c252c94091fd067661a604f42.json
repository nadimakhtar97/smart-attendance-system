{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv3DBackpropInputV2 } from '@tensorflow/tfjs-core';\nimport { Conv3DDerInputProgram } from '../conv_backprop_gpu';\nexport function conv3DBackpropInput(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    dy,\n    filter\n  } = inputs;\n  const {\n    pad,\n    strides,\n    inputShape\n  } = attrs;\n  const convInfo = backend_util.computeConv3DInfo(inputShape, filter.shape, strides, 1\n  /* dilations */\n  , pad);\n  const program = new Conv3DDerInputProgram(convInfo);\n  return backend.runWebGLProgram(program, [dy, filter], 'float32');\n}\nexport const conv3DBackpropInputConfig = {\n  kernelName: Conv3DBackpropInputV2,\n  backendName: 'webgl',\n  kernelFunc: conv3DBackpropInput\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAR,EAAsBC,qBAAtB,QAAqI,uBAArI;AAGA,SAAQC,qBAAR,QAAoC,sBAApC;AAEA,OAAM,SAAUC,mBAAV,CAA8BC,IAA9B,EAIL;AACC,QAAM;AAACC,UAAD;AAASC,WAAT;AAAkBC;AAAlB,MAA2BH,IAAjC;AACA,QAAM;AAACI,MAAD;AAAKC;AAAL,MAAeJ,MAArB;AACA,QAAM;AAACK,OAAD;AAAMC,WAAN;AAAeC;AAAf,MAA6BL,KAAnC;AAEA,QAAMM,QAAQ,GAAGb,YAAY,CAACc,iBAAb,CACbF,UADa,EACDH,MAAM,CAACM,KADN,EAEbJ,OAFa,EAEJ;AAAE;AAFE,IAEeD,GAFf,CAAjB;AAIA,QAAMM,OAAO,GAAG,IAAId,qBAAJ,CAA0BW,QAA1B,CAAhB;AACA,SAAOP,OAAO,CAACW,eAAR,CAAwBD,OAAxB,EAAiC,CAACR,EAAD,EAAKC,MAAL,CAAjC,EAA+C,SAA/C,CAAP;AACD;AAED,OAAO,MAAMS,yBAAyB,GAAiB;AACrDC,YAAU,EAAElB,qBADyC;AAErDmB,aAAW,EAAE,OAFwC;AAGrDC,YAAU,EAAElB;AAHyC,CAAhD","names":["backend_util","Conv3DBackpropInputV2","Conv3DDerInputProgram","conv3DBackpropInput","args","inputs","backend","attrs","dy","filter","pad","strides","inputShape","convInfo","computeConv3DInfo","shape","program","runWebGLProgram","conv3DBackpropInputConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/Conv3DBackpropInputV2.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv3DBackpropInputV2, Conv3DBackpropInputV2Attrs, Conv3DBackpropInputV2Inputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {Conv3DDerInputProgram} from '../conv_backprop_gpu';\n\nexport function conv3DBackpropInput(args: {\n  inputs: Conv3DBackpropInputV2Inputs,\n  attrs: Conv3DBackpropInputV2Attrs,\n  backend: MathBackendWebGL\n}) {\n  const {inputs, backend, attrs} = args;\n  const {dy, filter} = inputs;\n  const {pad, strides, inputShape} = attrs;\n\n  const convInfo = backend_util.computeConv3DInfo(\n      inputShape, filter.shape as [number, number, number, number, number],\n      strides, 1 /* dilations */, pad);\n\n  const program = new Conv3DDerInputProgram(convInfo);\n  return backend.runWebGLProgram(program, [dy, filter], 'float32');\n}\n\nexport const conv3DBackpropInputConfig: KernelConfig = {\n  kernelName: Conv3DBackpropInputV2,\n  backendName: 'webgl',\n  kernelFunc: conv3DBackpropInput as {} as KernelFunc,\n};\n"]},"metadata":{},"sourceType":"module"}