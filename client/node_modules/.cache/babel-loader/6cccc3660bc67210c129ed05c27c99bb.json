{"ast":null,"code":"var _jsxFileName = \"/home/nadimakhtar97/smart-attendance-system/client/src/Components/Input/Input.js\";\nimport React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport TextError from '../TextError/TextError';\nimport { FormControl, FormErrorMessage, FormLabel, Input } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChakraInput(props) {\n  const {\n    label,\n    name,\n    ...rest\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Field, {\n    name: name,\n    children: _ref => {\n      let {\n        field,\n        form\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: form.errors[name] && form.touched[name],\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: name,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: name,\n          ...rest,\n          ...field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n          children: form.errors[name]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 18\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ChakraInput;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChakraInput\");","map":{"version":3,"sources":["/home/nadimakhtar97/smart-attendance-system/client/src/Components/Input/Input.js"],"names":["React","Field","ErrorMessage","TextError","FormControl","FormErrorMessage","FormLabel","Input","ChakraInput","props","label","name","rest","field","form","errors","touched"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAgBC,YAAhB,QAAmC,QAAnC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,EAAwCC,SAAxC,EAAmDC,KAAnD,QAAgE,kBAAhE;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAc,OAAGC;AAAjB,MAAyBH,KAA/B;AAGF,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEE,IAAb;AAAA,cAEI,QAAgB;AAAA,UAAf;AAACE,QAAAA,KAAD;AAAOC,QAAAA;AAAP,OAAe;AACd,0BAAO,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEA,IAAI,CAACC,MAAL,CAAYJ,IAAZ,KAAqBG,IAAI,CAACE,OAAL,CAAaL,IAAb,CAA7C;AAAA,gCACL,QAAC,SAAD;AAAW,UAAA,OAAO,EAAEA,IAApB;AAAA,oBAA2BD;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADK,eAEL,QAAC,KAAD;AAAO,UAAA,EAAE,EAAEC,IAAX;AAAA,aAAqBC,IAArB;AAAA,aAA+BC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFK,eAGL,QAAC,gBAAD;AAAA,oBAAmBC,IAAI,CAACC,MAAL,CAAYJ,IAAZ;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAHK;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAKD;AARL;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;KAjBQH,W;AAmBT,eAAeD,KAAf","sourcesContent":["import React from 'react'\nimport {Field , ErrorMessage} from 'formik'\nimport TextError from '../TextError/TextError';\nimport { FormControl, FormErrorMessage, FormLabel, Input } from '@chakra-ui/react'\n\nfunction ChakraInput(props) {\n    const {label, name, ...rest} = props;\n\n\n  return (\n    <Field name={name}>\n      {\n        ({field,form})=>{\n          return <FormControl isInvalid={form.errors[name] && form.touched[name]}>\n            <FormLabel htmlFor={name}>{label}</FormLabel>\n            <Input id={name} {...rest} {...field}></Input>\n            <FormErrorMessage>{form.errors[name]}</FormErrorMessage>\n          </FormControl>\n        }\n      }\n    </Field>\n  )\n}\n\nexport default Input"]},"metadata":{},"sourceType":"module"}