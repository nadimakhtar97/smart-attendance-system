{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transform } from '@tensorflow/tfjs-core';\nimport { TransformProgram } from '../transform_gpu';\nexport function transform(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    image,\n    transforms\n  } = inputs;\n  const {\n    interpolation,\n    fillMode,\n    fillValue,\n    outputShape\n  } = attrs;\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n  const [outHeight, outWidth] = outputShape != null ? outputShape : [imageHeight, imageWidth];\n  const outShape = [batch, outHeight, outWidth, numChannels];\n  const program = new TransformProgram(imageHeight, imageWidth, interpolation, fillMode, fillValue, outShape);\n  return backend.runWebGLProgram(program, [image, transforms], 'float32');\n}\nexport const transformConfig = {\n  kernelName: Transform,\n  backendName: 'webgl',\n  kernelFunc: transform\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAA8CA,SAA9C,QAA+F,uBAA/F;AAGA,SAAQC,gBAAR,QAA+B,kBAA/B;AAEA,OAAM,SAAUC,SAAV,CAAoBC,IAApB,EAIL;AACC,QAAM;AAACC,UAAD;AAASC,WAAT;AAAkBC;AAAlB,MAA2BH,IAAjC;AACA,QAAM;AAACI,SAAD;AAAQC;AAAR,MAAsBJ,MAA5B;AACA,QAAM;AAACK,iBAAD;AAAgBC,YAAhB;AAA0BC,aAA1B;AAAqCC;AAArC,MAAoDN,KAA1D;AAEA,QAAM,CAACO,KAAD,EAAQC,WAAR,EAAqBC,UAArB,EAAiCC,WAAjC,IAAgDT,KAAK,CAACU,KAA5D;AACA,QAAM,CAACC,SAAD,EAAYC,QAAZ,IACFP,WAAW,IAAI,IAAf,GAAsBA,WAAtB,GAAoC,CAACE,WAAD,EAAcC,UAAd,CADxC;AAEA,QAAMK,QAAQ,GACV,CAACP,KAAD,EAAQK,SAAR,EAAmBC,QAAnB,EACCH,WADD,CADJ;AAIA,QAAMK,OAAO,GAAG,IAAIpB,gBAAJ,CACZa,WADY,EACCC,UADD,EACaN,aADb,EAC4BC,QAD5B,EACsCC,SADtC,EACiDS,QADjD,CAAhB;AAEA,SAAOf,OAAO,CAACiB,eAAR,CAAwBD,OAAxB,EAAiC,CAACd,KAAD,EAAQC,UAAR,CAAjC,EAAsD,SAAtD,CAAP;AACD;AAED,OAAO,MAAMe,eAAe,GAAiB;AAC3CC,YAAU,EAAExB,SAD+B;AAE3CyB,aAAW,EAAE,OAF8B;AAG3CC,YAAU,EAAExB;AAH+B,CAAtC","names":["Transform","TransformProgram","transform","args","inputs","backend","attrs","image","transforms","interpolation","fillMode","fillValue","outputShape","batch","imageHeight","imageWidth","numChannels","shape","outHeight","outWidth","outShape","program","runWebGLProgram","transformConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/Transform.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Transform, TransformAttrs, TransformInputs} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {TransformProgram} from '../transform_gpu';\n\nexport function transform(args: {\n  inputs: TransformInputs,\n  backend: MathBackendWebGL,\n  attrs: TransformAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {image, transforms} = inputs;\n  const {interpolation, fillMode, fillValue, outputShape} = attrs;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n  const [outHeight, outWidth] =\n      outputShape != null ? outputShape : [imageHeight, imageWidth];\n  const outShape =\n      [batch, outHeight, outWidth,\n       numChannels] as [number, number, number, number];\n\n  const program = new TransformProgram(\n      imageHeight, imageWidth, interpolation, fillMode, fillValue, outShape);\n  return backend.runWebGLProgram(program, [image, transforms], 'float32');\n}\n\nexport const transformConfig: KernelConfig = {\n  kernelName: Transform,\n  backendName: 'webgl',\n  kernelFunc: transform as {} as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module"}