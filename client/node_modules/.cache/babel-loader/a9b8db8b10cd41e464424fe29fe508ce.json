{"ast":null,"code":"var _jsxFileName = \"/home/nadimakhtar97/smart-attendance-system/client/src/Components/StudentRegister/StudentRegister.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport FormikControl from '../FormikControl/FormikControl';\nimport * as Yup from 'yup';\nimport { Button, Center, Flex } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StudentRegister() {\n  _s();\n\n  const [data, setData] = useState({\n    \"name\": \"\",\n    \"enrollmentNo\": \"\",\n    \"facultyNo\": \"\",\n    \"email\": \"\",\n    \"phoneNo\": \"\",\n    \"courseName\": \"\"\n  });\n  use;\n  const initialValues = {\n    \"name\": \"\",\n    \"enrollmentNo\": \"\",\n    \"facultyNo\": \"\",\n    \"email\": \"\",\n    \"phoneNo\": \"\",\n    \"courseName\": \"\"\n  };\n\n  const onSubmit = values => {\n    console.log(values);\n  };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('name is required'),\n    enrollmentNo: Yup.string().required('enrollment number is required'),\n    facultyNo: Yup.string().required('faculty number is required'),\n    email: Yup.string().required('email is required').email(\"Invalid email format\"),\n    phoneNo: Yup.number().required().positive().integer(),\n    courseName: Yup.string().required()\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validationSchema: validationSchema,\n    children: formik => {\n      return /*#__PURE__*/_jsxDEV(Center, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            \"width\": \"40vw\",\n            \"marginTop\": \"100px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"input\",\n            label: \"Name\",\n            name: \"name\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"input\",\n            label: \"Enrollment No\",\n            name: \"enrollmentNo\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"input\",\n            label: \"Faculty No\",\n            name: \"facultyNo\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"input\",\n            label: \"Email\",\n            name: \"email\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"input\",\n            label: \"Phone No\",\n            name: \"phoneNo\",\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"input\",\n            label: \"Course Name\",\n            name: \"courseName\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"teal\",\n            type: \"submit\",\n            mt: \"20px\",\n            size: \"md\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StudentRegister, \"5Rtw3aVAvc5eeMJHsAgrVNMKNFU=\");\n\n_c = StudentRegister;\nexport default StudentRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentRegister\");","map":{"version":3,"sources":["/home/nadimakhtar97/smart-attendance-system/client/src/Components/StudentRegister/StudentRegister.js"],"names":["React","Formik","Form","FormikControl","Yup","Button","Center","Flex","StudentRegister","data","setData","useState","use","initialValues","onSubmit","values","console","log","validationSchema","object","name","string","required","enrollmentNo","facultyNo","email","phoneNo","number","positive","integer","courseName","formik"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form } from 'formik'\nimport FormikControl from '../FormikControl/FormikControl'\nimport * as Yup from 'yup'\nimport {Button,Center,Flex} from '@chakra-ui/react'\n\nfunction StudentRegister() {\n\n    const [data, setData] = useState({\n        \"name\": \"\",\n        \"enrollmentNo\": \"\",\n        \"facultyNo\": \"\",\n        \"email\":\"\",\n        \"phoneNo\": \"\",\n        \"courseName\": \"\"\n    })\n\nuse\n\n    const initialValues = {\n        \"name\": \"\",\n        \"enrollmentNo\": \"\",\n        \"facultyNo\": \"\",\n        \"email\":\"\",\n        \"phoneNo\": \"\",\n        \"courseName\": \"\",\n    }\n\n    const onSubmit = values => {\n        console.log(values);\n    }\n\n    const validationSchema = Yup.object({\n        name:Yup.string().required('name is required'),\n        enrollmentNo: Yup.string().required('enrollment number is required'),\n        facultyNo:Yup.string().required('faculty number is required'),\n        email:Yup.string().required('email is required').email(\"Invalid email format\"),\n        phoneNo:Yup.number().required().positive().integer(),\n        courseName:Yup.string().required()\n    })\n\n    return (\n\n        <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\n            {\n                (formik) => {\n                    return (\n                        <Center>\n                        <Form style={{\"width\":\"40vw\",\"marginTop\":\"100px\"}}>\n                            <FormikControl control='input' label='Name' name='name' type='text'></FormikControl>\n                            <FormikControl control='input' label='Enrollment No' name='enrollmentNo' type='text'></FormikControl>\n                            <FormikControl control='input' label='Faculty No' name='facultyNo' type='text'></FormikControl>\n                            <FormikControl control='input' label='Email' name='email' type='email'></FormikControl>\n                            <FormikControl control='input' label='Phone No' name='phoneNo' type='number'></FormikControl>\n                            <FormikControl control='input' label='Course Name' name='courseName' type='text'></FormikControl>\n                            <Button colorScheme='teal' type='submit' mt='20px' size='md'>Submit</Button>\n                        </Form>\n                        </Center>\n                    )\n                }\n            }\n        </Formik>\n\n    )\n}\n\nexport default StudentRegister\n"]},"metadata":{},"sourceType":"module"}