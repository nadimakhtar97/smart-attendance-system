{"ast":null,"code":"var _jsxFileName = \"/home/nadimakhtar97/smart-attendance-system/client/src/Components/WebCam/WebCam.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport Webcam from \"react-webcam\";\nimport styles from \"../WebCam/WebCam.module.css\";\nimport * as tf from '@tensorflow-models/blazeface';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WebCam() {\n  _s();\n\n  const [image, setImage] = useState('');\n  const videoConstraints = {\n    width: 720,\n    height: 360,\n    facingMode: \"user\"\n  };\n  const webcamRef = useRef(null);\n  const capture = useCallback(async () => {\n    try {\n      const imageSrc = webcamRef.current.getScreenshot();\n      setImage(imageSrc);\n      const response = await axios.post('http://localhost:5000/img', {\n        \"base64image\": imageSrc\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [webcamRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.webcam,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.video,\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        className: styles.cam,\n        mirrored: true,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        screenshotQuality: 1,\n        height: 360,\n        width: 720,\n        videoConstraints: videoConstraints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        click: () => {\n          capture();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WebCam, \"SIJKUZVQWLWzj4b+Bp96nlE+yZs=\");\n\n_c = WebCam;\nexport default WebCam;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebCam\");","map":{"version":3,"sources":["/home/nadimakhtar97/smart-attendance-system/client/src/Components/WebCam/WebCam.js"],"names":["React","useState","useRef","useCallback","Webcam","styles","tf","axios","WebCam","image","setImage","videoConstraints","width","height","facingMode","webcamRef","capture","imageSrc","current","getScreenshot","response","post","console","log","error","webcam","video","cam"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAO,KAAKC,EAAZ,MAAoB,8BAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAEd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMU,gBAAgB,GAAG;AACrBC,IAAAA,KAAK,EAAE,GADc;AAErBC,IAAAA,MAAM,EAAE,GAFa;AAGrBC,IAAAA,UAAU,EAAE;AAHS,GAAzB;AAMA,QAAMC,SAAS,GAAGb,MAAM,CAAC,IAAD,CAAxB;AAEA,QAAMc,OAAO,GAAGb,WAAW,CACvB,YAAY;AACR,QAAG;AACC,YAAMc,QAAQ,GAAGF,SAAS,CAACG,OAAV,CAAkBC,aAAlB,EAAjB;AACAT,MAAAA,QAAQ,CAACO,QAAD,CAAR;AACA,YAAMG,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAN,CAAW,2BAAX,EAAuC;AAAE,uBAAcJ;AAAhB,OAAvC,CAAvB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEH,KAND,CAOA,OAAMI,KAAN,EAAY;AACRF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AAEJ,GAbsB,EAcvB,CAACT,SAAD,CAduB,CAA3B;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACoB,MAAvB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEpB,MAAM,CAACqB,KAAvB;AAAA,8BACI,QAAC,MAAD;AACI,QAAA,SAAS,EAAErB,MAAM,CAACsB,GADtB;AAEI,QAAA,QAAQ,EAAE,IAFd;AAGI,QAAA,GAAG,EAAEZ,SAHT;AAII,QAAA,gBAAgB,EAAC,YAJrB;AAKI,QAAA,iBAAiB,EAAE,CALvB;AAMI,QAAA,MAAM,EAAE,GANZ;AAOI,QAAA,KAAK,EAAE,GAPX;AAQI,QAAA,gBAAgB,EAAEJ;AARtB;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,MAAM;AAAEK,UAAAA,OAAO;AAAI;AAAlC;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAgBI;AAAK,MAAA,GAAG,EAAEP;AAAV;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA/CQD,M;;KAAAA,M;AAiDT,eAAeA,MAAf","sourcesContent":["import React, { useState, useRef, useCallback } from 'react'\nimport Webcam from \"react-webcam\";\nimport styles from \"../WebCam/WebCam.module.css\";\nimport * as tf from '@tensorflow-models/blazeface'\nimport axios from 'axios'\n\nfunction WebCam() {\n\n    const [image, setImage] = useState('')\n    const videoConstraints = {\n        width: 720,\n        height: 360,\n        facingMode: \"user\"\n    };\n\n    const webcamRef = useRef(null);\n\n    const capture = useCallback(\n        async () => {\n            try{\n                const imageSrc = webcamRef.current.getScreenshot();\n                setImage(imageSrc);\n                const response = await axios.post('http://localhost:5000/img',{ \"base64image\":imageSrc})\n                console.log(response);\n\n            }\n            catch(error){\n                console.log(error)\n            }\n\n        },\n        [webcamRef]\n    );\n    return (\n        <div className={styles.webcam}>\n            <div className={styles.video}>\n                <Webcam\n                    className={styles.cam}\n                    mirrored={true}\n                    ref={webcamRef}\n                    screenshotFormat=\"image/jpeg\"\n                    screenshotQuality={1}\n                    height={360}\n                    width={720}\n                    videoConstraints={videoConstraints}\n                ></Webcam>\n                <canvas></canvas>\n                <Button click={() => { capture() }}></Button>\n            </div>\n\n            <img src={image}></img>\n        </div>\n    )\n}\n\nexport default WebCam"]},"metadata":{},"sourceType":"module"}