{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { mirrorPad } from '../../ops/mirror_pad';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.mirrorPad = function (paddings, mode) {\n  this.throwIfDisposed();\n  return mirrorPad(this, paddings, mode);\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,SAAR,QAAwB,sBAAxB;AACA,SAAQC,oBAAR,QAA2C,cAA3C;;AAUAA,oBAAoB,GAAGC,SAAvB,CAAiCF,SAAjC,GAA6C,UAChCG,QADgC,EAEzCC,IAFyC,EAEd;AAC7B,OAAKC,eAAL;AACA,SAAOL,SAAS,CAAC,IAAD,EAAOG,QAAP,EAAiBC,IAAjB,CAAhB;AACD,CALD","names":["mirrorPad","getGlobalTensorClass","prototype","paddings","mode","throwIfDisposed"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-core/src/public/chained_ops/mirror_pad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {mirrorPad} from '../../ops/mirror_pad';\nimport {getGlobalTensorClass, Tensor} from '../../tensor';\nimport {Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    mirrorPad<T extends Tensor>(\n        paddings: Array<[number, number]>, mode: 'reflect'|'symmetric'): T;\n  }\n}\n\ngetGlobalTensorClass().prototype.mirrorPad = function<T extends Tensor>(\n    this: T, paddings: Array<[number, number]>,\n    mode: 'reflect'|'symmetric'): T {\n  this.throwIfDisposed();\n  return mirrorPad(this, paddings, mode);\n};\n"]},"metadata":{},"sourceType":"module"}