{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\n/**\n * Converts a `tf.Tensor` to a `tf.Tensor4D`.\n *\n * @param rows Number of rows in `tf.Tensor4D`.\n * @param columns Number of columns in `tf.Tensor4D`.\n * @param depth Depth of `tf.Tensor4D`.\n * @param depth2 4th dimension of `tf.Tensor4D`.\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\n\ngetGlobalTensorClass().prototype.as4D = function (rows, columns, depth, depth2) {\n  this.throwIfDisposed();\n  return reshape(this, [rows, columns, depth, depth2]);\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,OAAR,QAAsB,mBAAtB;AACA,SAAQC,oBAAR,QAA2C,cAA3C;AAUA;;;;;;;;;;AASAA,oBAAoB,GAAGC,SAAvB,CAAiCC,IAAjC,GAAwC,UACpCC,IADoC,EACtBC,OADsB,EACLC,KADK,EACUC,MADV,EACwB;AAC9D,OAAKC,eAAL;AACA,SAAOR,OAAO,CAAC,IAAD,EAAO,CAACI,IAAD,EAAOC,OAAP,EAAgBC,KAAhB,EAAuBC,MAAvB,CAAP,CAAd;AACD,CAJD","names":["reshape","getGlobalTensorClass","prototype","as4D","rows","columns","depth","depth2","throwIfDisposed"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-core/src/public/chained_ops/as4d.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {reshape} from '../../ops/reshape';\nimport {getGlobalTensorClass, Tensor} from '../../tensor';\nimport {Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    as4D<T extends Tensor>(\n        rows: number, columns: number, depth: number, depth2: number): Tensor4D;\n  }\n}\n\n/**\n * Converts a `tf.Tensor` to a `tf.Tensor4D`.\n *\n * @param rows Number of rows in `tf.Tensor4D`.\n * @param columns Number of columns in `tf.Tensor4D`.\n * @param depth Depth of `tf.Tensor4D`.\n * @param depth2 4th dimension of `tf.Tensor4D`.\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\ngetGlobalTensorClass().prototype.as4D = function<T extends Tensor>(\n    rows: number, columns: number, depth: number, depth2: number): T {\n  this.throwIfDisposed();\n  return reshape(this, [rows, columns, depth, depth2]) as T;\n};\n"]},"metadata":{},"sourceType":"module"}