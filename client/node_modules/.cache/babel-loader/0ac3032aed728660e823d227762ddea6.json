{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function transposeImpl(xVals, xShape, dtype, perm, newShape) {\n  const xRank = xShape.length;\n  const xSize = util.sizeFromShape(xShape);\n  const xStrides = util.computeStrides(xShape);\n  const newStrides = util.computeStrides(newShape);\n  const result = util.getTypedArrayFromDType(dtype, util.sizeFromShape(newShape));\n\n  for (let i = 0; i < xSize; ++i) {\n    const loc = util.indexToLoc(i, xRank, xStrides); // Permute location.\n\n    const newLoc = new Array(loc.length);\n\n    for (let i = 0; i < newLoc.length; i++) {\n      newLoc[i] = loc[perm[i]];\n    }\n\n    const newIndex = util.locToIndex(newLoc, xRank, newStrides);\n    result[newIndex] = xVals[i];\n  }\n\n  return result;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAkBA,SAAQA,IAAR,QAAmB,uBAAnB;AAEA,OAAM,SAAUC,aAAV,CACFC,KADE,EACiBC,MADjB,EACmCC,KADnC,EACoDC,IADpD,EAEFC,QAFE,EAEgB;AACpB,QAAMC,KAAK,GAAGJ,MAAM,CAACK,MAArB;AACA,QAAMC,KAAK,GAAGT,IAAI,CAACU,aAAL,CAAmBP,MAAnB,CAAd;AACA,QAAMQ,QAAQ,GAAGX,IAAI,CAACY,cAAL,CAAoBT,MAApB,CAAjB;AACA,QAAMU,UAAU,GAAGb,IAAI,CAACY,cAAL,CAAoBN,QAApB,CAAnB;AAEA,QAAMQ,MAAM,GAAGd,IAAI,CAACe,sBAAL,CACXX,KADW,EACeJ,IAAI,CAACU,aAAL,CAAmBJ,QAAnB,CADf,CAAf;;AAGA,OAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAApB,EAA2B,EAAEO,CAA7B,EAAgC;AAC9B,UAAMC,GAAG,GAAGjB,IAAI,CAACkB,UAAL,CAAgBF,CAAhB,EAAmBT,KAAnB,EAA0BI,QAA1B,CAAZ,CAD8B,CAG9B;;AACA,UAAMQ,MAAM,GAAa,IAAIC,KAAJ,CAAUH,GAAG,CAACT,MAAd,CAAzB;;AACA,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,MAAM,CAACX,MAA3B,EAAmCQ,CAAC,EAApC,EAAwC;AACtCG,YAAM,CAACH,CAAD,CAAN,GAAYC,GAAG,CAACZ,IAAI,CAACW,CAAD,CAAL,CAAf;AACD;;AAED,UAAMK,QAAQ,GAAGrB,IAAI,CAACsB,UAAL,CAAgBH,MAAhB,EAAwBZ,KAAxB,EAA+BM,UAA/B,CAAjB;AACAC,UAAM,CAACO,QAAD,CAAN,GAAmBnB,KAAK,CAACc,CAAD,CAAxB;AACD;;AACD,SAAOF,MAAP;AACD","names":["util","transposeImpl","xVals","xShape","dtype","perm","newShape","xRank","length","xSize","sizeFromShape","xStrides","computeStrides","newStrides","result","getTypedArrayFromDType","i","loc","indexToLoc","newLoc","Array","newIndex","locToIndex"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-cpu/src/kernels/Transpose_impl.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, NumericDataType, TypedArray} from '@tensorflow/tfjs-core';\nimport {util} from '@tensorflow/tfjs-core';\n\nexport function transposeImpl(\n    xVals: TypedArray, xShape: number[], dtype: DataType, perm: number[],\n    newShape: number[]): TypedArray {\n  const xRank = xShape.length;\n  const xSize = util.sizeFromShape(xShape);\n  const xStrides = util.computeStrides(xShape);\n  const newStrides = util.computeStrides(newShape);\n\n  const result = util.getTypedArrayFromDType(\n      dtype as NumericDataType, util.sizeFromShape(newShape));\n\n  for (let i = 0; i < xSize; ++i) {\n    const loc = util.indexToLoc(i, xRank, xStrides);\n\n    // Permute location.\n    const newLoc: number[] = new Array(loc.length);\n    for (let i = 0; i < newLoc.length; i++) {\n      newLoc[i] = loc[perm[i]];\n    }\n\n    const newIndex = util.locToIndex(newLoc, xRank, newStrides);\n    result[newIndex] = xVals[i];\n  }\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}