{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LeakyRelu } from '../kernel_names';\nimport { greater } from '../ops/greater';\nimport { mul } from '../ops/mul';\nimport { where } from '../ops/where';\nexport const leakyReluGradConfig = {\n  kernelName: LeakyRelu,\n  inputsToSave: ['x'],\n  gradFunc: (dy, saved, attrs) => {\n    const [x] = saved;\n    const {\n      alpha\n    } = attrs;\n    const mask = greater(x, 0); // Returns `gradients * (features > 0) + alpha * gradients * (features <=\n    // 0)`.\n\n    return {\n      x: () => where(mask, dy, mul(dy, alpha))\n    };\n  }\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAAQA,SAAR,QAAwC,iBAAxC;AAEA,SAAQC,OAAR,QAAsB,gBAAtB;AACA,SAAQC,GAAR,QAAkB,YAAlB;AACA,SAAQC,KAAR,QAAoB,cAApB;AAGA,OAAO,MAAMC,mBAAmB,GAAe;AAC7CC,YAAU,EAAEL,SADiC;AAE7CM,cAAY,EAAE,CAAC,GAAD,CAF+B;AAG7CC,UAAQ,EAAE,CAACC,EAAD,EAAaC,KAAb,EAA8BC,KAA9B,KAAqD;AAC7D,UAAM,CAACC,CAAD,IAAMF,KAAZ;AACA,UAAM;AAACG;AAAD,QAAUF,KAAhB;AACA,UAAMG,IAAI,GAAGZ,OAAO,CAACU,CAAD,EAAI,CAAJ,CAApB,CAH6D,CAK7D;AACA;;AACA,WAAO;AAACA,OAAC,EAAE,MAAMR,KAAK,CAACU,IAAD,EAAOL,EAAP,EAAWN,GAAG,CAACM,EAAD,EAAKI,KAAL,CAAd;AAAf,KAAP;AACD;AAX4C,CAAxC","names":["LeakyRelu","greater","mul","where","leakyReluGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","x","alpha","mask"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-core/src/gradients/LeakyRelu_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {LeakyRelu, LeakyReluAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {greater} from '../ops/greater';\nimport {mul} from '../ops/mul';\nimport {where} from '../ops/where';\nimport {Tensor} from '../tensor';\n\nexport const leakyReluGradConfig: GradConfig = {\n  kernelName: LeakyRelu,\n  inputsToSave: ['x'],\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [x] = saved;\n    const {alpha} = attrs as {} as LeakyReluAttrs;\n    const mask = greater(x, 0);\n\n    // Returns `gradients * (features > 0) + alpha * gradients * (features <=\n    // 0)`.\n    return {x: () => where(mask, dy, mul(dy, alpha))};\n  }\n};\n"]},"metadata":{},"sourceType":"module"}