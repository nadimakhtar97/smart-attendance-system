{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ArgMin, backend_util, util } from '@tensorflow/tfjs-core';\nimport { argMinMaxReduce } from '../kernel_utils/arg_min_max';\nimport { transpose } from './Transpose';\nexport function argMin(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    axis\n  } = attrs;\n  let axes = util.parseAxisParam(axis, x.shape);\n  const permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n  let $x = x;\n  const intermediateTensorInfos = [];\n\n  if (permutedAxes != null) {\n    $x = transpose({\n      inputs: {\n        x\n      },\n      backend,\n      attrs: {\n        perm: permutedAxes\n      }\n    });\n    intermediateTensorInfos.push($x);\n    axes = backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('argMin', [axes[0]], $x.shape.length);\n  const out = argMinMaxReduce(backend, $x, axes[0], 'min');\n  intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n  return out;\n}\nexport const argMinConfig = {\n  kernelName: ArgMin,\n  backendName: 'webgl',\n  kernelFunc: argMin\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,MAAR,EAA2CC,YAA3C,EAA+FC,IAA/F,QAA0G,uBAA1G;AAGA,SAAQC,eAAR,QAA8B,6BAA9B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,OAAM,SAAUC,MAAV,CACFC,IADE,EAEuE;AAE3E,QAAM;AAACC,UAAD;AAASC,WAAT;AAAkBC;AAAlB,MAA2BH,IAAjC;AACA,QAAM;AAACI;AAAD,MAAMH,MAAZ;AACA,QAAM;AAACI;AAAD,MAASF,KAAf;AAEA,MAAIG,IAAI,GAAGV,IAAI,CAACW,cAAL,CAAoBF,IAApB,EAA0BD,CAAC,CAACI,KAA5B,CAAX;AACA,QAAMC,YAAY,GAAGd,YAAY,CAACe,kBAAb,CAAgCJ,IAAhC,EAAsCF,CAAC,CAACI,KAAF,CAAQG,MAA9C,CAArB;AACA,MAAIC,EAAE,GAAGR,CAAT;AACA,QAAMS,uBAAuB,GAAG,EAAhC;;AACA,MAAIJ,YAAY,IAAI,IAApB,EAA0B;AACxBG,MAAE,GAAGd,SAAS,CAAC;AAACG,YAAM,EAAE;AAACG;AAAD,OAAT;AAAcF,aAAd;AAAuBC,WAAK,EAAE;AAACW,YAAI,EAAEL;AAAP;AAA9B,KAAD,CAAd;AACAI,2BAAuB,CAACE,IAAxB,CAA6BH,EAA7B;AACAN,QAAI,GAAGX,YAAY,CAACqB,gBAAb,CAA8BV,IAAI,CAACK,MAAnC,EAA2CC,EAAE,CAACJ,KAAH,CAASG,MAApD,CAAP;AACD;;AAEDhB,cAAY,CAACsB,0BAAb,CAAwC,QAAxC,EAAkD,CAACX,IAAI,CAAC,CAAD,CAAL,CAAlD,EAA6DM,EAAE,CAACJ,KAAH,CAASG,MAAtE;AAEA,QAAMO,GAAG,GAAGrB,eAAe,CAACK,OAAD,EAAUU,EAAV,EAAcN,IAAI,CAAC,CAAD,CAAlB,EAAuB,KAAvB,CAA3B;AAEAO,yBAAuB,CAACM,OAAxB,CACIC,CAAC,IAAIlB,OAAO,CAACmB,6BAAR,CAAsCD,CAAtC,CADT;AAEA,SAAOF,GAAP;AACD;AAED,OAAO,MAAMI,YAAY,GAAiB;AACxCC,YAAU,EAAE7B,MAD4B;AAExC8B,aAAW,EAAE,OAF2B;AAGxCC,YAAU,EAAE1B;AAH4B,CAAnC","names":["ArgMin","backend_util","util","argMinMaxReduce","transpose","argMin","args","inputs","backend","attrs","x","axis","axes","parseAxisParam","shape","permutedAxes","getAxesPermutation","length","$x","intermediateTensorInfos","perm","push","getInnerMostAxes","assertAxesAreInnerMostDims","out","forEach","t","disposeIntermediateTensorInfo","argMinConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/ArgMin.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ArgMin, ArgMinAttrs, ArgMinInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {argMinMaxReduce} from '../kernel_utils/arg_min_max';\nimport {transpose} from './Transpose';\n\nexport function argMin(\n    args:\n        {inputs: ArgMinInputs, backend: MathBackendWebGL, attrs: ArgMinAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis} = attrs;\n\n  let axes = util.parseAxisParam(axis, x.shape);\n  const permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n  let $x = x;\n  const intermediateTensorInfos = [];\n  if (permutedAxes != null) {\n    $x = transpose({inputs: {x}, backend, attrs: {perm: permutedAxes}});\n    intermediateTensorInfos.push($x);\n    axes = backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('argMin', [axes[0]], $x.shape.length);\n\n  const out = argMinMaxReduce(backend, $x, axes[0], 'min');\n\n  intermediateTensorInfos.forEach(\n      t => backend.disposeIntermediateTensorInfo(t));\n  return out;\n}\n\nexport const argMinConfig: KernelConfig = {\n  kernelName: ArgMin,\n  backendName: 'webgl',\n  kernelFunc: argMin as {} as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module"}