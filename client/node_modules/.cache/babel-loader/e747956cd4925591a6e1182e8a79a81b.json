{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Round } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport const round = unaryKernelFunc(Round, xi => {\n  // The algorithm is based on banker's rounding.\n  const base = Math.floor(xi);\n\n  if (xi - base < 0.5) {\n    return Math.floor(xi);\n  } else if (xi - base > 0.5) {\n    return Math.ceil(xi);\n  } else {\n    if (base % 2.0 === 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n});\nexport const roundConfig = {\n  kernelName: Round,\n  backendName: 'cpu',\n  kernelFunc: round\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAsBA,KAAtB,QAAkC,uBAAlC;AAEA,SAAQC,eAAR,QAA8B,sBAA9B;AAEA,OAAO,MAAMC,KAAK,GAAGD,eAAe,CAACD,KAAD,EAASG,EAAD,IAAO;AACjD;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,EAAX,CAAb;;AACA,MAAIA,EAAE,GAAGC,IAAL,GAAY,GAAhB,EAAqB;AACnB,WAAOC,IAAI,CAACC,KAAL,CAAWH,EAAX,CAAP;AACD,GAFD,MAEO,IAAIA,EAAE,GAAGC,IAAL,GAAY,GAAhB,EAAqB;AAC1B,WAAOC,IAAI,CAACE,IAAL,CAAUJ,EAAV,CAAP;AACD,GAFM,MAEA;AACL,QAAIC,IAAI,GAAG,GAAP,KAAe,GAAnB,EAAwB;AACtB,aAAOA,IAAP;AACD,KAFD,MAEO;AACL,aAAOA,IAAI,GAAG,GAAd;AACD;AACF;AACF,CAdmC,CAA7B;AAgBP,OAAO,MAAMI,WAAW,GAAiB;AACvCC,YAAU,EAAET,KAD2B;AAEvCU,aAAW,EAAE,KAF0B;AAGvCC,YAAU,EAAET;AAH2B,CAAlC","names":["Round","unaryKernelFunc","round","xi","base","Math","floor","ceil","roundConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-cpu/src/kernels/Round.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Round} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const round = unaryKernelFunc(Round, (xi) => {\n  // The algorithm is based on banker's rounding.\n  const base = Math.floor(xi);\n  if (xi - base < 0.5) {\n    return Math.floor(xi);\n  } else if (xi - base > 0.5) {\n    return Math.ceil(xi);\n  } else {\n    if (base % 2.0 === 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n});\n\nexport const roundConfig: KernelConfig = {\n  kernelName: Round,\n  backendName: 'cpu',\n  kernelFunc: round,\n};\n"]},"metadata":{},"sourceType":"module"}