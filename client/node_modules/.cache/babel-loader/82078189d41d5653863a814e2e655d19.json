{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2DBackpropFilter } from '@tensorflow/tfjs-core';\nimport { Conv2DDerFilterProgram } from '../conv_backprop_gpu';\nexport function conv2DBackpropFilter(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x,\n    dy\n  } = inputs;\n  const {\n    strides,\n    pad,\n    dataFormat,\n    dimRoundingMode,\n    filterShape\n  } = attrs;\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(x.shape, filterShape, strides, 1\n  /* dilations */\n  , pad, dimRoundingMode, false\n  /* depthwise */\n  , $dataFormat);\n  const program = new Conv2DDerFilterProgram(convInfo);\n  return backend.runWebGLProgram(program, [x, dy], 'float32');\n}\nexport const conv2DBackpropFilterConfig = {\n  kernelName: Conv2DBackpropFilter,\n  backendName: 'webgl',\n  kernelFunc: conv2DBackpropFilter\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAR,EAAsBC,oBAAtB,QAAkI,uBAAlI;AAGA,SAAQC,sBAAR,QAAqC,sBAArC;AAEA,OAAM,SAAUC,oBAAV,CAA+BC,IAA/B,EAIL;AACC,QAAM;AAACC,UAAD;AAASC,WAAT;AAAkBC;AAAlB,MAA2BH,IAAjC;AACA,QAAM;AAACI,KAAD;AAAIC;AAAJ,MAAUJ,MAAhB;AACA,QAAM;AAACK,WAAD;AAAUC,OAAV;AAAeC,cAAf;AAA2BC,mBAA3B;AAA4CC;AAA5C,MAA2DP,KAAjE;AAEA,QAAMQ,WAAW,GAAGf,YAAY,CAACgB,uBAAb,CAAqCJ,UAArC,CAApB;AACA,QAAMK,QAAQ,GAAGjB,YAAY,CAACkB,iBAAb,CACbV,CAAC,CAACW,KADW,EACgCL,WADhC,EAC6CJ,OAD7C,EAEb;AAAE;AAFW,IAEMC,GAFN,EAEWE,eAFX,EAE4B;AAAM;AAFlC,IAGbE,WAHa,CAAjB;AAKA,QAAMK,OAAO,GAAG,IAAIlB,sBAAJ,CAA2Be,QAA3B,CAAhB;AACA,SAAOX,OAAO,CAACe,eAAR,CAAwBD,OAAxB,EAAiC,CAACZ,CAAD,EAAIC,EAAJ,CAAjC,EAA0C,SAA1C,CAAP;AACD;AAED,OAAO,MAAMa,0BAA0B,GAAiB;AACtDC,YAAU,EAAEtB,oBAD0C;AAEtDuB,aAAW,EAAE,OAFyC;AAGtDC,YAAU,EAAEtB;AAH0C,CAAjD","names":["backend_util","Conv2DBackpropFilter","Conv2DDerFilterProgram","conv2DBackpropFilter","args","inputs","backend","attrs","x","dy","strides","pad","dataFormat","dimRoundingMode","filterShape","$dataFormat","convertConv2DDataFormat","convInfo","computeConv2DInfo","shape","program","runWebGLProgram","conv2DBackpropFilterConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/Conv2DBackpropFilter.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2DBackpropFilter, Conv2DBackpropFilterAttrs, Conv2DBackpropFilterInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {Conv2DDerFilterProgram} from '../conv_backprop_gpu';\n\nexport function conv2DBackpropFilter(args: {\n  inputs: Conv2DBackpropFilterInputs,\n  attrs: Conv2DBackpropFilterAttrs,\n  backend: MathBackendWebGL\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x, dy} = inputs;\n  const {strides, pad, dataFormat, dimRoundingMode, filterShape} = attrs;\n\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      x.shape as [number, number, number, number], filterShape, strides,\n      1 /* dilations */, pad, dimRoundingMode, false /* depthwise */,\n      $dataFormat);\n\n  const program = new Conv2DDerFilterProgram(convInfo);\n  return backend.runWebGLProgram(program, [x, dy], 'float32');\n}\n\nexport const conv2DBackpropFilterConfig: KernelConfig = {\n  kernelName: Conv2DBackpropFilter,\n  backendName: 'webgl',\n  kernelFunc: conv2DBackpropFilter as {} as KernelFunc,\n};\n"]},"metadata":{},"sourceType":"module"}