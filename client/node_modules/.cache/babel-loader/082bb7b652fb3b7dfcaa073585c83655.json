{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unpack } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nexport function unpack(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    value\n  } = inputs;\n  let {\n    axis\n  } = attrs;\n\n  if (axis < 0) {\n    axis += value.shape.length;\n  }\n\n  const valueRank = value.shape.length;\n  const num = value.shape[axis];\n  const outShape = new Array(valueRank - 1);\n  let outIndex = 0;\n\n  for (let i = 0; i < valueRank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = value.shape[i];\n    }\n  }\n\n  const begin = new Array(valueRank).fill(0);\n  const size = value.shape.slice();\n  size[axis] = 1;\n  const res = new Array(num);\n\n  for (let i = 0; i < res.length; i++) {\n    begin[axis] = i;\n    const tempRes = slice({\n      inputs: {\n        x: value\n      },\n      backend,\n      attrs: {\n        begin,\n        size\n      }\n    });\n    res[i] = reshape({\n      inputs: {\n        x: tempRes\n      },\n      backend,\n      attrs: {\n        shape: outShape\n      }\n    });\n    backend.disposeIntermediateTensorInfo(tempRes);\n  }\n\n  return res;\n}\nexport const unpackConfig = {\n  kernelName: Unpack,\n  backendName: 'cpu',\n  kernelFunc: unpack\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAA8CA,MAA9C,QAAsF,uBAAtF;AAGA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,KAAR,QAAoB,SAApB;AAEA,OAAM,SAAUC,MAAV,CACFC,IADE,EACuE;AAE3E,QAAM;AAACC,UAAD;AAASC,WAAT;AAAkBC;AAAlB,MAA2BH,IAAjC;AACA,QAAM;AAACI;AAAD,MAAUH,MAAhB;AACA,MAAI;AAACI;AAAD,MAASF,KAAb;;AAEA,MAAIE,IAAI,GAAG,CAAX,EAAc;AACZA,QAAI,IAAID,KAAK,CAACE,KAAN,CAAYC,MAApB;AACD;;AAED,QAAMC,SAAS,GAAGJ,KAAK,CAACE,KAAN,CAAYC,MAA9B;AAEA,QAAME,GAAG,GAAGL,KAAK,CAACE,KAAN,CAAYD,IAAZ,CAAZ;AACA,QAAMK,QAAQ,GAAa,IAAIC,KAAJ,CAAUH,SAAS,GAAG,CAAtB,CAA3B;AACA,MAAII,QAAQ,GAAG,CAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,SAApB,EAA+BK,CAAC,EAAhC,EAAoC;AAClC,QAAIA,CAAC,KAAKR,IAAV,EAAgB;AACdK,cAAQ,CAACE,QAAQ,EAAT,CAAR,GAAuBR,KAAK,CAACE,KAAN,CAAYO,CAAZ,CAAvB;AACD;AACF;;AAED,QAAMC,KAAK,GAAG,IAAIH,KAAJ,CAAUH,SAAV,EAAqBO,IAArB,CAA0B,CAA1B,CAAd;AACA,QAAMC,IAAI,GAAGZ,KAAK,CAACE,KAAN,CAAYR,KAAZ,EAAb;AACAkB,MAAI,CAACX,IAAD,CAAJ,GAAa,CAAb;AACA,QAAMY,GAAG,GAAG,IAAIN,KAAJ,CAAUF,GAAV,CAAZ;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGI,GAAG,CAACV,MAAxB,EAAgCM,CAAC,EAAjC,EAAqC;AACnCC,SAAK,CAACT,IAAD,CAAL,GAAcQ,CAAd;AACA,UAAMK,OAAO,GAAGpB,KAAK,CAAC;AAACG,YAAM,EAAE;AAACkB,SAAC,EAAEf;AAAJ,OAAT;AAAqBF,aAArB;AAA8BC,WAAK,EAAE;AAACW,aAAD;AAAQE;AAAR;AAArC,KAAD,CAArB;AACAC,OAAG,CAACJ,CAAD,CAAH,GAAShB,OAAO,CAAC;AAACI,YAAM,EAAE;AAACkB,SAAC,EAAED;AAAJ,OAAT;AAAuBhB,aAAvB;AAAgCC,WAAK,EAAE;AAACG,aAAK,EAAEI;AAAR;AAAvC,KAAD,CAAhB;AACAR,WAAO,CAACkB,6BAAR,CAAsCF,OAAtC;AACD;;AAED,SAAOD,GAAP;AACD;AAED,OAAO,MAAMI,YAAY,GAAiB;AACxCC,YAAU,EAAE1B,MAD4B;AAExC2B,aAAW,EAAE,KAF2B;AAGxCC,YAAU,EAAEzB;AAH4B,CAAnC","names":["Unpack","reshape","slice","unpack","args","inputs","backend","attrs","value","axis","shape","length","valueRank","num","outShape","Array","outIndex","i","begin","fill","size","res","tempRes","x","disposeIntermediateTensorInfo","unpackConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-cpu/src/kernels/Unpack.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Unpack, UnpackAttrs, UnpackInputs} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {reshape} from './Reshape';\nimport {slice} from './Slice';\n\nexport function unpack(\n    args: {inputs: UnpackInputs, backend: MathBackendCPU, attrs: UnpackAttrs}):\n    TensorInfo[] {\n  const {inputs, backend, attrs} = args;\n  const {value} = inputs;\n  let {axis} = attrs;\n\n  if (axis < 0) {\n    axis += value.shape.length;\n  }\n\n  const valueRank = value.shape.length;\n\n  const num = value.shape[axis];\n  const outShape: number[] = new Array(valueRank - 1);\n  let outIndex = 0;\n  for (let i = 0; i < valueRank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = value.shape[i];\n    }\n  }\n\n  const begin = new Array(valueRank).fill(0);\n  const size = value.shape.slice();\n  size[axis] = 1;\n  const res = new Array(num);\n  for (let i = 0; i < res.length; i++) {\n    begin[axis] = i;\n    const tempRes = slice({inputs: {x: value}, backend, attrs: {begin, size}});\n    res[i] = reshape({inputs: {x: tempRes}, backend, attrs: {shape: outShape}});\n    backend.disposeIntermediateTensorInfo(tempRes);\n  }\n\n  return res;\n}\n\nexport const unpackConfig: KernelConfig = {\n  kernelName: Unpack,\n  backendName: 'cpu',\n  kernelFunc: unpack as {} as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module"}