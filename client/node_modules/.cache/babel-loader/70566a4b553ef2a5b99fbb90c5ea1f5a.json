{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ZerosLike } from '@tensorflow/tfjs-core';\nimport { complex } from './Complex';\nimport { fill } from './Fill';\nimport { imag } from './Imag';\nimport { real } from './Real';\nexport function zerosLike(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    x\n  } = inputs;\n\n  if (x.dtype === 'complex64') {\n    const realPart = real({\n      inputs: {\n        input: x\n      },\n      backend\n    });\n    const r = zerosLike({\n      inputs: {\n        x: realPart\n      },\n      backend\n    });\n    const imagPart = imag({\n      inputs: {\n        input: x\n      },\n      backend\n    });\n    const i = zerosLike({\n      inputs: {\n        x: imagPart\n      },\n      backend\n    });\n    const result = complex({\n      inputs: {\n        real: r,\n        imag: i\n      },\n      backend\n    });\n    backend.disposeIntermediateTensorInfo(realPart);\n    backend.disposeIntermediateTensorInfo(r);\n    backend.disposeIntermediateTensorInfo(imagPart);\n    backend.disposeIntermediateTensorInfo(i);\n    return result;\n  } else {\n    return fill({\n      attrs: {\n        shape: x.shape,\n        dtype: x.dtype,\n        value: x.dtype === 'string' ? '' : 0\n      },\n      backend\n    });\n  }\n}\nexport const zerosLikeConfig = {\n  kernelName: ZerosLike,\n  backendName: 'webgl',\n  kernelFunc: zerosLike\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAA8CA,SAA9C,QAA+E,uBAA/E;AAIA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,IAAR,QAAmB,QAAnB;AACA,SAAQC,IAAR,QAAmB,QAAnB;AACA,SAAQC,IAAR,QAAmB,QAAnB;AAEA,OAAM,SAAUC,SAAV,CACFC,IADE,EACwD;AAC5D,QAAM;AAACC,UAAD;AAASC;AAAT,MAAoBF,IAA1B;AACA,QAAM;AAACG;AAAD,MAAMF,MAAZ;;AAEA,MAAIE,CAAC,CAACC,KAAF,KAAY,WAAhB,EAA6B;AAC3B,UAAMC,QAAQ,GAAGP,IAAI,CAAC;AAACG,YAAM,EAAE;AAACK,aAAK,EAAEH;AAAR,OAAT;AAAqBD;AAArB,KAAD,CAArB;AACA,UAAMK,CAAC,GAAGR,SAAS,CAAC;AAACE,YAAM,EAAE;AAACE,SAAC,EAAEE;AAAJ,OAAT;AAAwBH;AAAxB,KAAD,CAAnB;AACA,UAAMM,QAAQ,GAAGX,IAAI,CAAC;AAACI,YAAM,EAAE;AAACK,aAAK,EAAEH;AAAR,OAAT;AAAqBD;AAArB,KAAD,CAArB;AACA,UAAMO,CAAC,GAAGV,SAAS,CAAC;AAACE,YAAM,EAAE;AAACE,SAAC,EAAEK;AAAJ,OAAT;AAAwBN;AAAxB,KAAD,CAAnB;AAEA,UAAMQ,MAAM,GAAGf,OAAO,CAAC;AAACM,YAAM,EAAE;AAACH,YAAI,EAAES,CAAP;AAAUV,YAAI,EAAEY;AAAhB,OAAT;AAA6BP;AAA7B,KAAD,CAAtB;AAEAA,WAAO,CAACS,6BAAR,CAAsCN,QAAtC;AACAH,WAAO,CAACS,6BAAR,CAAsCJ,CAAtC;AACAL,WAAO,CAACS,6BAAR,CAAsCH,QAAtC;AACAN,WAAO,CAACS,6BAAR,CAAsCF,CAAtC;AAEA,WAAOC,MAAP;AACD,GAdD,MAcO;AACL,WAAOd,IAAI,CAAC;AACVgB,WAAK,EAAE;AACLC,aAAK,EAAEV,CAAC,CAACU,KADJ;AAELT,aAAK,EAAED,CAAC,CAACC,KAFJ;AAGLU,aAAK,EAAEX,CAAC,CAACC,KAAF,KAAY,QAAZ,GAAuB,EAAvB,GAA4B;AAH9B,OADG;AAMVF;AANU,KAAD,CAAX;AAQD;AACF;AAED,OAAO,MAAMa,eAAe,GAAiB;AAC3CC,YAAU,EAAEtB,SAD+B;AAE3CuB,aAAW,EAAE,OAF8B;AAG3CC,YAAU,EAAEnB;AAH+B,CAAtC","names":["ZerosLike","complex","fill","imag","real","zerosLike","args","inputs","backend","x","dtype","realPart","input","r","imagPart","i","result","disposeIntermediateTensorInfo","attrs","shape","value","zerosLikeConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/ZerosLike.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, ZerosLike, ZerosLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\n\nimport {complex} from './Complex';\nimport {fill} from './Fill';\nimport {imag} from './Imag';\nimport {real} from './Real';\n\nexport function zerosLike(\n    args: {inputs: ZerosLikeInputs, backend: MathBackendWebGL}): TensorInfo {\n  const {inputs, backend} = args;\n  const {x} = inputs;\n\n  if (x.dtype === 'complex64') {\n    const realPart = real({inputs: {input: x}, backend});\n    const r = zerosLike({inputs: {x: realPart}, backend});\n    const imagPart = imag({inputs: {input: x}, backend});\n    const i = zerosLike({inputs: {x: imagPart}, backend});\n\n    const result = complex({inputs: {real: r, imag: i}, backend});\n\n    backend.disposeIntermediateTensorInfo(realPart);\n    backend.disposeIntermediateTensorInfo(r);\n    backend.disposeIntermediateTensorInfo(imagPart);\n    backend.disposeIntermediateTensorInfo(i);\n\n    return result;\n  } else {\n    return fill({\n      attrs: {\n        shape: x.shape,\n        dtype: x.dtype,\n        value: x.dtype === 'string' ? '' : 0\n      },\n      backend\n    });\n  }\n}\n\nexport const zerosLikeConfig: KernelConfig = {\n  kernelName: ZerosLike,\n  backendName: 'webgl',\n  kernelFunc: zerosLike as {} as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module"}