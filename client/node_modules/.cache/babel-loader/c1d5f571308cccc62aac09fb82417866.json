{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, kernel_impls, NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV5Impl = kernel_impls.nonMaxSuppressionV5Impl;\nexport function nonMaxSuppressionV5(args) {\n  backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' + 'Call tf.nonMaxSuppressionAsync() instead');\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    boxes,\n    scores\n  } = inputs;\n  const {\n    maxOutputSize,\n    iouThreshold,\n    scoreThreshold,\n    softNmsSigma\n  } = attrs;\n  const boxesVals = backend.readSync(boxes.dataId);\n  const scoresVals = backend.readSync(scores.dataId);\n  const maxOutputSizeVal = maxOutputSize;\n  const iouThresholdVal = iouThreshold;\n  const scoreThresholdVal = scoreThreshold;\n  const softNmsSigmaVal = softNmsSigma;\n  const {\n    selectedIndices,\n    selectedScores\n  } = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal, softNmsSigmaVal);\n  return [backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)), backend.makeTensorInfo([selectedScores.length], 'float32', new Float32Array(selectedScores))];\n}\nexport const nonMaxSuppressionV5Config = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'webgl',\n  kernelFunc: nonMaxSuppressionV5\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAR,EAAsBC,YAAtB,EAA8DC,mBAA9D,QAAqK,uBAArK;AAEA,MAAMC,uBAAuB,GAAGF,YAAY,CAACE,uBAA7C;AAGA,OAAM,SAAUC,mBAAV,CAA8BC,IAA9B,EAIL;AACCL,cAAY,CAACM,IAAb,CACI,0DACA,0CAFJ;AAIA,QAAM;AAACC,UAAD;AAASC,WAAT;AAAkBC;AAAlB,MAA2BJ,IAAjC;AACA,QAAM;AAACK,SAAD;AAAQC;AAAR,MAAkBJ,MAAxB;AACA,QAAM;AAACK,iBAAD;AAAgBC,gBAAhB;AAA8BC,kBAA9B;AAA8CC;AAA9C,MAA8DN,KAApE;AAEA,QAAMO,SAAS,GAAGR,OAAO,CAACS,QAAR,CAAiBP,KAAK,CAACQ,MAAvB,CAAlB;AACA,QAAMC,UAAU,GAAGX,OAAO,CAACS,QAAR,CAAiBN,MAAM,CAACO,MAAxB,CAAnB;AAEA,QAAME,gBAAgB,GAAGR,aAAzB;AACA,QAAMS,eAAe,GAAGR,YAAxB;AACA,QAAMS,iBAAiB,GAAGR,cAA1B;AACA,QAAMS,eAAe,GAAGR,YAAxB;AAEA,QAAM;AAACS,mBAAD;AAAkBC;AAAlB,MAAoCtB,uBAAuB,CAC7Da,SAD6D,EAClDG,UADkD,EACtCC,gBADsC,EACpBC,eADoB,EAE7DC,iBAF6D,EAE1CC,eAF0C,CAAjE;AAIA,SAAO,CACLf,OAAO,CAACkB,cAAR,CACI,CAACF,eAAe,CAACG,MAAjB,CADJ,EAC8B,OAD9B,EACuC,IAAIC,UAAJ,CAAeJ,eAAf,CADvC,CADK,EAGLhB,OAAO,CAACkB,cAAR,CACI,CAACD,cAAc,CAACE,MAAhB,CADJ,EAC6B,SAD7B,EACwC,IAAIE,YAAJ,CAAiBJ,cAAjB,CADxC,CAHK,CAAP;AAMD;AAED,OAAO,MAAMK,yBAAyB,GAAiB;AACrDC,YAAU,EAAE7B,mBADyC;AAErD8B,aAAW,EAAE,OAFwC;AAGrDC,YAAU,EAAE7B;AAHyC,CAAhD","names":["backend_util","kernel_impls","NonMaxSuppressionV5","nonMaxSuppressionV5Impl","nonMaxSuppressionV5","args","warn","inputs","backend","attrs","boxes","scores","maxOutputSize","iouThreshold","scoreThreshold","softNmsSigma","boxesVals","readSync","dataId","scoresVals","maxOutputSizeVal","iouThresholdVal","scoreThresholdVal","softNmsSigmaVal","selectedIndices","selectedScores","makeTensorInfo","length","Int32Array","Float32Array","nonMaxSuppressionV5Config","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/NonMaxSuppressionV5.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, kernel_impls, KernelConfig, KernelFunc, NonMaxSuppressionV5, NonMaxSuppressionV5Attrs, NonMaxSuppressionV5Inputs, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nconst nonMaxSuppressionV5Impl = kernel_impls.nonMaxSuppressionV5Impl;\nimport {MathBackendWebGL} from '../backend_webgl';\n\nexport function nonMaxSuppressionV5(args: {\n  inputs: NonMaxSuppressionV5Inputs,\n  backend: MathBackendWebGL,\n  attrs: NonMaxSuppressionV5Attrs\n}): [TensorInfo, TensorInfo] {\n  backend_util.warn(\n      'tf.nonMaxSuppression() in webgl locks the UI thread. ' +\n      'Call tf.nonMaxSuppressionAsync() instead');\n\n  const {inputs, backend, attrs} = args;\n  const {boxes, scores} = inputs;\n  const {maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma} = attrs;\n\n  const boxesVals = backend.readSync(boxes.dataId) as TypedArray;\n  const scoresVals = backend.readSync(scores.dataId) as TypedArray;\n\n  const maxOutputSizeVal = maxOutputSize;\n  const iouThresholdVal = iouThreshold;\n  const scoreThresholdVal = scoreThreshold;\n  const softNmsSigmaVal = softNmsSigma;\n\n  const {selectedIndices, selectedScores} = nonMaxSuppressionV5Impl(\n      boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal,\n      scoreThresholdVal, softNmsSigmaVal);\n\n  return [\n    backend.makeTensorInfo(\n        [selectedIndices.length], 'int32', new Int32Array(selectedIndices)),\n    backend.makeTensorInfo(\n        [selectedScores.length], 'float32', new Float32Array(selectedScores))\n  ];\n}\n\nexport const nonMaxSuppressionV5Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'webgl',\n  kernelFunc: nonMaxSuppressionV5 as {} as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module"}