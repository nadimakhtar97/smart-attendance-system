{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ClipByValue } from '../kernel_names';\nimport { greaterEqual } from '../ops/greater_equal';\nimport { lessEqual } from '../ops/less_equal';\nimport { logicalAnd } from '../ops/logical_and';\nimport { where } from '../ops/where';\nimport { zerosLike } from '../ops/zeros_like';\nexport const clipByValueGradConfig = {\n  kernelName: ClipByValue,\n  inputsToSave: ['x'],\n  gradFunc: (dy, saved, attrs) => {\n    const [x] = saved;\n    const {\n      clipValueMin,\n      clipValueMax\n    } = attrs;\n    return {\n      x: () => where(logicalAnd(greaterEqual(x, clipValueMin), lessEqual(x, clipValueMax)), dy, zerosLike(dy))\n    };\n  }\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,WAAR,QAA4C,iBAA5C;AAEA,SAAQC,YAAR,QAA2B,sBAA3B;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AAGA,OAAO,MAAMC,qBAAqB,GAAe;AAC/CC,YAAU,EAAEP,WADmC;AAE/CQ,cAAY,EAAE,CAAC,GAAD,CAFiC;AAG/CC,UAAQ,EAAE,CAACC,EAAD,EAAaC,KAAb,EAA8BC,KAA9B,KAAqD;AAC7D,UAAM,CAACC,CAAD,IAAMF,KAAZ;AACA,UAAM;AAACG,kBAAD;AAAeC;AAAf,QAA+BH,KAArC;AACA,WAAO;AACLC,OAAC,EAAE,MAAMT,KAAK,CACVD,UAAU,CAACF,YAAY,CAACY,CAAD,EAAIC,YAAJ,CAAb,EAAgCZ,SAAS,CAACW,CAAD,EAAIE,YAAJ,CAAzC,CADA,EAEVL,EAFU,EAENL,SAAS,CAACK,EAAD,CAFH;AADT,KAAP;AAKD;AAX8C,CAA1C","names":["ClipByValue","greaterEqual","lessEqual","logicalAnd","where","zerosLike","clipByValueGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","x","clipValueMin","clipValueMax"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-core/src/gradients/ClipByValue_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ClipByValue, ClipByValueAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {greaterEqual} from '../ops/greater_equal';\nimport {lessEqual} from '../ops/less_equal';\nimport {logicalAnd} from '../ops/logical_and';\nimport {where} from '../ops/where';\nimport {zerosLike} from '../ops/zeros_like';\nimport {Tensor} from '../tensor';\n\nexport const clipByValueGradConfig: GradConfig = {\n  kernelName: ClipByValue,\n  inputsToSave: ['x'],\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [x] = saved;\n    const {clipValueMin, clipValueMax} = attrs as {} as ClipByValueAttrs;\n    return {\n      x: () => where(\n          logicalAnd(greaterEqual(x, clipValueMin), lessEqual(x, clipValueMax)),\n          dy, zerosLike(dy)),\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}