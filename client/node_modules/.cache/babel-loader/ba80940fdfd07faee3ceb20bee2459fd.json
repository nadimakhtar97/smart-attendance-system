{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Select } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { logicalNot } from '../ops/logical_not';\nimport { mul } from '../ops/mul';\nimport { zerosLike } from '../ops/zeros_like';\nexport const selectGradConfig = {\n  kernelName: Select,\n  inputsToSave: ['condition'],\n  gradFunc: (dy, saved) => {\n    const [condition] = saved;\n    return {\n      // TODO(julianoks): Return null for condition gradient\n      // when backprop supports it.\n      condition: () => cast(zerosLike(condition), 'float32'),\n      t: () => mul(dy, cast(condition, dy.dtype)),\n      e: () => mul(dy, cast(logicalNot(condition), dy.dtype))\n    };\n  }\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,MAAR,QAAqB,iBAArB;AAEA,SAAQC,IAAR,QAAmB,aAAnB;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,SAAQC,GAAR,QAAkB,YAAlB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AAGA,OAAO,MAAMC,gBAAgB,GAAe;AAC1CC,YAAU,EAAEN,MAD8B;AAE1CO,cAAY,EAAE,CAAC,WAAD,CAF4B;AAG1CC,UAAQ,EAAE,CAACC,EAAD,EAAaC,KAAb,KAAgC;AACxC,UAAM,CAACC,SAAD,IAAcD,KAApB;AACA,WAAO;AACL;AACA;AACAC,eAAS,EAAE,MAAMV,IAAI,CAACG,SAAS,CAACO,SAAD,CAAV,EAAuB,SAAvB,CAHhB;AAILC,OAAC,EAAE,MAAMT,GAAG,CAACM,EAAD,EAAKR,IAAI,CAACU,SAAD,EAAYF,EAAE,CAACI,KAAf,CAAT,CAJP;AAKLC,OAAC,EAAE,MAAMX,GAAG,CAACM,EAAD,EAAKR,IAAI,CAACC,UAAU,CAACS,SAAD,CAAX,EAAwBF,EAAE,CAACI,KAA3B,CAAT;AALP,KAAP;AAOD;AAZyC,CAArC","names":["Select","cast","logicalNot","mul","zerosLike","selectGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","condition","t","dtype","e"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-core/src/gradients/Select_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Select} from '../kernel_names';\nimport {GradConfig} from '../kernel_registry';\nimport {cast} from '../ops/cast';\nimport {logicalNot} from '../ops/logical_not';\nimport {mul} from '../ops/mul';\nimport {zerosLike} from '../ops/zeros_like';\nimport {Tensor} from '../tensor';\n\nexport const selectGradConfig: GradConfig = {\n  kernelName: Select,\n  inputsToSave: ['condition'],\n  gradFunc: (dy: Tensor, saved: Tensor[]) => {\n    const [condition] = saved;\n    return {\n      // TODO(julianoks): Return null for condition gradient\n      // when backprop supports it.\n      condition: () => cast(zerosLike(condition), 'float32'),\n      t: () => mul(dy, cast(condition, dy.dtype)),\n      e: () => mul(dy, cast(logicalNot(condition), dy.dtype))\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}