{"ast":null,"code":"var _jsxFileName = \"/home/nadimakhtar97/smart-attendance-system/client/src/Components/WebCam/WebCam.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport Webcam from \"react-webcam\";\nimport styles from \"../WebCam/WebCam.module.css\";\nimport axios from 'axios';\nimport { Button, Box, Image, Flex, Text, CircularProgress, Center, VStack, Heading } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WebCam() {\n  _s();\n\n  const [image, setImage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [result, setResult] = useState();\n  const videoConstraints = {\n    width: 720,\n    height: 360,\n    facingMode: \"user\"\n  };\n  const webcamRef = useRef(null);\n  const capture = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const imageSrc = webcamRef.current.getScreenshot();\n      setImage(imageSrc);\n      const response = await axios.post('http://localhost:000/identify', {\n        \"base64image\": imageSrc\n      });\n\n      if (response.data.name == -1) {\n        setResult( /*#__PURE__*/_jsxDEV(Heading, {\n          size: \"md\",\n          children: \"Sorry no face detected !! please try again !!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 31\n        }, this));\n      } else {\n        setResult( /*#__PURE__*/_jsxDEV(Heading, {\n          size: \"md\",\n          children: [\" Welcome \", response.data.name, \" to the class. Your attendance has been marked\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 31\n        }, this));\n      }\n\n      console.log(response);\n      setIsLoading(false);\n    } catch (error) {\n      setResult( /*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        children: \"Some error occured please check!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 27\n      }, this));\n      setIsLoading(false);\n      console.error(\"This is an error\", error);\n    }\n  }, [webcamRef]);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignContent: \"space-between\",\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      mirrored: true,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      screenshotQuality: 1,\n      height: 360,\n      width: 720,\n      videoConstraints: videoConstraints\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"md\",\n      width: \"40%\",\n      m: \"40px\",\n      colorScheme: \"blue\",\n      onClick: () => {\n        capture();\n      },\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: \"Capture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 101\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(VStack, {\n      children: [/*#__PURE__*/_jsxDEV(Center, {\n        m: \"20px\",\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          size: \"md\",\n          children: \"Please wait face recognition is under process\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Center, {\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          isIndeterminate: true,\n          color: \"blue.300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this) : null, !isLoading ? /*#__PURE__*/_jsxDEV(Center, {\n      mt: \"20px\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 28\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WebCam, \"c6zM9uiix7j1X9pQsqSwDpzZCl4=\");\n\n_c = WebCam;\nexport default WebCam;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebCam\");","map":{"version":3,"sources":["/home/nadimakhtar97/smart-attendance-system/client/src/Components/WebCam/WebCam.js"],"names":["React","useState","useRef","useCallback","Webcam","styles","axios","Button","Box","Image","Flex","Text","CircularProgress","Center","VStack","Heading","WebCam","image","setImage","isLoading","setIsLoading","result","setResult","videoConstraints","width","height","facingMode","webcamRef","capture","imageSrc","current","getScreenshot","response","post","data","name","console","log","error"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback } from 'react'\nimport Webcam from \"react-webcam\";\nimport styles from \"../WebCam/WebCam.module.css\";\nimport axios from 'axios'\nimport { Button, Box, Image, Flex, Text, CircularProgress, Center, VStack, Heading } from '@chakra-ui/react'\n\nfunction WebCam() {\n\n    const [image, setImage] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    const [result, setResult] = useState()\n    const videoConstraints = {\n        width: 720,\n        height: 360,\n        facingMode: \"user\"\n    };\n\n    const webcamRef = useRef(null);\n    const capture = useCallback(\n        async () => {\n            try {\n                setIsLoading(true)\n                const imageSrc = webcamRef.current.getScreenshot();\n                setImage(imageSrc);\n                const response = await axios.post('http://localhost:000/identify', { \"base64image\": imageSrc })\n                if(response.data.name == -1){\n                    setResult(<Heading size='md'>Sorry no face detected !! please try again !!</Heading>)\n                }else{\n                    setResult(<Heading size='md'> Welcome {response.data.name} to the class. Your attendance has been marked</Heading>)\n                }\n                console.log(response);\n                setIsLoading(false)\n            }\n            catch (error) {\n                setResult(<Heading size='md'>Some error occured please check!!</Heading>)\n                setIsLoading(false);\n                console.error(\"This is an error\",error)\n            }\n\n        },\n        [webcamRef]\n    );\n    return (\n        <Flex justifyContent='center' alignItems='center' alignContent='space-between' direction='column'>\n            <Webcam\n                mirrored={true}\n                ref={webcamRef}\n                screenshotFormat=\"image/jpeg\"\n                screenshotQuality={1}\n                height={360}\n                width={720}\n                videoConstraints={videoConstraints}\n            ></Webcam>\n            <Button size='md' width='40%' m='40px' colorScheme='blue' onClick={() => { capture() }}><Text>Capture</Text></Button>\n            {\n                isLoading ? (\n                    <VStack>\n                        <Center m='20px'>\n                            <Heading size='md'>Please wait face recognition is under process</Heading>\n                        </Center>\n                        <Center>\n                            <CircularProgress isIndeterminate color='blue.300' />\n                        </Center>\n                    </VStack>\n\n                ) : null\n            }\n\n            { !isLoading ? <Center mt='20px'>\n                {result}\n            </Center> : null}\n\n            {/* {image ? <Box>\n                <Image src={image}/>\n            </Box> : null} */}\n        </Flex>\n\n    )\n}\n\nexport default WebCam"]},"metadata":{},"sourceType":"module"}