{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Select, upcastType } from '@tensorflow/tfjs-core';\nimport { SelectProgram } from '../select_gpu';\nexport function select(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    condition,\n    t,\n    e\n  } = inputs;\n  const program = new SelectProgram(condition.shape.length, t.shape, t.shape.length);\n  return backend.runWebGLProgram(program, [condition, t, e], upcastType(t.dtype, e.dtype));\n}\nexport const selectConfig = {\n  kernelName: Select,\n  backendName: 'webgl',\n  kernelFunc: select\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAkCA,MAAlC,EAAoEC,UAApE,QAAqF,uBAArF;AAGA,SAAQC,aAAR,QAA4B,eAA5B;AAEA,OAAM,SAAUC,MAAV,CAAiBC,IAAjB,EAAwE;AAE5E,QAAM;AAACC,UAAD;AAASC;AAAT,MAAoBF,IAA1B;AACA,QAAM;AAACG,aAAD;AAAYC,KAAZ;AAAeC;AAAf,MAAoBJ,MAA1B;AAEA,QAAMK,OAAO,GACT,IAAIR,aAAJ,CAAkBK,SAAS,CAACI,KAAV,CAAgBC,MAAlC,EAA0CJ,CAAC,CAACG,KAA5C,EAAmDH,CAAC,CAACG,KAAF,CAAQC,MAA3D,CADJ;AAEA,SAAON,OAAO,CAACO,eAAR,CACHH,OADG,EACM,CAACH,SAAD,EAAYC,CAAZ,EAAeC,CAAf,CADN,EACyBR,UAAU,CAACO,CAAC,CAACM,KAAH,EAAUL,CAAC,CAACK,KAAZ,CADnC,CAAP;AAED;AAED,OAAO,MAAMC,YAAY,GAAiB;AACxCC,YAAU,EAAEhB,MAD4B;AAExCiB,aAAW,EAAE,OAF2B;AAGxCC,YAAU,EAAEf;AAH4B,CAAnC","names":["Select","upcastType","SelectProgram","select","args","inputs","backend","condition","t","e","program","shape","length","runWebGLProgram","dtype","selectConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/Select.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Select, SelectInputs, TensorInfo, upcastType} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {SelectProgram} from '../select_gpu';\n\nexport function select(args: {inputs: SelectInputs, backend: MathBackendWebGL}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {condition, t, e} = inputs;\n\n  const program =\n      new SelectProgram(condition.shape.length, t.shape, t.shape.length);\n  return backend.runWebGLProgram(\n      program, [condition, t, e], upcastType(t.dtype, e.dtype));\n}\n\nexport const selectConfig: KernelConfig = {\n  kernelName: Select,\n  backendName: 'webgl',\n  kernelFunc: select as {} as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module"}