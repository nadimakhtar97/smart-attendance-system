{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ComplexAbs } from '@tensorflow/tfjs-core';\nimport { ComplexAbsProgram } from '../complex_abs_gpu'; // Returns a TensorInfo with the complex shape and the dataId of the\n// underlying part. We need to do this because a reshaped complex tensor is\n// not reflected in its parts.\n\nfunction makeComplexComponentTensorInfo(complexTensor, complexPart) {\n  return {\n    dataId: complexPart.dataId,\n    dtype: complexPart.dtype,\n    shape: complexTensor.shape\n  };\n}\n\nexport function complexAbs(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    x\n  } = inputs;\n  const xData = backend.texData.get(x.dataId);\n  const program = new ComplexAbsProgram(x.shape);\n  const programInputs = [makeComplexComponentTensorInfo(x, xData.complexTensorInfos.real), makeComplexComponentTensorInfo(x, xData.complexTensorInfos.imag)];\n  return backend.runWebGLProgram(program, programInputs, programInputs[0].dtype);\n}\nexport const complexAbsConfig = {\n  kernelName: ComplexAbs,\n  backendName: 'webgl',\n  kernelFunc: complexAbs\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,UAAR,QAAiF,uBAAjF;AAGA,SAAQC,iBAAR,QAAgC,oBAAhC,C,CAEA;AACA;AACA;;AACA,SAASC,8BAAT,CACIC,aADJ,EAC+BC,WAD/B,EACsD;AACpD,SAAO;AACLC,UAAM,EAAED,WAAW,CAACC,MADf;AAELC,SAAK,EAAEF,WAAW,CAACE,KAFd;AAGLC,SAAK,EAAEJ,aAAa,CAACI;AAHhB,GAAP;AAKD;;AAED,OAAM,SAAUC,UAAV,CACFC,IADE,EACyD;AAC7D,QAAM;AAACC,UAAD;AAASC;AAAT,MAAoBF,IAA1B;AACA,QAAM;AAACG;AAAD,MAAMF,MAAZ;AAEA,QAAMG,KAAK,GAAGF,OAAO,CAACG,OAAR,CAAgBC,GAAhB,CAAoBH,CAAC,CAACP,MAAtB,CAAd;AAEA,QAAMW,OAAO,GAAG,IAAIf,iBAAJ,CAAsBW,CAAC,CAACL,KAAxB,CAAhB;AACA,QAAMU,aAAa,GAAG,CACpBf,8BAA8B,CAACU,CAAD,EAAIC,KAAK,CAACK,kBAAN,CAAyBC,IAA7B,CADV,EAEpBjB,8BAA8B,CAACU,CAAD,EAAIC,KAAK,CAACK,kBAAN,CAAyBE,IAA7B,CAFV,CAAtB;AAKA,SAAOT,OAAO,CAACU,eAAR,CACHL,OADG,EACMC,aADN,EACqBA,aAAa,CAAC,CAAD,CAAb,CAAiBX,KADtC,CAAP;AAED;AAED,OAAO,MAAMgB,gBAAgB,GAAiB;AAC5CC,YAAU,EAAEvB,UADgC;AAE5CwB,aAAW,EAAE,OAF+B;AAG5CC,YAAU,EAAEjB;AAHgC,CAAvC","names":["ComplexAbs","ComplexAbsProgram","makeComplexComponentTensorInfo","complexTensor","complexPart","dataId","dtype","shape","complexAbs","args","inputs","backend","x","xData","texData","get","program","programInputs","complexTensorInfos","real","imag","runWebGLProgram","complexAbsConfig","kernelName","backendName","kernelFunc"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/kernels/ComplexAbs.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ComplexAbs, ComplexAbsInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {ComplexAbsProgram} from '../complex_abs_gpu';\n\n// Returns a TensorInfo with the complex shape and the dataId of the\n// underlying part. We need to do this because a reshaped complex tensor is\n// not reflected in its parts.\nfunction makeComplexComponentTensorInfo(\n    complexTensor: TensorInfo, complexPart: TensorInfo): TensorInfo {\n  return {\n    dataId: complexPart.dataId,\n    dtype: complexPart.dtype,\n    shape: complexTensor.shape\n  };\n}\n\nexport function complexAbs(\n    args: {inputs: ComplexAbsInputs, backend: MathBackendWebGL}): TensorInfo {\n  const {inputs, backend} = args;\n  const {x} = inputs;\n\n  const xData = backend.texData.get(x.dataId);\n\n  const program = new ComplexAbsProgram(x.shape);\n  const programInputs = [\n    makeComplexComponentTensorInfo(x, xData.complexTensorInfos.real),\n    makeComplexComponentTensorInfo(x, xData.complexTensorInfos.imag),\n  ];\n\n  return backend.runWebGLProgram(\n      program, programInputs, programInputs[0].dtype);\n}\n\nexport const complexAbsConfig: KernelConfig = {\n  kernelName: ComplexAbs,\n  backendName: 'webgl',\n  kernelFunc: complexAbs as {} as KernelFunc\n};\n"]},"metadata":{},"sourceType":"module"}