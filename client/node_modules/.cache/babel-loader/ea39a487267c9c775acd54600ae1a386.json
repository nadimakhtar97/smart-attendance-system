{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class TransposeProgram {\n  constructor(aShape, newDim) {\n    this.variableNames = ['A'];\n    const outputShape = new Array(aShape.length);\n\n    for (let i = 0; i < outputShape.length; i++) {\n      outputShape[i] = aShape[newDim[i]];\n    }\n\n    this.outputShape = outputShape;\n    this.rank = outputShape.length;\n    const dtype = getCoordsDataType(this.rank);\n    const switched = getSwitchedCoords(newDim);\n    this.userCode = `\n    void main() {\n      ${dtype} resRC = getOutputCoords();\n      setOutput(getA(${switched}));\n    }\n    `;\n  }\n\n}\n\nfunction getSwitchedCoords(newDim) {\n  const rank = newDim.length;\n\n  if (rank > 6) {\n    throw Error(`Transpose for rank ${rank} is not yet supported`);\n  }\n\n  const originalOrder = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w', 'resRC.u', 'resRC.v'];\n  const switchedCoords = new Array(rank);\n\n  for (let i = 0; i < newDim.length; i++) {\n    switchedCoords[newDim[i]] = originalOrder[i];\n  }\n\n  return switchedCoords.join();\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAkBA,SAAQA,iBAAR,QAAgC,mBAAhC;AAEA,OAAM,MAAOC,gBAAP,CAAuB;AAM3BC,cAAYC,MAAZ,EAA8BC,MAA9B,EAA8C;AAL9C,yBAAgB,CAAC,GAAD,CAAhB;AAME,UAAMC,WAAW,GAAa,IAAIC,KAAJ,CAAUH,MAAM,CAACI,MAAjB,CAA9B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,WAAW,CAACE,MAAhC,EAAwCC,CAAC,EAAzC,EAA6C;AAC3CH,iBAAW,CAACG,CAAD,CAAX,GAAiBL,MAAM,CAACC,MAAM,CAACI,CAAD,CAAP,CAAvB;AACD;;AACD,SAAKH,WAAL,GAAmBA,WAAnB;AACA,SAAKI,IAAL,GAAYJ,WAAW,CAACE,MAAxB;AACA,UAAMG,KAAK,GAAGV,iBAAiB,CAAC,KAAKS,IAAN,CAA/B;AACA,UAAME,QAAQ,GAAGC,iBAAiB,CAACR,MAAD,CAAlC;AAEA,SAAKS,QAAL,GAAgB;;QAEZH,KAAK;uBACUC,QAAQ;;KAH3B;AAMD;;AAtB0B;;AAyB7B,SAASC,iBAAT,CAA2BR,MAA3B,EAA2C;AACzC,QAAMK,IAAI,GAAGL,MAAM,CAACG,MAApB;;AACA,MAAIE,IAAI,GAAG,CAAX,EAAc;AACZ,UAAMK,KAAK,CAAC,sBAAsBL,IAAI,uBAA3B,CAAX;AACD;;AACD,QAAMM,aAAa,GACf,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,CADJ;AAEA,QAAMC,cAAc,GAAG,IAAIV,KAAJ,CAAUG,IAAV,CAAvB;;AACA,OAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACG,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;AACtCQ,kBAAc,CAACZ,MAAM,CAACI,CAAD,CAAP,CAAd,GAA4BO,aAAa,CAACP,CAAD,CAAzC;AACD;;AACD,SAAOQ,cAAc,CAACC,IAAf,EAAP;AACD","names":["getCoordsDataType","TransposeProgram","constructor","aShape","newDim","outputShape","Array","length","i","rank","dtype","switched","getSwitchedCoords","userCode","Error","originalOrder","switchedCoords","join"],"sources":["/home/nadimakhtar97/smart-attendance-system/tfjs-backend-webgl/src/transpose_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class TransposeProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  outputShape: number[];\n  userCode: string;\n  rank: number;\n\n  constructor(aShape: number[], newDim: number[]) {\n    const outputShape: number[] = new Array(aShape.length);\n    for (let i = 0; i < outputShape.length; i++) {\n      outputShape[i] = aShape[newDim[i]];\n    }\n    this.outputShape = outputShape;\n    this.rank = outputShape.length;\n    const dtype = getCoordsDataType(this.rank);\n    const switched = getSwitchedCoords(newDim);\n\n    this.userCode = `\n    void main() {\n      ${dtype} resRC = getOutputCoords();\n      setOutput(getA(${switched}));\n    }\n    `;\n  }\n}\n\nfunction getSwitchedCoords(newDim: number[]): string {\n  const rank = newDim.length;\n  if (rank > 6) {\n    throw Error(`Transpose for rank ${rank} is not yet supported`);\n  }\n  const originalOrder =\n      ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w', 'resRC.u', 'resRC.v'];\n  const switchedCoords = new Array(rank);\n  for (let i = 0; i < newDim.length; i++) {\n    switchedCoords[newDim[i]] = originalOrder[i];\n  }\n  return switchedCoords.join();\n}\n"]},"metadata":{},"sourceType":"module"}